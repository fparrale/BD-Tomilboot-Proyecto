-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Servidor: 127.0.0.1
-- Tiempo de generación: 26-06-2025 a las 15:01:53
-- Versión del servidor: 10.4.32-MariaDB
-- Versión de PHP: 8.2.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Base de datos: `fersoft_tomilboot`
--

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `tm_rol`
--

CREATE TABLE `tm_rol` (
  `ROL_ID` int(11) NOT NULL,
  `ROL_NOM` varchar(255) NOT NULL,
  `EST` int(11) NOT NULL,
  `FECH_CREA` datetime NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `tm_rol`
--

INSERT INTO `tm_rol` (`ROL_ID`, `ROL_NOM`, `EST`, `FECH_CREA`) VALUES
(1, 'Usuario', 1, '2025-04-28 15:38:22'),
(2, 'Soporte', 1, '2025-04-28 15:38:22');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `tm_usuario`
--

CREATE TABLE `tm_usuario` (
  `USU_ID` int(11) NOT NULL,
  `USU_NOM` varchar(150) NOT NULL,
  `USU_APE` varchar(150) NOT NULL,
  `USU_CORREO` varchar(150) NOT NULL,
  `USU_PASS` varchar(150) NOT NULL,
  `ROL_ID` int(11) DEFAULT NULL,
  `FECH_CREA` datetime NOT NULL,
  `EST` int(11) NOT NULL,
  `USU_IMG` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_spanish_ci;

--
-- Volcado de datos para la tabla `tm_usuario`
--

INSERT INTO `tm_usuario` (`USU_ID`, `USU_NOM`, `USU_APE`, `USU_CORREO`, `USU_PASS`, `ROL_ID`, `FECH_CREA`, `EST`, `USU_IMG`) VALUES
(1, 'Maria', 'Basurto', 'Mafer12@gmail.com', '$2y$10$eWMOf.Pt3QBvinSWk.Nx1e7MBbsxYsbM5RiemYmAGLKPQ9xnGV76m', 2, '2025-04-14 18:25:41', 1, 'user-dummy-img.jpg'),
(2, 'Dennys', 'Tierra', 'dennismarlon14@gmail.com', '$2y$10$307tewEwXI5Mz62pM8SEXuifH4aRrtdmqv6CoiqDoOKUvQxo/dM/C', 1, '2025-04-14 18:25:41', 1, 'user-dummy-img.jpg'),
(3, 'luis', 'sellan', 'jluisellan@mail.com', '$2y$10$49HUIUYQvBVpJtPNj1Au4.quI8hecSo8KRaMqsRwkXnnYMVsQ232i', 1, '2025-04-28 20:50:30', 1, '1231469634.png'),
(4, 'Milena', 'tóala', 'milena@gmail.com', '$2y$10$t6tkFrX4GgRMB9Js5mQVxOwkoyzsQyXlqLTcOGOc68tAHpNfYNvEG', 1, '2025-05-27 00:37:36', 1, 'user-dummy-img.jpg'),
(5, 'luis daniel', 'sellan Alvarado', 'sellanjose2000@gmail.com', '$2y$10$brzMkxN3JNJBy2mir5qGFOlg9n1EL7Ahvt3DhBhFcacy8HyhvWC/K', 1, '2025-06-24 12:26:49', 1, 'user-dummy-img.jpg'),
(6, 'angie', 'morales', 'angie@gmail.com', '$2y$10$emIpn1DjForYaZRX5y6wnuXPsNoANXqueyMOXyV5IiW8OF.bAjnBS', 1, '2025-06-25 21:38:42', 1, '365691252.png');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `vulnerabilidades`
--

CREATE TABLE `vulnerabilidades` (
  `id` int(11) NOT NULL,
  `archivo` varchar(255) DEFAULT NULL,
  `tipo_vulnerabilidad` varchar(255) DEFAULT NULL,
  `codigo_vulnerable` text DEFAULT NULL,
  `solucion_propuesta` text DEFAULT NULL,
  `fecha_subida` timestamp NOT NULL DEFAULT current_timestamp(),
  `id_zip` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_spanish_ci;

--
-- Volcado de datos para la tabla `vulnerabilidades`
--

INSERT INTO `vulnerabilidades` (`id`, `archivo`, `tipo_vulnerabilidad`, `codigo_vulnerable`, `solucion_propuesta`, `fecha_subida`, `id_zip`) VALUES
(1, 'ResponseApi.cs', 'Detectado por GPT', '﻿using System.Net;\r\n\r\nnamespace FermaOrders.API.Controllers.Response\r\n{\r\n    public class RespuestaAPI\r\n    {\r\n        public RespuestaAPI()\r\n        {\r\n            ErrorMessages = new List<string>();\r\n        }\r\n\r\n        public HttpStatusCode StatusCode { get; set; }\r\n\r\n        public bool IsSuccess { get; set; } = true;\r\n\r\n        public List<string> ErrorMessages { get; set; }\r\n\r\n        public object Result { get; set; }\r\n    }\r\n}\r\n', '```html\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <div class=\"card border-danger\">\n                <div class=\"card-header bg-danger text-white\">\n                    Vulnerabilidades\n                </div>\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">Ausencia de Validación de Datos</h5>\n                    <p class=\"card-text\">\n                        <b>Tipo:</b> Vulnerabilidad de seguridad general, podría llevar a problemas de integridad y disponibilidad.\n                        <br>\n                        <b>Línea aproximada:</b> El problema no está en una línea específica del código proporcionado, sino en la ausencia de validación en el uso de la clase `RespuestaAPI`. Esta clase se usa para construir respuestas HTTP, pero no hay validación de los datos que se insertan en sus propiedades `ErrorMessages` y `Result`.\n                        <br>\n                        <b>Descripción:</b> Si los datos que se asignan a las propiedades `ErrorMessages` o `Result` no se validan (por ejemplo, para evitar inyección de código o datos sensibles), se podría inyectar código malicioso en la respuesta HTTP. Esto podría permitir la ejecución de scripts del lado del cliente (XSS) si el contenido de `Result` o `ErrorMessages` se muestra directamente en la interfaz de usuario, o la filtración de datos sensibles.\n                        <br>\n                        <b>Cómo mitigarla:</b>\n                        <ul>\n                            <li>Validar y escapar los datos antes de asignarlos a `ErrorMessages` y `Result`.  Para `ErrorMessages`, esto implica escapar caracteres especiales HTML. Para `Result`, la validación depende del tipo de datos y cómo se utiliza en el cliente. Por ejemplo, si `Result` contiene datos JSON, asegurar que no contenga scripts o datos inesperados.</li>\n                            <li>Implementar un mecanismo de serialización seguro para el `Result`, que evite la inclusión de código ejecutable.</li>\n                            <li>Considerar el uso de una biblioteca de serialización que incluya mitigaciones automáticas contra XSS.</li>\n                        </ul>\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-6\">\n            <div class=\"card border-warning\">\n                <div class=\"card-header bg-warning text-white\">\n                    Métricas de Calidad del Código\n                </div>\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">Análisis de Calidad</h5>\n                    <p class=\"card-text\">\n                        <b>Complejidad:</b> La clase en sí es simple, con una complejidad baja.\n                        <br>\n                        <b>Duplicación:</b> No hay duplicación evidente en este fragmento de código.\n                        <br>\n                        <b>Legibilidad:</b> El código es bastante legible. Los nombres de las propiedades son descriptivos.\n                        <br>\n                        <b>Acoplamiento:</b> El acoplamiento es bajo. La clase depende directamente de `System.Net` para `HttpStatusCode` y de `List<string>`.\n                        <br>\n                        <b>Mejoras Sugeridas:</b>\n                        <ul>\n                            <li><b>Validación:</b> Añadir validación de datos como se menciona en la sección de vulnerabilidades.</li>\n                            <li><b>Consistencia:</b> Considerar si el valor predeterminado de `IsSuccess` debería ser `false`, dependiendo del caso de uso.</li>\n                            <li><b>Manejo de Errores:</b> Considerar encapsular la lista de errores en un objeto más estructurado.  Esto podría incluir un código de error específico además del mensaje.</li>\n                            <li><b>Inmutabilidad (Opcional):</b>  Si el objeto `RespuestaAPI` debe ser inmutable después de su creación, se podría considerar el uso de propiedades de solo lectura (getter) y un constructor para inicializar el estado.</li>\n                        </ul>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n            <div class=\'card border-success\'>\n                <div class=\'card-header bg-success text-white\'>\n                    Solución Propuesta (Fragmento de Ejemplo)\n                </div>\n                <div class=\'card-body\'>\n                    <pre>\n                        <code>\nusing System.Net;\nusing System.Web; // Necesario para HttpUtility.HtmlEncode\n\nnamespace FermaOrders.API.Controllers.Response\n{\n    public class RespuestaAPI\n    {\n        public RespuestaAPI()\n        {\n            ErrorMessages = new List&lt;string&gt;();\n        }\n\n        public HttpStatusCode StatusCode { get; set; }\n\n        public bool IsSuccess { get; set; } = true;\n\n        private List&lt;string&gt; _errorMessages;\n        public List&lt;string&gt; ErrorMessages\n        {\n            get { return _errorMessages; }\n            set\n            {\n                _errorMessages = new List&lt;string&gt;();\n                if (value != null)\n                {\n                    foreach (var message in value)\n                    {\n                        _errorMessages.Add(HtmlEncode(message)); // Escapado HTML\n                    }\n                }\n            }\n        }\n\n        public object Result { get; set; }\n\n        // Método de utilidad para escapado HTML\n        private string HtmlEncode(string text)\n        {\n            if (string.IsNullOrEmpty(text))\n            {\n                return text;\n            }\n            return HttpUtility.HtmlEncode(text);\n        }\n    }\n}\n                        </code>\n                    </pre>\n                    <p class=\'card-text\'>\n                        <b>Explicación de la Solución:</b>\n                        <ul>\n                            <li>Se ha añadido la referencia a <code>System.Web</code> y el uso de <code>HttpUtility.HtmlEncode</code> para realizar el escape HTML de los mensajes de error.</li>\n                            <li>El setter de la propiedad `ErrorMessages` ahora itera sobre la lista de mensajes que se asignan y aplica el escape HTML a cada uno antes de agregarlos a la lista interna `_errorMessages`. Esto ayuda a prevenir ataques XSS.</li>\n                             <li>Se introduce un método privado `HtmlEncode` para encapsular la lógica de escape y mejorar la legibilidad.</li>\n                        </ul>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n```\n', '2025-06-10 02:26:46', 1),
(2, 'ICategoriaRepositorio.cs', 'Detectado por GPT', '﻿using ApiPeliculas.Modelos;\r\n\r\nnamespace ApiPeliculas.Repositorio.IRepositorio\r\n{\r\n    public interface ICategoriaRepositorio\r\n    {\r\n        ICollection<Categoria> GetCategorias();\r\n        Categoria GetCategoria(int CategoriaId);\r\n        bool ExisteCategoria(int id);\r\n        bool ExisteCategoria(string nombre);\r\n\r\n        bool CrearCategoria(Categoria categoria);\r\n        bool ActualizarCategoria(Categoria categoria);\r\n        bool BorrarCategoria(Categoria categoria);\r\n        bool Guardar();\r\n    }\r\n}\r\n', '```html\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"card border-danger\">\n        <div class=\"card-header bg-danger text-white\">\n          Vulnerabilidades de Seguridad\n        </div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Análisis de Seguridad</h5>\n          <p class=\"card-text\">\n            El código proporcionado, correspondiente a una interfaz de repositorio,\n            <b>no presenta vulnerabilidades de seguridad inherentes directamente en su definición.</b>\n            Las vulnerabilidades surgirían en la <b>implementación</b> de esta interfaz en una clase concreta.\n            A continuación, se describen posibles riesgos comunes en implementaciones de repositorios,\n            considerando que la interfaz por sí sola no ejecuta ninguna lógica.\n          </p>\n          <ul>\n            <li>\n              <b>Inyección SQL (potencial):</b> En la implementación de los métodos como\n              <code>ExisteCategoria(string nombre)</code>, <code>GetCategoria(int CategoriaId)</code>,\n              <code>CrearCategoria(Categoria categoria)</code>, <code>ActualizarCategoria(Categoria categoria)</code>\n              y <code>BorrarCategoria(Categoria categoria)</code>, si se construye la consulta SQL directamente\n              concatenando cadenas de texto, podría existir una vulnerabilidad de inyección SQL.  Este problema surge en la <b>IMPLEMENTACION</b> de la interfaz, no en la propia interfaz.\n              <br>\n              <b>Línea Aproximada (en la IMPLEMENTACIÓN):</b> Depende de la implementación específica de cada método.\n              <br>\n              <b>Mitigación:</b> Usar <b>parámetros parametrizados</b> u ORMs (Entity Framework Core) que escapen las entradas del usuario al generar las consultas SQL.\n            </li>\n            <li>\n              <b>Exposición de Información Sensible:</b> Si la implementación del repositorio no controla adecuadamente\n              los permisos de acceso a los datos, podría permitir la exposición de información sensible a usuarios no autorizados.  De nuevo, en la <b>IMPLEMENTACION</b>.\n              <br>\n              <b>Línea Aproximada (en la IMPLEMENTACIÓN):</b> Depende de la lógica de autorización implementada.\n              <br>\n              <b>Mitigación:</b> Implementar un sistema de <b>autenticación y autorización</b> robusto y granular.\n            </li>\n            <li>\n              <b>Denegación de Servicio (DoS) (potencial):</b> Si la implementación de los métodos no se optimiza adecuadamente,\n              especialmente en consultas grandes o con filtros complejos, podría llevar a un consumo excesivo de recursos\n              y potencialmente a una denegación de servicio. En la <b>IMPLEMENTACION</b>.\n              <br>\n              <b>Línea Aproximada (en la IMPLEMENTACIÓN):</b> Depende de la eficiencia de las consultas y la carga de datos.\n              <br>\n              <b>Mitigación:</b> Optimizar las consultas, usar índices adecuados y considerar la paginación de los resultados.  También aplicar limitación de tasa (rate limiting).\n            </li>\n            <li>\n              <b>Desbordamiento de búfer (potencial):</b> Si los datos entrantes (por ejemplo, en el método `CrearCategoria`) no se validan correctamente\n               antes de ser almacenados, podría haber un desbordamiento de búfer en la base de datos, provocando un error o, en casos extremos, la ejecución de código malicioso. En la <b>IMPLEMENTACION</b>.\n                <br>\n                <b>Línea Aproximada (en la IMPLEMENTACIÓN):</b> Depende de la validación de datos realizada.\n                <br>\n                <b>Mitigación:</b> Validar exhaustivamente los datos de entrada (longitud, tipo, formato) antes de guardarlos.\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"card border-warning\">\n        <div class=\"card-header bg-warning text-white\">\n          Métricas de Calidad del Código\n        </div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Análisis de Calidad</h5>\n          <p class=\"card-text\">\n            El código de la interfaz en sí es relativamente simple y directo.  Sin embargo, se pueden destacar algunos puntos:\n          </p>\n          <ul>\n            <li>\n              <b>Complejidad:</b> Baja. La interfaz define un conjunto de operaciones básicas CRUD (Crear, Leer, Actualizar, Borrar) y algunas funciones de búsqueda.\n              <br>\n              <b>Mejora:</b> No aplica, la complejidad es apropiada para el propósito de la interfaz.\n            </li>\n            <li>\n              <b>Duplicación:</b> No hay duplicación en la interfaz. La interfaz no implementa funcionalidad alguna.\n              <br>\n              <b>Mejora:</b> No aplica.\n            </li>\n            <li>\n              <b>Legibilidad:</b> Buena. Los nombres de los métodos son claros y descriptivos, siguiendo las convenciones de nombrado de C#.\n              <br>\n              <b>Mejora:</b> No aplica.\n            </li>\n            <li>\n              <b>Acoplamiento:</b> Bajo. La interfaz depende únicamente de la clase <code>Categoria</code>, lo que la hace relativamente independiente de otras partes del sistema.\n              <br>\n              <b>Mejora:</b> No aplica, el acoplamiento es el esperado.\n            </li>\n            <li>\n              <b>Cohesión:</b> Alta. Todos los métodos de la interfaz están relacionados con la gestión de objetos <code>Categoria</code>, lo que indica una alta cohesión.\n              <br>\n              <b>Mejora:</b> No aplica.\n            </li>\n            <li>\n              <b>Testabilidad:</b> Buena.  Es fácil crear mocks (simulaciones) de esta interfaz para probar otras clases que dependan del repositorio.\n              <br>\n              <b>Mejora:</b> No aplica.\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card border-success\">\n        <div class=\"card-header bg-success text-white\">\n          Solución Propuesta\n        </div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Recomendaciones Generales</h5>\n          <p class=\"card-text\">\n            Para mitigar las posibles vulnerabilidades en la *implementación* de esta interfaz y mejorar la calidad del código en general, se recomienda:\n          </p>\n          <ul>\n            <li>\n              <b>Usar un ORM (Entity Framework Core):</b> Facilita la interacción con la base de datos de forma segura, previniendo la inyección SQL.\n            </li>\n            <li>\n              <b>Validar los datos de entrada:</b> Validar exhaustivamente los datos antes de guardarlos en la base de datos.\n            </li>\n            <li>\n              <b>Implementar un sistema de autenticación y autorización:</b>  Controlar el acceso a los datos y funcionalidades del repositorio.\n            </li>\n            <li>\n              <b>Optimizar las consultas:</b>  Asegurar que las consultas sean eficientes y no consuman demasiados recursos. Usar índices apropiadamente.\n            </li>\n            <li>\n              <b>Implementar manejo de errores:</b> Registrar los errores adecuadamente para facilitar la depuración y el mantenimiento.\n            </li>\n            <li>\n              <b>Aplicar Principios SOLID:</b>  Asegurar que el código sea modular, mantenible y fácil de probar.\n            </li>\n            <li>\n              <b>Realizar pruebas unitarias y de integración:</b> Verificar el correcto funcionamiento del repositorio y su interacción con la base de datos.\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n', '2025-06-10 02:40:23', 2),
(3, 'IPeliculaRepositorio.cs', 'Detectado por GPT', '﻿using ApiPeliculas.Modelos;\r\n\r\nnamespace ApiPeliculas.Repositorio.IRepositorio\r\n{\r\n    public interface IPeliculaRepositorio\r\n    {\r\n        //V1\r\n        //ICollection<Pelicula> GetPeliculas();\r\n\r\n        //V2\r\n        ICollection<Pelicula> GetPeliculas(int pageNumber, int pageSize);\r\n        int GetTotalPeliculas();\r\n        ICollection<Pelicula> GetPeliculasEnCategoria(int catId);\r\n        IEnumerable<Pelicula> BuscarPelicula(string nombre);\r\n        Pelicula GetPelicula(int peliculaId);\r\n        bool ExistePelicula(int id);\r\n        bool ExistePelicula(string nombre);\r\n\r\n        bool CrearPelicula(Pelicula pelicula);\r\n        bool ActualizarPelicula(Pelicula pelicula);\r\n        bool BorrarPelicula(Pelicula pelicula);\r\n        bool Guardar();\r\n    }\r\n}\r\n', '```html\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card\">\n        <div class=\"card-header bg-danger text-white\">\n          Análisis de Seguridad y Calidad del Código\n        </div>\n        <div class=\"card-body\">\n          <p class=\"card-text\">El código proporcionado define una interfaz `IPeliculaRepositorio` para interactuar con datos de películas.  A continuación, se presenta un análisis de seguridad y calidad del código.</p>\n\n          <div class=\"card mt-3\">\n            <div class=\"card-header bg-warning\">\n              Vulnerabilidades de Seguridad\n            </div>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Si bien el código proporcionado es una interfaz y no contiene la implementación, es importante considerar las posibles vulnerabilidades que podrían surgir en la implementación de esta interfaz, especialmente en el repositorio concreto que la implemente.</p>\n\n              <ul>\n                <li>\n                  <strong>Tipo: Inyección SQL (Potencial)</strong>\n                  <br>\n                  <strong>Línea Aproximada:</strong> La vulnerabilidad no está directamente en este código, pero es un riesgo al implementar la función `BuscarPelicula(string nombre)` en el repositorio concreto.\n                  <br>\n                  <strong>Descripción:</strong> Si el parámetro `nombre` en la función `BuscarPelicula` se usa directamente en una consulta SQL sin la debida sanitización o parametrización, podría ser vulnerable a inyección SQL. Un atacante podría inyectar código SQL malicioso a través de este parámetro.\n                  <br>\n                  <strong>Mitigación:</strong>\n                  <ul>\n                    <li>Utilizar siempre consultas parametrizadas o ORM (Object-Relational Mapper) como Entity Framework Core que manejan la parametrización automáticamente.</li>\n                    <li>Validar y sanear la entrada `nombre` antes de utilizarla en la consulta. Considerar una lista blanca de caracteres permitidos.</li>\n                  </ul>\n                </li>\n                <li>\n                  <strong>Tipo: Ataque de Denegación de Servicio (DoS) (Potencial)</strong>\n                  <br>\n                  <strong>Línea Aproximada:</strong> Relacionado con `GetPeliculas(int pageNumber, int pageSize)` y `BuscarPelicula(string nombre)`.\n                  <br>\n                  <strong>Descripción:</strong> Si `pageSize` en `GetPeliculas` o la búsqueda en `BuscarPelicula` no están controlados adecuadamente, un atacante podría solicitar un número extremadamente alto de resultados, causando un alto consumo de recursos en el servidor y potencialmente un ataque DoS.\n                  <br>\n                  <strong>Mitigación:</strong>\n                  <ul>\n                    <li>Limitar el valor máximo de `pageSize` a un valor razonable.</li>\n                    <li>Implementar paginación adecuada y limitar el número de resultados por página.</li>\n                    <li>Monitorizar el uso de recursos del servidor para detectar anomalías.</li>\n                  </ul>\n                </li>\n                <li>\n                  <strong>Tipo: Exposición de Información Sensible (Potencial)</strong>\n                  <br>\n                  <strong>Línea Aproximada:</strong> Relacionado con la implementación de `GetPelicula(int peliculaId)`.\n                  <br>\n                  <strong>Descripción:</strong> Si la implementación de `GetPelicula` devuelve información sensible sobre la película (por ejemplo, información de derechos de autor, datos de reparto con información personal, etc.) sin la autorización adecuada, podría considerarse una exposición de información.\n                  <br>\n                  <strong>Mitigación:</strong>\n                  <ul>\n                    <li>Implementar mecanismos de control de acceso para restringir el acceso a información sensible.</li>\n                    <li>Considerar la posibilidad de enmascarar o anonimizar datos sensibles si no son necesarios para todos los usuarios.</li>\n                  </ul>\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          <div class=\"card mt-3\">\n            <div class=\"card-header bg-info text-white\">\n              Métricas de Calidad del Código\n            </div>\n            <div class=\"card-body\">\n              <p class=\"card-text\">El código actual es una interfaz, por lo que algunas métricas no son directamente aplicables. Sin embargo, podemos considerar aspectos relacionados con su diseño:</p>\n\n              <ul>\n                <li>\n                  <strong>Complejidad:</strong> La interfaz es relativamente simple y enfocada, lo cual es bueno.  La complejidad se trasladará a la implementación del repositorio.\n                </li>\n                <li>\n                  <strong>Acoplamiento:</strong> La interfaz `IPeliculaRepositorio` está acoplada al modelo `Pelicula`. Esto es inevitable, pero es importante mantener la interfaz lo más genérica posible para evitar acoplamientos innecesarios.\n                </li>\n                <li>\n                  <strong>Legibilidad:</strong> La interfaz es muy legible y fácil de entender.  Los nombres de los métodos son descriptivos y el uso de tipos de datos estándar contribuye a la legibilidad.\n                </li>\n                <li>\n                  <strong>Duplicación:</strong> No hay duplicación en la interfaz en sí.  Sin embargo, la implementación del repositorio podría incurrir en duplicación si no se abstraen las operaciones comunes.\n                </li>\n                <li>\n                  <strong>Mantenibilidad:</strong> La interfaz es fácil de mantener debido a su simplicidad y claridad.  Cualquier cambio en la implementación del repositorio no afectará la interfaz a menos que se requieran nuevas funcionalidades.\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row mt-3\">\n    <div class=\"col-md-12\">\n      <div class=\"card border-success\">\n        <div class=\"card-header bg-success text-white\">\n          Solución Propuesta\n        </div>\n        <div class=\"card-body\">\n          <p class=\"card-text\">Las siguientes son algunas propuestas para mejorar la seguridad y la calidad del código, centradas en cómo debería ser implementada la interfaz.</p>\n\n          <ul>\n            <li>\n              <strong>Implementación Segura de `BuscarPelicula`:</strong>\n              <ul>\n                <li>Utilizar Entity Framework Core (u otro ORM) con consultas parametrizadas para evitar inyección SQL.</li>\n                <li>Validar y sanear la entrada `nombre`.</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Control de Paginación:</strong>\n              <ul>\n                <li>Definir un valor máximo para `pageSize` en la implementación de `GetPeliculas`.</li>\n                <li>Implementar validación de entrada para `pageNumber` y `pageSize` para prevenir valores negativos o excesivamente grandes.</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Control de Acceso:</strong>\n              <ul>\n                <li>Implementar roles y permisos para controlar el acceso a la información de las películas.</li>\n                <li>Evitar exponer información sensible innecesariamente.</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Abstracción en la Implementación:</strong>\n              <ul>\n                <li>Crear métodos privados para abstraer operaciones comunes en el repositorio para evitar duplicación de código.</li>\n              </ul>\n            </li>\n            <li>\n              <strong>Manejo de Errores:</strong>\n              <ul>\n                <li>Implementar un manejo de errores robusto para capturar excepciones y devolver mensajes de error informativos.</li>\n                <li>Utilizar logging para registrar errores y facilitar la depuración.</li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n', '2025-06-10 02:40:53', 2);
INSERT INTO `vulnerabilidades` (`id`, `archivo`, `tipo_vulnerabilidad`, `codigo_vulnerable`, `solucion_propuesta`, `fecha_subida`, `id_zip`) VALUES
(4, 'bootstrap.min.css', 'Detectado por GPT', '@charset \"UTF-8\";/*!\r\n * Bootstrap  v5.3.0 (https://getbootstrap.com/)\r\n * Copyright 2011-2023 The Bootstrap Authors\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\r\n */:root,[data-bs-theme=light]{--bs-blue:#0d6efd;--bs-indigo:#6610f2;--bs-purple:#6f42c1;--bs-pink:#d63384;--bs-red:#dc3545;--bs-orange:#fd7e14;--bs-yellow:#ffc107;--bs-green:#198754;--bs-teal:#20c997;--bs-cyan:#0dcaf0;--bs-black:#000;--bs-white:#fff;--bs-gray:#6c757d;--bs-gray-dark:#343a40;--bs-gray-100:#f8f9fa;--bs-gray-200:#e9ecef;--bs-gray-300:#dee2e6;--bs-gray-400:#ced4da;--bs-gray-500:#adb5bd;--bs-gray-600:#6c757d;--bs-gray-700:#495057;--bs-gray-800:#343a40;--bs-gray-900:#212529;--bs-primary:#0d6efd;--bs-secondary:#6c757d;--bs-success:#198754;--bs-info:#0dcaf0;--bs-warning:#ffc107;--bs-danger:#dc3545;--bs-light:#f8f9fa;--bs-dark:#212529;--bs-primary-rgb:13,110,253;--bs-secondary-rgb:108,117,125;--bs-success-rgb:25,135,84;--bs-info-rgb:13,202,240;--bs-warning-rgb:255,193,7;--bs-danger-rgb:220,53,69;--bs-light-rgb:248,249,250;--bs-dark-rgb:33,37,41;--bs-primary-text-emphasis:#052c65;--bs-secondary-text-emphasis:#2b2f32;--bs-success-text-emphasis:#0a3622;--bs-info-text-emphasis:#055160;--bs-warning-text-emphasis:#664d03;--bs-danger-text-emphasis:#58151c;--bs-light-text-emphasis:#495057;--bs-dark-text-emphasis:#495057;--bs-primary-bg-subtle:#cfe2ff;--bs-secondary-bg-subtle:#e2e3e5;--bs-success-bg-subtle:#d1e7dd;--bs-info-bg-subtle:#cff4fc;--bs-warning-bg-subtle:#fff3cd;--bs-danger-bg-subtle:#f8d7da;--bs-light-bg-subtle:#fcfcfd;--bs-dark-bg-subtle:#ced4da;--bs-primary-border-subtle:#9ec5fe;--bs-secondary-border-subtle:#c4c8cb;--bs-success-border-subtle:#a3cfbb;--bs-info-border-subtle:#9eeaf9;--bs-warning-border-subtle:#ffe69c;--bs-danger-border-subtle:#f1aeb5;--bs-light-border-subtle:#e9ecef;--bs-dark-border-subtle:#adb5bd;--bs-white-rgb:255,255,255;--bs-black-rgb:0,0,0;--bs-font-sans-serif:system-ui,-apple-system,\"Segoe UI\",Roboto,\"Helvetica Neue\",\"Noto Sans\",\"Liberation Sans\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--bs-font-monospace:SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--bs-gradient:linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));--bs-body-font-family:var(--bs-font-sans-serif);--bs-body-font-size:1rem;--bs-body-font-weight:400;--bs-body-line-height:1.5;--bs-body-color:#212529;--bs-body-color-rgb:33,37,41;--bs-body-bg:#fff;--bs-body-bg-rgb:255,255,255;--bs-emphasis-color:#000;--bs-emphasis-color-rgb:0,0,0;--bs-secondary-color:rgba(33, 37, 41, 0.75);--bs-secondary-color-rgb:33,37,41;--bs-secondary-bg:#e9ecef;--bs-secondary-bg-rgb:233,236,239;--bs-tertiary-color:rgba(33, 37, 41, 0.5);--bs-tertiary-color-rgb:33,37,41;--bs-tertiary-bg:#f8f9fa;--bs-tertiary-bg-rgb:248,249,250;--bs-heading-color:inherit;--bs-link-color:#0d6efd;--bs-link-color-rgb:13,110,253;--bs-link-decoration:underline;--bs-link-hover-color:#0a58ca;--bs-link-hover-color-rgb:10,88,202;--bs-code-color:#d63384;--bs-highlight-bg:#fff3cd;--bs-border-width:1px;--bs-border-style:solid;--bs-border-color:#dee2e6;--bs-border-color-translucent:rgba(0, 0, 0, 0.175);--bs-border-radius:0.375rem;--bs-border-radius-sm:0.25rem;--bs-border-radius-lg:0.5rem;--bs-border-radius-xl:1rem;--bs-border-radius-xxl:2rem;--bs-border-radius-2xl:var(--bs-border-radius-xxl);--bs-border-radius-pill:50rem;--bs-box-shadow:0 0.5rem 1rem rgba(0, 0, 0, 0.15);--bs-box-shadow-sm:0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);--bs-box-shadow-lg:0 1rem 3rem rgba(0, 0, 0, 0.175);--bs-box-shadow-inset:inset 0 1px 2px rgba(0, 0, 0, 0.075);--bs-focus-ring-width:0.25rem;--bs-focus-ring-opacity:0.25;--bs-focus-ring-color:rgba(13, 110, 253, 0.25);--bs-form-valid-color:#198754;--bs-form-valid-border-color:#198754;--bs-form-invalid-color:#dc3545;--bs-form-invalid-border-color:#dc3545}[data-bs-theme=dark]{color-scheme:dark;--bs-body-color:#adb5bd;--bs-body-color-rgb:173,181,189;--bs-body-bg:#212529;--bs-body-bg-rgb:33,37,41;--bs-emphasis-color:#fff;--bs-emphasis-color-rgb:255,255,255;--bs-secondary-color:rgba(173, 181, 189, 0.75);--bs-secondary-color-rgb:173,181,189;--bs-secondary-bg:#343a40;--bs-secondary-bg-rgb:52,58,64;--bs-tertiary-color:rgba(173, 181, 189, 0.5);--bs-tertiary-color-rgb:173,181,189;--bs-tertiary-bg:#2b3035;--bs-tertiary-bg-rgb:43,48,53;--bs-primary-text-emphasis:#6ea8fe;--bs-secondary-text-emphasis:#a7acb1;--bs-success-text-emphasis:#75b798;--bs-info-text-emphasis:#6edff6;--bs-warning-text-emphasis:#ffda6a;--bs-danger-text-emphasis:#ea868f;--bs-light-text-emphasis:#f8f9fa;--bs-dark-text-emphasis:#dee2e6;--bs-primary-bg-subtle:#031633;--bs-secondary-bg-subtle:#161719;--bs-success-bg-subtle:#051b11;--bs-info-bg-subtle:#032830;--bs-warning-bg-subtle:#332701;--bs-danger-bg-subtle:#2c0b0e;--bs-light-bg-subtle:#343a40;--bs-dark-bg-subtle:#1a1d20;--bs-primary-border-subtle:#084298;--bs-secondary-border-subtle:#41464b;--bs-success-border-subtle:#0f5132;--bs-info-border-subtle:#087990;--bs-warning-border-subtle:#997404;--bs-danger-border-subtle:#842029;--bs-light-border-subtle:#495057;--bs-dark-border-subtle:#343a40;--bs-heading-color:inherit;--bs-link-color:#6ea8fe;--bs-link-hover-color:#8bb9fe;--bs-link-color-rgb:110,168,254;--bs-link-hover-color-rgb:139,185,254;--bs-code-color:#e685b5;--bs-border-color:#495057;--bs-border-color-translucent:rgba(255, 255, 255, 0.15);--bs-form-valid-color:#75b798;--bs-form-valid-border-color:#75b798;--bs-form-invalid-color:#ea868f;--bs-form-invalid-border-color:#ea868f}*,::after,::before{box-sizing:border-box}@media (prefers-reduced-motion:no-preference){:root{scroll-behavior:smooth}}body{margin:0;font-family:var(--bs-body-font-family);font-size:var(--bs-body-font-size);font-weight:var(--bs-body-font-weight);line-height:var(--bs-body-line-height);color:var(--bs-body-color);text-align:var(--bs-body-text-align);background-color:var(--bs-body-bg);-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:transparent}hr{margin:1rem 0;color:inherit;border:0;border-top:var(--bs-border-width) solid;opacity:.25}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem;font-weight:500;line-height:1.2;color:var(--bs-heading-color)}.h1,h1{font-size:calc(1.375rem + 1.5vw)}@media (min-width:1200px){.h1,h1{font-size:2.5rem}}.h2,h2{font-size:calc(1.325rem + .9vw)}@media (min-width:1200px){.h2,h2{font-size:2rem}}.h3,h3{font-size:calc(1.3rem + .6vw)}@media (min-width:1200px){.h3,h3{font-size:1.75rem}}.h4,h4{font-size:calc(1.275rem + .3vw)}@media (min-width:1200px){.h4,h4{font-size:1.5rem}}.h5,h5{font-size:1.25rem}.h6,h6{font-size:1rem}p{margin-top:0;margin-bottom:1rem}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;-webkit-text-decoration-skip-ink:none;text-decoration-skip-ink:none}address{margin-bottom:1rem;font-style:normal;line-height:inherit}ol,ul{padding-left:2rem}dl,ol,ul{margin-top:0;margin-bottom:1rem}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}b,strong{font-weight:bolder}.small,small{font-size:.875em}.mark,mark{padding:.1875em;background-color:var(--bs-highlight-bg)}sub,sup{position:relative;font-size:.75em;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:rgba(var(--bs-link-color-rgb),var(--bs-link-opacity,1));text-decoration:underline}a:hover{--bs-link-color-rgb:var(--bs-link-hover-color-rgb)}a:not([href]):not([class]),a:not([href]):not([class]):hover{color:inherit;text-decoration:none}code,kbd,pre,samp{font-family:var(--bs-font-monospace);font-size:1em}pre{display:block;margin-top:0;margin-bottom:1rem;overflow:auto;font-size:.875em}pre code{font-size:inherit;color:inherit;word-break:normal}code{font-size:.875em;color:var(--bs-code-color);word-wrap:break-word}a>code{color:inherit}kbd{padding:.1875rem .375rem;font-size:.875em;color:var(--bs-body-bg);background-color:var(--bs-body-color);border-radius:.25rem}kbd kbd{padding:0;font-size:1em}figure{margin:0 0 1rem}img,svg{vertical-align:middle}table{caption-side:bottom;border-collapse:collapse}caption{padding-top:.5rem;padding-bottom:.5rem;color:var(--bs-secondary-color);text-align:left}th{text-align:inherit;text-align:-webkit-match-parent}tbody,td,tfoot,th,thead,tr{border-color:inherit;border-style:solid;border-width:0}label{display:inline-block}button{border-radius:0}button:focus:not(:focus-visible){outline:0}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,select{text-transform:none}[role=button]{cursor:pointer}select{word-wrap:normal}select:disabled{opacity:1}[list]:not([type=date]):not([type=datetime-local]):not([type=month]):not([type=week]):not([type=time])::-webkit-calendar-picker-indicator{display:none!important}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]:not(:disabled),[type=reset]:not(:disabled),[type=submit]:not(:disabled),button:not(:disabled){cursor:pointer}::-moz-focus-inner{padding:0;border-style:none}textarea{resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{float:left;width:100%;padding:0;margin-bottom:.5rem;font-size:calc(1.275rem + .3vw);line-height:inherit}@media (min-width:1200px){legend{font-size:1.5rem}}legend+*{clear:left}::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-fields-wrapper,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-text,::-webkit-datetime-edit-year-field{padding:0}::-webkit-inner-spin-button{height:auto}[type=search]{outline-offset:-2px;-webkit-appearance:textfield}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-color-swatch-wrapper{padding:0}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}::file-selector-button{font:inherit;-webkit-appearance:button}output{display:inline-block}iframe{border:0}summary{display:list-item;cursor:pointer}progress{vertical-align:baseline}[hidden]{display:none!important}.lead{font-size:1.25rem;font-weight:300}.display-1{font-size:calc(1.625rem + 4.5vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-1{font-size:5rem}}.display-2{font-size:calc(1.575rem + 3.9vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-2{font-size:4.5rem}}.display-3{font-size:calc(1.525rem + 3.3vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-3{font-size:4rem}}.display-4{font-size:calc(1.475rem + 2.7vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-4{font-size:3.5rem}}.display-5{font-size:calc(1.425rem + 2.1vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-5{font-size:3rem}}.display-6{font-size:calc(1.375rem + 1.5vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-6{font-size:2.5rem}}.list-unstyled{padding-left:0;list-style:none}.list-inline{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:.5rem}.initialism{font-size:.875em;text-transform:uppercase}.blockquote{margin-bottom:1rem;font-size:1.25rem}.blockquote>:last-child{margin-bottom:0}.blockquote-footer{margin-top:-1rem;margin-bottom:1rem;font-size:.875em;color:#6c757d}.blockquote-footer::before{content:\"— \"}.img-fluid{max-width:100%;height:auto}.img-thumbnail{padding:.25rem;background-color:var(--bs-body-bg);border:var(--bs-border-width) solid var(--bs-border-color);border-radius:var(--bs-border-radius);max-width:100%;height:auto}.figure{display:inline-block}.figure-img{margin-bottom:.5rem;line-height:1}.figure-caption{font-size:.875em;color:var(--bs-secondary-color)}.container,.container-fluid,.container-lg,.container-md,.container-sm,.container-xl,.container-xxl{--bs-gutter-x:1.5rem;--bs-gutter-y:0;width:100%;padding-right:calc(var(--bs-gutter-x) * .5);padding-left:calc(var(--bs-gutter-x) * .5);margin-right:auto;margin-left:auto}@media (min-width:576px){.container,.container-sm{max-width:540px}}@media (min-width:768px){.container,.container-md,.container-sm{max-width:720px}}@media (min-width:992px){.container,.container-lg,.container-md,.container-sm{max-width:960px}}@media (min-width:1200px){.container,.container-lg,.container-md,.container-sm,.container-xl{max-width:1140px}}@media (min-width:1400px){.container,.container-lg,.container-md,.container-sm,.container-xl,.container-xxl{max-width:1320px}}:root{--bs-breakpoint-xs:0;--bs-breakpoint-sm:576px;--bs-breakpoint-md:768px;--bs-breakpoint-lg:992px;--bs-breakpoint-xl:1200px;--bs-breakpoint-xxl:1400px}.row{--bs-gutter-x:1.5rem;--bs-gutter-y:0;display:flex;flex-wrap:wrap;margin-top:calc(-1 * var(--bs-gutter-y));margin-right:calc(-.5 * var(--bs-gutter-x));margin-left:calc(-.5 * var(--bs-gutter-x))}.row>*{flex-shrink:0;width:100%;max-width:100%;padding-right:calc(var(--bs-gutter-x) * .5);padding-left:calc(var(--bs-gutter-x) * .5);margin-top:var(--bs-gutter-y)}.col{flex:1 0 0%}.row-cols-auto>*{flex:0 0 auto;width:auto}.row-cols-1>*{flex:0 0 auto;width:100%}.row-cols-2>*{flex:0 0 auto;width:50%}.row-cols-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-4>*{flex:0 0 auto;width:25%}.row-cols-5>*{flex:0 0 auto;width:20%}.row-cols-6>*{flex:0 0 auto;width:16.6666666667%}.col-auto{flex:0 0 auto;width:auto}.col-1{flex:0 0 auto;width:8.33333333%}.col-2{flex:0 0 auto;width:16.66666667%}.col-3{flex:0 0 auto;width:25%}.col-4{flex:0 0 auto;width:33.33333333%}.col-5{flex:0 0 auto;width:41.66666667%}.col-6{flex:0 0 auto;width:50%}.col-7{flex:0 0 auto;width:58.33333333%}.col-8{flex:0 0 auto;width:66.66666667%}.col-9{flex:0 0 auto;width:75%}.col-10{flex:0 0 auto;width:83.33333333%}.col-11{flex:0 0 auto;width:91.66666667%}.col-12{flex:0 0 auto;width:100%}.offset-1{margin-left:8.33333333%}.offset-2{margin-left:16.66666667%}.offset-3{margin-left:25%}.offset-4{margin-left:33.33333333%}.offset-5{margin-left:41.66666667%}.offset-6{margin-left:50%}.offset-7{margin-left:58.33333333%}.offset-8{margin-left:66.66666667%}.offset-9{margin-left:75%}.offset-10{margin-left:83.33333333%}.offset-11{margin-left:91.66666667%}.g-0,.gx-0{--bs-gutter-x:0}.g-0,.gy-0{--bs-gutter-y:0}.g-1,.gx-1{--bs-gutter-x:0.25rem}.g-1,.gy-1{--bs-gutter-y:0.25rem}.g-2,.gx-2{--bs-gutter-x:0.5rem}.g-2,.gy-2{--bs-gutter-y:0.5rem}.g-3,.gx-3{--bs-gutter-x:1rem}.g-3,.gy-3{--bs-gutter-y:1rem}.g-4,.gx-4{--bs-gutter-x:1.5rem}.g-4,.gy-4{--bs-gutter-y:1.5rem}.g-5,.gx-5{--bs-gutter-x:3rem}.g-5,.gy-5{--bs-gutter-y:3rem}@media (min-width:576px){.col-sm{flex:1 0 0%}.row-cols-sm-auto>*{flex:0 0 auto;width:auto}.row-cols-sm-1>*{flex:0 0 auto;width:100%}.row-cols-sm-2>*{flex:0 0 auto;width:50%}.row-cols-sm-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-sm-4>*{flex:0 0 auto;width:25%}.row-cols-sm-5>*{flex:0 0 auto;width:20%}.row-cols-sm-6>*{flex:0 0 auto;width:16.6666666667%}.col-sm-auto{flex:0 0 auto;width:auto}.col-sm-1{flex:0 0 auto;width:8.33333333%}.col-sm-2{flex:0 0 auto;width:16.66666667%}.col-sm-3{flex:0 0 auto;width:25%}.col-sm-4{flex:0 0 auto;width:33.33333333%}.col-sm-5{flex:0 0 auto;width:41.66666667%}.col-sm-6{flex:0 0 auto;width:50%}.col-sm-7{flex:0 0 auto;width:58.33333333%}.col-sm-8{flex:0 0 auto;width:66.66666667%}.col-sm-9{flex:0 0 auto;width:75%}.col-sm-10{flex:0 0 auto;width:83.33333333%}.col-sm-11{flex:0 0 auto;width:91.66666667%}.col-sm-12{flex:0 0 auto;width:100%}.offset-sm-0{margin-left:0}.offset-sm-1{margin-left:8.33333333%}.offset-sm-2{margin-left:16.66666667%}.offset-sm-3{margin-left:25%}.offset-sm-4{margin-left:33.33333333%}.offset-sm-5{margin-left:41.66666667%}.offset-sm-6{margin-left:50%}.offset-sm-7{margin-left:58.33333333%}.offset-sm-8{margin-left:66.66666667%}.offset-sm-9{margin-left:75%}.offset-sm-10{margin-left:83.33333333%}.offset-sm-11{margin-left:91.66666667%}.g-sm-0,.gx-sm-0{--bs-gutter-x:0}.g-sm-0,.gy-sm-0{--bs-gutter-y:0}.g-sm-1,.gx-sm-1{--bs-gutter-x:0.25rem}.g-sm-1,.gy-sm-1{--bs-gutter-y:0.25rem}.g-sm-2,.gx-sm-2{--bs-gutter-x:0.5rem}.g-sm-2,.gy-sm-2{--bs-gutter-y:0.5rem}.g-sm-3,.gx-sm-3{--bs-gutter-x:1rem}.g-sm-3,.gy-sm-3{--bs-gutter-y:1rem}.g-sm-4,.gx-sm-4{--bs-gutter-x:1.5rem}.g-sm-4,.gy-sm-4{--bs-gutter-y:1.5rem}.g-sm-5,.gx-sm-5{--bs-gutter-x:3rem}.g-sm-5,.gy-sm-5{--bs-gutter-y:3rem}}@media (min-width:768px){.col-md{flex:1 0 0%}.row-cols-md-auto>*{flex:0 0 auto;width:auto}.row-cols-md-1>*{flex:0 0 auto;width:100%}.row-cols-md-2>*{flex:0 0 auto;width:50%}.row-cols-md-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-md-4>*{flex:0 0 auto;width:25%}.row-cols-md-5>*{flex:0 0 auto;width:20%}.row-cols-md-6>*{flex:0 0 auto;width:16.6666666667%}.col-md-auto{flex:0 0 auto;width:auto}.col-md-1{flex:0 0 auto;width:8.33333333%}.col-md-2{flex:0 0 auto;width:16.66666667%}.col-md-3{flex:0 0 auto;width:25%}.col-md-4{flex:0 0 auto;width:33.33333333%}.col-md-5{flex:0 0 auto;width:41.66666667%}.col-md-6{flex:0 0 auto;width:50%}.col-md-7{flex:0 0 auto;width:58.33333333%}.col-md-8{flex:0 0 auto;width:66.66666667%}.col-md-9{flex:0 0 auto;width:75%}.col-md-10{flex:0 0 auto;width:83.33333333%}.col-md-11{flex:0 0 auto;width:91.66666667%}.col-md-12{flex:0 0 auto;width:100%}.offset-md-0{margin-left:0}.offset-md-1{margin-left:8.33333333%}.offset-md-2{margin-left:16.66666667%}.offset-md-3{margin-left:25%}.offset-md-4{margin-left:33.33333333%}.offset-md-5{margin-left:41.66666667%}.offset-md-6{margin-left:50%}.offset-md-7{margin-left:58.33333333%}.offset-md-8{margin-left:66.66666667%}.offset-md-9{margin-left:75%}.offset-md-10{margin-left:83.33333333%}.offset-md-11{margin-left:91.66666667%}.g-md-0,.gx-md-0{--bs-gutter-x:0}.g-md-0,.gy-md-0{--bs-gutter-y:0}.g-md-1,.gx-md-1{--bs-gutter-x:0.25rem}.g-md-1,.gy-md-1{--bs-gutter-y:0.25rem}.g-md-2,.gx-md-2{--bs-gutter-x:0.5rem}.g-md-2,.gy-md-2{--bs-gutter-y:0.5rem}.g-md-3,.gx-md-3{--bs-gutter-x:1rem}.g-md-3,.gy-md-3{--bs-gutter-y:1rem}.g-md-4,.gx-md-4{--bs-gutter-x:1.5rem}.g-md-4,.gy-md-4{--bs-gutter-y:1.5rem}.g-md-5,.gx-md-5{--bs-gutter-x:3rem}.g-md-5,.gy-md-5{--bs-gutter-y:3rem}}@media (min-width:992px){.col-lg{flex:1 0 0%}.row-cols-lg-auto>*{flex:0 0 auto;width:auto}.row-cols-lg-1>*{flex:0 0 auto;width:100%}.row-cols-lg-2>*{flex:0 0 auto;width:50%}.row-cols-lg-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-lg-4>*{flex:0 0 auto;width:25%}.row-cols-lg-5>*{flex:0 0 auto;width:20%}.row-cols-lg-6>*{flex:0 0 auto;width:16.6666666667%}.col-lg-auto{flex:0 0 auto;width:auto}.col-lg-1{flex:0 0 auto;width:8.33333333%}.col-lg-2{flex:0 0 auto;width:16.66666667%}.col-lg-3{flex:0 0 auto;width:25%}.col-lg-4{flex:0 0 auto;width:33.33333333%}.col-lg-5{flex:0 0 auto;width:41.66666667%}.col-lg-6{flex:0 0 auto;width:50%}.col-lg-7{flex:0 0 auto;width:58.33333333%}.col-lg-8{flex:0 0 auto;width:66.66666667%}.col-lg-9{flex:0 0 auto;width:75%}.col-lg-10{flex:0 0 auto;width:83.33333333%}.col-lg-11{flex:0 0 auto;width:91.66666667%}.col-lg-12{flex:0 0 auto;width:100%}.offset-lg-0{margin-left:0}.offset-lg-1{margin-left:8.33333333%}.offset-lg-2{margin-left:16.66666667%}.offset-lg-3{margin-left:25%}.offset-lg-4{margin-left:33.33333333%}.offset-lg-5{margin-left:41.66666667%}.offset-lg-6{margin-left:50%}.offset-lg-7{margin-left:58.33333333%}.offset-lg-8{margin-left:66.66666667%}.offset-lg-9{margin-left:75%}.offset-lg-10{margin-left:83.33333333%}.offset-lg-11{margin-left:91.66666667%}.g-lg-0,.gx-lg-0{--bs-gutter-x:0}.g-lg-0,.gy-lg-0{--bs-gutter-y:0}.g-lg-1,.gx-lg-1{--bs-gutter-x:0.25rem}.g-lg-1,.gy-lg-1{--bs-gutter-y:0.25rem}.g-lg-2,.gx-lg-2{--bs-gutter-x:0.5rem}.g-lg-2,.gy-lg-2{--bs-gutter-y:0.5rem}.g-lg-3,.gx-lg-3{--bs-gutter-x:1rem}.g-lg-3,.gy-lg-3{--bs-gutter-y:1rem}.g-lg-4,.gx-lg-4{--bs-gutter-x:1.5rem}.g-lg-4,.gy-lg-4{--bs-gutter-y:1.5rem}.g-lg-5,.gx-lg-5{--bs-gutter-x:3rem}.g-lg-5,.gy-lg-5{--bs-gutter-y:3rem}}@media (min-width:1200px){.col-xl{flex:1 0 0%}.row-cols-xl-auto>*{flex:0 0 auto;width:auto}.row-cols-xl-1>*{flex:0 0 auto;width:100%}.row-cols-xl-2>*{flex:0 0 auto;width:50%}.row-cols-xl-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-xl-4>*{flex:0 0 auto;width:25%}.row-cols-xl-5>*{flex:0 0 auto;width:20%}.row-cols-xl-6>*{flex:0 0 auto;width:16.6666666667%}.col-xl-auto{flex:0 0 auto;width:auto}.col-xl-1{flex:0 0 auto;width:8.33333333%}.col-xl-2{flex:0 0 auto;width:16.66666667%}.col-xl-3{flex:0 0 auto;width:25%}.col-xl-4{flex:0 0 auto;width:33.33333333%}.col-xl-5{flex:0 0 auto;width:41.66666667%}.col-xl-6{flex:0 0 auto;width:50%}.col-xl-7{flex:0 0 auto;width:58.33333333%}.col-xl-8{flex:0 0 auto;width:66.66666667%}.col-xl-9{flex:0 0 auto;width:75%}.col-xl-10{flex:0 0 auto;width:83.33333333%}.col-xl-11{flex:0 0 auto;width:91.66666667%}.col-xl-12{flex:0 0 auto;width:100%}.offset-xl-0{margin-left:0}.offset-xl-1{margin-left:8.33333333%}.offset-xl-2{margin-left:16.66666667%}.offset-xl-3{margin-left:25%}.offset-xl-4{margin-left:33.33333333%}.offset-xl-5{margin-left:41.66666667%}.offset-xl-6{margin-left:50%}.offset-xl-7{margin-left:58.33333333%}.offset-xl-8{margin-left:66.66666667%}.offset-xl-9{margin-left:75%}.offset-xl-10{margin-left:83.33333333%}.offset-xl-11{margin-left:91.66666667%}.g-xl-0,.gx-xl-0{--bs-gutter-x:0}.g-xl-0,.gy-xl-0{--bs-gutter-y:0}.g-xl-1,.gx-xl-1{--bs-gutter-x:0.25rem}.g-xl-1,.gy-xl-1{--bs-gutter-y:0.25rem}.g-xl-2,.gx-xl-2{--bs-gutter-x:0.5rem}.g-xl-2,.gy-xl-2{--bs-gutter-y:0.5rem}.g-xl-3,.gx-xl-3{--bs-gutter-x:1rem}.g-xl-3,.gy-xl-3{--bs-gutter-y:1rem}.g-xl-4,.gx-xl-4{--bs-gutter-x:1.5rem}.g-xl-4,.gy-xl-4{--bs-gutter-y:1.5rem}.g-xl-5,.gx-xl-5{--bs-gutter-x:3rem}.g-xl-5,.gy-xl-5{--bs-gutter-y:3rem}}@media (min-width:1400px){.col-xxl{flex:1 0 0%}.row-cols-xxl-auto>*{flex:0 0 auto;width:auto}.row-cols-xxl-1>*{flex:0 0 auto;width:100%}.row-cols-xxl-2>*{flex:0 0 auto;width:50%}.row-cols-xxl-3>*{flex:0 0 auto;width:33.3333333333%}.row-cols-xxl-4>*{flex:0 0 auto;width:25%}.row-cols-xxl-5>*{flex:0 0 auto;width:20%}.row-cols-xxl-6>*{flex:0 0 auto;width:16.6666666667%}.col-xxl-auto{flex:0 0 auto;width:auto}.col-xxl-1{flex:0 0 auto;width:8.33333333%}.col-xxl-2{flex:0 0 auto;width:16.66666667%}.col-xxl-3{flex:0 0 auto;width:25%}.col-xxl-4{flex:0 0 auto;width:33.33333333%}.col-xxl-5{flex:0 0 auto;width:41.66666667%}.col-xxl-6{flex:0 0 auto;width:50%}.col-xxl-7{flex:0 0 auto;width:58.33333333%}.col-xxl-8{flex:0 0 auto;width:66.66666667%}.col-xxl-9{flex:0 0 auto;width:75%}.col-xxl-10{flex:0 0 auto;width:83.33333333%}.col-xxl-11{flex:0 0 auto;width:91.66666667%}.col-xxl-12{flex:0 0 auto;width:100%}.offset-xxl-0{margin-left:0}.offset-xxl-1{margin-left:8.33333333%}.offset-xxl-2{margin-left:16.66666667%}.offset-xxl-3{margin-left:25%}.offset-xxl-4{margin-left:33.33333333%}.offset-xxl-5{margin-left:41.66666667%}.offset-xxl-6{margin-left:50%}.offset-xxl-7{margin-left:58.33333333%}.offset-xxl-8{margin-left:66.66666667%}.offset-xxl-9{margin-left:75%}.offset-xxl-10{margin-left:83.33333333%}.offset-xxl-11{margin-left:91.66666667%}.g-xxl-0,.gx-xxl-0{--bs-gutter-x:0}.g-xxl-0,.gy-xxl-0{--bs-gutter-y:0}.g-xxl-1,.gx-xxl-1{--bs-gutter-x:0.25rem}.g-xxl-1,.gy-xxl-1{--bs-gutter-y:0.25rem}.g-xxl-2,.gx-xxl-2{--bs-gutter-x:0.5rem}.g-xxl-2,.gy-xxl-2{--bs-gutter-y:0.5rem}.g-xxl-3,.gx-xxl-3{--bs-gutter-x:1rem}.g-xxl-3,.gy-xxl-3{--bs-gutter-y:1rem}.g-xxl-4,.gx-xxl-4{--bs-gutter-x:1.5rem}.g-xxl-4,.gy-xxl-4{--bs-gutter-y:1.5rem}.g-xxl-5,.gx-xxl-5{--bs-gutter-x:3rem}.g-xxl-5,.gy-xxl-5{--bs-gutter-y:3rem}}.table{--bs-table-color-type:initial;--bs-table-bg-type:initial;--bs-table-color-state:initial;--bs-table-bg-state:initial;--bs-table-color:var(--bs-body-color);--bs-table-bg:var(--bs-body-bg);--bs-table-border-color:var(--bs-border-color);--bs-table-accent-bg:transparent;--bs-table-striped-color:var(--bs-body-color);--bs-table-striped-bg:rgba(0, 0, 0, 0.05);--bs-table-active-color:var(--bs-body-color);--bs-table-active-bg:rgba(0, 0, 0, 0.1);--bs-table-hover-color:var(--bs-body-color);--bs-table-hover-bg:rgba(0, 0, 0, 0.075);width:100%;margin-bottom:1rem;vertical-align:top;border-color:var(--bs-table-border-color)}.table>:not(caption)>*>*{padding:.5rem .5rem;color:var(--bs-table-color-state,var(--bs-table-color-type,var(--bs-table-color)));background-color:var(--bs-table-bg);border-bottom-width:var(--bs-border-width);box-shadow:inset 0 0 0 9999px var(--bs-table-bg-state,var(--bs-table-bg-type,var(--bs-table-accent-bg)))}.table>tbody{vertical-align:inherit}.table>thead{vertical-align:bottom}.table-group-divider{border-top:calc(var(--bs-border-width) * 2) solid currentcolor}.caption-top{caption-side:top}.table-sm>:not(caption)>*>*{padding:.25rem .25rem}.table-bordered>:not(caption)>*{border-width:var(--bs-border-width) 0}.table-bordered>:not(caption)>*>*{border-width:0 var(--bs-border-width)}.table-borderless>:not(caption)>*>*{border-bottom-width:0}.table-borderless>:not(:first-child){border-top-width:0}.table-striped>tbody>tr:nth-of-type(odd)>*{--bs-table-color-type:var(--bs-table-striped-color);--bs-table-bg-type:var(--bs-table-striped-bg)}.table-striped-columns>:not(caption)>tr>:nth-child(2n){--bs-table-color-type:var(--bs-table-striped-color);--bs-table-bg-type:var(--bs-table-striped-bg)}.table-active{--bs-table-color-state:var(--bs-table-active-color);--bs-table-bg-state:var(--bs-table-active-bg)}.table-hover>tbody>tr:hover>*{--bs-table-color-state:var(--bs-table-hover-color);--bs-table-bg-state:var(--bs-table-hover-bg)}.table-primary{--bs-table-color:#000;--bs-table-bg:#cfe2ff;--bs-table-border-color:#bacbe6;--bs-table-striped-bg:#c5d7f2;--bs-table-striped-color:#000;--bs-table-active-bg:#bacbe6;--bs-table-active-color:#000;--bs-table-hover-bg:#bfd1ec;--bs-table-hover-color:#000;color:var(--bs-table-color);border-color:var(--bs-table-border-color)}.table-secondary{--bs-table-color:#000;--bs-table-bg:#e2e3e5;--bs-table-border-color:#cbccce;--bs-table-striped-bg:#d7d8da;--bs-table-striped-color:#000;--bs-table-active-bg:#cbccce;--bs-table-active-color:#000;--bs-table-hover-bg:#d1d2d4;--bs-table-hover-color:#000;color:var(--bs-table-color);border-color:var(--bs-table-border-color)}.table-success{--bs-table-color:#000;--bs-table-bg:#d1e7dd;--bs-table-border-color:#bcd0c7;--bs-table-striped-bg:#c7dbd2;--bs-table-striped-color:#000;--bs-table-active-bg:#bcd0c7;--bs-table-active-color:#000;--bs-table-hover-bg:#c1d6cc;--bs-table-hover-color:#000;color:var(--bs-table-color);border-color:var(--bs-table-border-color)}.table-info{--bs-table-color:#000;--bs-table-bg:#cff4fc;--bs-table-border-color:#badce3;--bs-table-striped-bg:#c5e8ef;--bs-table-striped-color:#000;--bs-table-active-bg:#badce3;--bs-table-active-color:#000;--bs-table-hover-bg:#bfe2e9;--bs-table-hover-color:#000;color:var(--bs-table-color);border-color:var(--bs-table-border-color)}.table-warning{--bs-table-color:#000;--bs-table-bg:#fff3cd;--bs-table-border-color:#e6dbb9;--bs-table-striped-bg:#f2e7c3;--bs-table-striped-color:#000;--bs-table-active-bg:#e6dbb9;--bs-table-active-color:#000;--bs-table-hover-bg:#ece1be;--bs-table-hover-color:#000;color:var(--bs-table-color);border-color:var(--bs-table-border-color)}.table-danger{--bs-table-color:#000;--bs-table-bg:#f8d7da;--bs-table-border-color:#dfc2c4;--bs-table-striped-bg:#eccccf;--bs-table-striped-color:#000;--bs-table-active-bg:#dfc2c4;--bs-table-active-color:#000;--bs-table-hover-bg:#e5c7ca;--bs-table-hover-color:#000;color:var(--bs-table-color);border-color:var(--bs-table-border-color)}.table-light{--bs-table-color:#000;--bs-table-bg:#f8f9fa;--bs-table-border-color:#dfe0e1;--bs-table-striped-bg:#ecedee;--bs-table-striped-color:#000;--bs-table-active-bg:#dfe0e1;--bs-table-active-color:#000;--bs-table-hover-bg:#e5e6e7;--bs-table-hover-color:#000;color:var(--bs-table-color);border-color:var(--bs-table-border-color)}.table-dark{--bs-table-color:#fff;--bs-table-bg:#212529;--bs-table-border-color:#373b3e;--bs-table-striped-bg:#2c3034;--bs-table-striped-color:#fff;--bs-table-active-bg:#373b3e;--bs-table-active-color:#fff;--bs-table-hover-bg:#323539;--bs-table-hover-color:#fff;color:var(--bs-table-color);border-color:var(--bs-table-border-color)}.table-responsive{overflow-x:auto;-webkit-overflow-scrolling:touch}@media (max-width:575.98px){.table-responsive-sm{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width:767.98px){.table-responsive-md{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width:991.98px){.table-responsive-lg{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width:1199.98px){.table-responsive-xl{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width:1399.98px){.table-responsive-xxl{overflow-x:auto;-webkit-overflow-scrolling:touch}}.form-label{margin-bottom:.5rem}.col-form-label{padding-top:calc(.375rem + var(--bs-border-width));padding-bottom:calc(.375rem + var(--bs-border-width));margin-bottom:0;font-size:inherit;line-height:1.5}.col-form-label-lg{padding-top:calc(.5rem + var(--bs-border-width));padding-bottom:calc(.5rem + var(--bs-border-width));font-size:1.25rem}.col-form-label-sm{padding-top:calc(.25rem + var(--bs-border-width));padding-bottom:calc(.25rem + var(--bs-border-width));font-size:.875rem}.form-text{margin-top:.25rem;font-size:.875em;color:var(--bs-secondary-color)}.form-control{display:block;width:100%;padding:.375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:var(--bs-body-color);background-color:var(--bs-body-bg);background-clip:padding-box;border:var(--bs-border-width) solid var(--bs-border-color);-webkit-appearance:none;-moz-appearance:none;appearance:none;border-radius:var(--bs-border-radius);transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-control{transition:none}}.form-control[type=file]{overflow:hidden}.form-control[type=file]:not(:disabled):not([readonly]){cursor:pointer}.form-control:focus{color:var(--bs-body-color);background-color:var(--bs-body-bg);border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.form-control::-webkit-date-and-time-value{min-width:85px;height:1.5em;margin:0}.form-control::-webkit-datetime-edit{display:block;padding:0}.form-control::-moz-placeholder{color:var(--bs-secondary-color);opacity:1}.form-control::placeholder{color:var(--bs-secondary-color);opacity:1}.form-control:disabled{background-color:var(--bs-secondary-bg);opacity:1}.form-control::-webkit-file-upload-button{padding:.375rem .75rem;margin:-.375rem -.75rem;-webkit-margin-end:.75rem;margin-inline-end:.75rem;color:var(--bs-body-color);background-color:var(--bs-tertiary-bg);pointer-events:none;border-color:inherit;border-style:solid;border-width:0;border-inline-end-width:var(--bs-border-width);border-radius:0;-webkit-transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}.form-control::file-selector-button{padding:.375rem .75rem;margin:-.375rem -.75rem;-webkit-margin-end:.75rem;margin-inline-end:.75rem;color:var(--bs-body-color);background-color:var(--bs-tertiary-bg);pointer-events:none;border-color:inherit;border-style:solid;border-width:0;border-inline-end-width:var(--bs-border-width);border-radius:0;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-control::-webkit-file-upload-button{-webkit-transition:none;transition:none}.form-control::file-selector-button{transition:none}}.form-control:hover:not(:disabled):not([readonly])::-webkit-file-upload-button{background-color:var(--bs-secondary-bg)}.form-control:hover:not(:disabled):not([readonly])::file-selector-button{background-color:var(--bs-secondary-bg)}.form-control-plaintext{display:block;width:100%;padding:.375rem 0;margin-bottom:0;line-height:1.5;color:var(--bs-body-color);background-color:transparent;border:solid transparent;border-width:var(--bs-border-width) 0}.form-control-plaintext:focus{outline:0}.form-control-plaintext.form-control-lg,.form-control-plaintext.form-control-sm{padding-right:0;padding-left:0}.form-control-sm{min-height:calc(1.5em + .5rem + calc(var(--bs-border-width) * 2));padding:.25rem .5rem;font-size:.875rem;border-radius:var(--bs-border-radius-sm)}.form-control-sm::-webkit-file-upload-button{padding:.25rem .5rem;margin:-.25rem -.5rem;-webkit-margin-end:.5rem;margin-inline-end:.5rem}.form-control-sm::file-selector-button{padding:.25rem .5rem;margin:-.25rem -.5rem;-webkit-margin-end:.5rem;margin-inline-end:.5rem}.form-control-lg{min-height:calc(1.5em + 1rem + calc(var(--bs-border-width) * 2));padding:.5rem 1rem;font-size:1.25rem;border-radius:var(--bs-border-radius-lg)}.form-control-lg::-webkit-file-upload-button{padding:.5rem 1rem;margin:-.5rem -1rem;-webkit-margin-end:1rem;margin-inline-end:1rem}.form-control-lg::file-selector-button{padding:.5rem 1rem;margin:-.5rem -1rem;-webkit-margin-end:1rem;margin-inline-end:1rem}textarea.form-control{min-height:calc(1.5em + .75rem + calc(var(--bs-border-width) * 2))}textarea.form-control-sm{min-height:calc(1.5em + .5rem + calc(var(--bs-border-width) * 2))}textarea.form-control-lg{min-height:calc(1.5em + 1rem + calc(var(--bs-border-width) * 2))}.form-control-color{width:3rem;height:calc(1.5em + .75rem + calc(var(--bs-border-width) * 2));padding:.375rem}.form-control-color:not(:disabled):not([readonly]){cursor:pointer}.form-control-color::-moz-color-swatch{border:0!important;border-radius:var(--bs-border-radius)}.form-control-color::-webkit-color-swatch{border:0!important;border-radius:var(--bs-border-radius)}.form-control-color.form-control-sm{height:calc(1.5em + .5rem + calc(var(--bs-border-width) * 2))}.form-control-color.form-control-lg{height:calc(1.5em + 1rem + calc(var(--bs-border-width) * 2))}.form-select{--bs-form-select-bg-img:url(\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\'%3e%3cpath fill=\'none\' stroke=\'%23343a40\' stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'2\' d=\'m2 5 6 6 6-6\'/%3e%3c/svg%3e\");display:block;width:100%;padding:.375rem 2.25rem .375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:var(--bs-body-color);background-color:var(--bs-body-bg);background-image:var(--bs-form-select-bg-img),var(--bs-form-select-bg-icon,none);background-repeat:no-repeat;background-position:right .75rem center;background-size:16px 12px;border:var(--bs-border-width) solid var(--bs-border-color);border-radius:var(--bs-border-radius);transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out;-webkit-appearance:none;-moz-appearance:none;appearance:none}@media (prefers-reduced-motion:reduce){.form-select{transition:none}}.form-select:focus{border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.form-select[multiple],.form-select[size]:not([size=\"1\"]){padding-right:.75rem;background-image:none}.form-select:disabled{background-color:var(--bs-secondary-bg)}.form-select:-moz-focusring{color:transparent;text-shadow:0 0 0 var(--bs-body-color)}.form-select-sm{padding-top:.25rem;padding-bottom:.25rem;padding-left:.5rem;font-size:.875rem;border-radius:var(--bs-border-radius-sm)}.form-select-lg{padding-top:.5rem;padding-bottom:.5rem;padding-left:1rem;font-size:1.25rem;border-radius:var(--bs-border-radius-lg)}[data-bs-theme=dark] .form-select{--bs-form-select-bg-img:url(\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 16 16\'%3e%3cpath fill=\'none\' stroke=\'%23adb5bd\' stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'2\' d=\'m2 5 6 6 6-6\'/%3e%3c/svg%3e\")}.form-check{display:block;min-height:1.5rem;padding-left:1.5em;margin-bottom:.125rem}.form-check .form-check-input{float:left;margin-left:-1.5em}.form-check-reverse{padding-right:1.5em;padding-left:0;text-align:right}.form-check-reverse .form-check-input{float:right;margin-right:-1.5em;margin-left:0}.form-check-input{--bs-form-check-bg:var(--bs-body-bg);width:1em;height:1em;margin-top:.25em;vertical-align:top;background-color:var(--bs-form-check-bg);background-image:var(--bs-form-check-bg-image);background-repeat:no-repeat;background-position:center;background-size:contain;border:var(--bs-border-width) solid var(--bs-border-color);-webkit-appearance:none;-moz-appearance:none;appearance:none;-webkit-print-color-adjust:exact;color-adjust:exact;print-color-adjust:exact}.form-check-input[type=checkbox]{border-radius:.25em}.form-check-input[type=radio]{border-radius:50%}.form-check-input:active{filter:brightness(90%)}.form-check-input:focus{border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.form-check-input:checked{background-color:#0d6efd;border-color:#0d6efd}.form-check-input:checked[type=checkbox]{--bs-form-check-bg-image:url(\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 20 20\'%3e%3cpath fill=\'none\' stroke=\'%23fff\' stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'3\' d=\'m6 10 3 3 6-6\'/%3e%3c/svg%3e\")}.form-check-input:checked[type=radio]{--bs-form-check-bg-image:url(\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'%3e%3ccircle r=\'2\' fill=\'%23fff\'/%3e%3c/svg%3e\")}.form-check-input[type=checkbox]:indeterminate{background-color:#0d6efd;border-color:#0d6efd;--bs-form-check-bg-image:url(\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 20 20\'%3e%3cpath fill=\'none\' stroke=\'%23fff\' stroke-linecap=\'round\' stroke-linejoin=\'round\' stroke-width=\'3\' d=\'M6 10h8\'/%3e%3c/svg%3e\")}.form-check-input:disabled{pointer-events:none;filter:none;opacity:.5}.form-check-input:disabled~.form-check-label,.form-check-input[disabled]~.form-check-label{cursor:default;opacity:.5}.form-switch{padding-left:2.5em}.form-switch .form-check-input{--bs-form-switch-bg:url(\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'%3e%3ccircle r=\'3\' fill=\'rgba%280, 0, 0, 0.25%29\'/%3e%3c/svg%3e\");width:2em;margin-left:-2.5em;background-image:var(--bs-form-switch-bg);background-position:left center;border-radius:2em;transition:background-position .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-switch .form-check-input{transition:none}}.form-switch .form-check-input:focus{--bs-form-switch-bg:url(\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'%3e%3ccircle r=\'3\' fill=\'%2386b7fe\'/%3e%3c/svg%3e\")}.form-switch .form-check-input:checked{background-position:right center;--bs-form-switch-bg:url(\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'%3e%3ccircle r=\'3\' fill=\'%23fff\'/%3e%3c/svg%3e\")}.form-switch.form-check-reverse{padding-right:2.5em;padding-left:0}.form-switch.form-check-reverse .form-check-input{margin-right:-2.5em;margin-left:0}.form-check-inline{display:inline-block;margin-right:1rem}.btn-check{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.btn-check:disabled+.btn,.btn-check[disabled]+.btn{pointer-events:none;filter:none;opacity:.65}[data-bs-theme=dark] .form-switch .form-check-input:not(:checked):not(:focus){--bs-form-switch-bg:url(\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'%3e%3ccircle r=\'3\' fill=\'rgba%28255, 255, 255, 0.25%29\'/%3e%3c/svg%3e\")}.form-range{width:100%;height:1.5rem;padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.form-range:focus{outline:0}.form-range:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .25rem rgba(13,110,253,.25)}.form-range:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .25rem rgba(13,110,253,.25)}.form-range::-moz-focus-outer{border:0}.form-range::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-.25rem;background-color:#0d6efd;border:0;border-radius:1rem;-webkit-transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;-webkit-appearance:none;appearance:none}@media (prefers-reduced-motion:reduce){.form-range::-webkit-slider-thumb{-webkit-transition:none;transition:none}}.form-range::-webkit-slider-thumb:active{background-color:#b6d4fe}.form-range::-webkit-slider-runnable-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:var(--bs-tertiary-bg);border-color:transparent;border-radius:1rem}.form-range::-moz-range-thumb{width:1rem;height:1rem;background-color:#0d6efd;border:0;border-radius:1rem;-moz-transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;-moz-appearance:none;appearance:none}@media (prefers-reduced-motion:reduce){.form-range::-moz-range-thumb{-moz-transition:none;transition:none}}.form-range::-moz-range-thumb:active{background-color:#b6d4fe}.form-range::-moz-range-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:var(--bs-tertiary-bg);border-color:transparent;border-radius:1rem}.form-range:disabled{pointer-events:none}.form-range:disabled::-webkit-slider-thumb{background-color:var(--bs-secondary-color)}.form-range:disabled::-moz-range-thumb{background-color:var(--bs-secondary-color)}.form-floating{position:relative}.form-floating>.form-control,.form-floating>.form-control-plaintext,.form-floating>.form-select{height:calc(3.5rem + calc(var(--bs-border-width) * 2));min-height:calc(3.5rem + calc(var(--bs-border-width) * 2));line-height:1.25}.form-floating>label{position:absolute;top:0;left:0;z-index:2;height:100%;padding:1rem .75rem;overflow:hidden;text-align:start;text-overflow:ellipsis;white-space:nowrap;pointer-events:none;border:var(--bs-border-width) solid transparent;transform-origin:0 0;transition:opacity .1s ease-in-out,transform .1s ease-in-out}@media (prefers-reduced-motion:reduce){.form-floating>label{transition:none}}.form-floating>.form-control,.form-floating>.form-control-plaintext{padding:1rem .75rem}.form-floating>.form-control-plaintext::-moz-placeholder,.form-floating>.form-control::-moz-placeholder{color:transparent}.form-floating>.form-control-plaintext::placeholder,.form-floating>.form-control::placeholder{color:transparent}.form-floating>.form-control-plaintext:not(:-moz-placeholder-shown),.form-floating>.form-control:not(:-moz-placeholder-shown){padding-top:1.625rem;padding-bottom:.625rem}.form-floating>.form-control-plaintext:focus,.form-floating>.form-control-plaintext:not(:placeholder-shown),.form-floating>.form-control:focus,.form-floating>.form-control:not(:placeholder-shown){padding-top:1.625rem;padding-bottom:.625rem}.form-floating>.form-control-plaintext:-webkit-autofill,.form-floating>.form-control:-webkit-autofill{padding-top:1.625rem;padding-bottom:.625rem}.form-floating>.form-select{padding-top:1.625rem;padding-bottom:.625rem}.form-floating>.form-control:not(:-moz-placeholder-shown)~label{color:rgba(var(--bs-body-color-rgb),.65);transform:scale(.85) translateY(-.5rem) translateX(.15rem)}.form-floating>.form-control-plaintext~label,.form-floating>.form-control:focus~label,.form-floating>.form-control:not(:placeholder-shown)~label,.form-floating>.form-select~label{color:rgba(var(--bs-body-color-rgb),.65);transform:scale(.85) translateY(-.5rem) translateX(.15rem)}.form-floating>.form-control:not(:-moz-placeholder-shown)~label::after{position:absolute;inset:1rem 0.375rem;z-index:-1;height:1.5em;content:\"\";background-color:var(--bs-body-bg);border-radius:var(--bs-border-radius)}.form-floating>.form-control-plaintext~label::after,.form-floating>.form-control:focus~label::after,.form-floating>.form-control:not(:placeholder-shown)~label::after,.form-floating>.form-select~label::after{position:absolute;inset:1rem 0.375rem;z-index:-1;height:1.5em;content:\"\";background-color:var(--bs-body-bg);border-radius:var(--bs-border-radius)}.form-floating>.form-control:-webkit-autofill~label{color:rgba(var(--bs-body-color-rgb),.65);transform:scale(.85) translateY(-.5rem) translateX(.15rem)}.form-floating>.form-control-plaintext~label{border-width:var(--bs-border-width) 0}.form-floating>:disabled~label{color:#6c757d}.form-floating>:disabled~label::after{background-color:var(--bs-secondary-bg)}.input-group{position:relative;display:flex;flex-wrap:wrap;align-items:stretch;width:100%}.input-group>.form-control,.input-group>.form-floating,.input-group>.form-select{position:relative;flex:1 1 auto;width:1%;min-width:0}.input-group>.form-control:focus,.input-group>.form-floating:focus-within,.input-group>.form-select:focus{z-index:5}.input-group .btn{position:relative;z-index:2}.input-group .btn:focus{z-index:5}.input-group-text{display:flex;align-items:center;padding:.375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:var(--bs-body-color);text-align:center;white-space:nowrap;background-color:var(--bs-tertiary-bg);border:var(--bs-border-width) solid var(--bs-border-color);border-radius:var(--bs-border-radius)}.input-group-lg>.btn,.input-group-lg>.form-control,.input-group-lg>.form-select,.input-group-lg>.input-group-text{padding:.5rem 1rem;font-size:1.25rem;border-radius:var(--bs-border-radius-lg)}.input-group-sm>.btn,.input-group-sm>.form-control,.input-group-sm>.form-select,.input-group-sm>.input-group-text{padding:.25rem .5rem;font-size:.875rem;border-radius:var(--bs-border-radius-sm)}.input-group-lg>.form-select,.input-group-sm>.form-select{padding-right:3rem}.input-group:not(.has-validation)>.dropdown-toggle:nth-last-child(n+3),.input-group:not(.has-validation)>.form-floating:not(:last-child)>.form-control,.input-group:not(.has-validation)>.form-floating:not(:last-child)>.form-select,.input-group:not(.has-validation)>:not(:last-child):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating){border-top-right-radius:0;border-bottom-right-radius:0}.input-group.has-validation>.dropdown-toggle:nth-last-child(n+4),.input-group.has-validation>.form-floating:nth-last-child(n+3)>.form-control,.input-group.has-validation>.form-floating:nth-last-child(n+3)>.form-select,.input-group.has-validation>:nth-last-child(n+3):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>:not(:first-child):not(.dropdown-menu):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback){margin-left:calc(var(--bs-border-width) * -1);border-top-left-radius:0;border-bottom-left-radius:0}.input-group>.form-floating:not(:first-child)>.form-control,.input-group>.form-floating:not(:first-child)>.form-select{border-top-left-radius:0;border-bottom-left-radius:0}.valid-feedback{display:none;width:100%;margin-top:.25rem;font-size:.875em;color:var(--bs-form-valid-color)}.valid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;color:#fff;background-color:var(--bs-success);border-radius:var(--bs-border-radius)}.is-valid~.valid-feedback,.is-valid~.valid-tooltip,.was-validated :valid~.valid-feedback,.was-validated :valid~.valid-tooltip{display:block}.form-control.is-valid,.was-validated .form-control:valid{border-color:var(--bs-form-valid-border-color);padding-right:calc(1.5em + .75rem);background-image:url(\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 8 8\'%3e%3cpath fill=\'%23198754\' d=\'M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z\'/%3e%3c/svg%3e\");background-repeat:no-repeat;background-position:right calc(.375em + .1875rem) center;background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.form-control.is-valid:focus,.was-validated .form-control:valid:focus{border-color:var(--bs-form-valid-border-color);box-shadow:0 0 0 .25rem rgba(var(--bs-success-rgb),.25)}.was-validated textarea.form-control:valid,textarea.form-control.is-valid{padding-right:calc(1.5em + .75rem);background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.form-select.is-valid,.was-validated .form-select:valid{border-color:var(--bs-form-valid-border-color)}.form-select.is-valid:not([multiple]):not([size]),.form-select.is-valid:not([multiple])[size=\"1\"],.was-validated .form-select:valid:not([multiple]):not([size]),.was-validated .form-select:valid:not([multiple])[size=\"1\"]{--bs-form-select-bg-icon:url(\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 8 8\'%3e%3cpath fill=\'%23198754\' d=\'M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z\'/%3e%3c/svg%3e\");padding-right:4.125rem;background-position:right .75rem center,center right 2.25rem;background-size:16px 12px,calc(.75em + .375rem) calc(.75em + .375rem)}.form-select.is-valid:focus,.was-validated .form-select:valid:focus{border-color:var(--bs-form-valid-border-color);box-shadow:0 0 0 .25rem rgba(var(--bs-success-rgb),.25)}.form-control-color.is-valid,.was-validated .form-control-color:valid{width:calc(3rem + calc(1.5em + .75rem))}.form-check-input.is-valid,.was-validated .form-check-input:valid{border-color:var(--bs-form-valid-border-color)}.form-check-input.is-valid:checked,.was-validated .form-check-input:valid:checked{background-color:var(--bs-form-valid-color)}.form-check-input.is-valid:focus,.was-validated .form-check-input:valid:focus{box-shadow:0 0 0 .25rem rgba(var(--bs-success-rgb),.25)}.form-check-input.is-valid~.form-check-label,.was-validated .form-check-input:valid~.form-check-label{color:var(--bs-form-valid-color)}.form-check-inline .form-check-input~.valid-feedback{margin-left:.5em}.input-group>.form-control:not(:focus).is-valid,.input-group>.form-floating:not(:focus-within).is-valid,.input-group>.form-select:not(:focus).is-valid,.was-validated .input-group>.form-control:not(:focus):valid,.was-validated .input-group>.form-floating:not(:focus-within):valid,.was-validated .input-group>.form-select:not(:focus):valid{z-index:3}.invalid-feedback{display:none;width:100%;margin-top:.25rem;font-size:.875em;color:var(--bs-form-invalid-color)}.invalid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;color:#fff;background-color:var(--bs-danger);border-radius:var(--bs-border-radius)}.is-invalid~.invalid-feedback,.is-invalid~.invalid-tooltip,.was-validated :invalid~.invalid-feedback,.was-validated :invalid~.invalid-tooltip{display:block}.form-control.is-invalid,.was-validated .form-control:invalid{border-color:var(--bs-form-invalid-border-color);padding-right:calc(1.5em + .75rem);background-image:url(\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 12 12\' width=\'12\' height=\'12\' fill=\'none\' stroke=\'%23dc3545\'%3e%3ccircle cx=\'6\' cy=\'6\' r=\'4.5\'/%3e%3cpath stroke-linejoin=\'round\' d=\'M5.8 3.6h.4L6 6.5z\'/%3e%3ccircle cx=\'6\' cy=\'8.2\' r=\'.6\' fill=\'%23dc3545\' stroke=\'none\'/%3e%3c/svg%3e\");background-repeat:no-repeat;background-position:right calc(.375em + .1875rem) center;background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.form-control.is-invalid:focus,.was-validated .form-control:invalid:focus{border-color:var(--bs-form-invalid-border-color);box-shadow:0 0 0 .25rem rgba(var(--bs-danger-rgb),.25)}.was-validated textarea.form-control:invalid,textarea.form-control.is-invalid{padding-right:calc(1.5em + .75rem);background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.form-select.is-invalid,.was-validated .form-select:invalid{border-color:var(--bs-form-invalid-border-color)}.form-select.is-invalid:not([multiple]):not([size]),.form-select.is-invalid:not([multiple])[size=\"1\"],.was-validated .form-select:invalid:not([multiple]):not([size]),.was-validated .form-select:invalid:not([multiple])[size=\"1\"]{--bs-form-select-bg-icon:url(\"data:image/svg+xml,%3csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 12 12\' width=\'12\' height=\'12\' fill=\'none\' stroke=\'%23dc3545\'%3e%3ccircle cx=\'6\' cy=\'6\' r=\'4.5\'/%3e%3cpath stroke-linejoin=\'round\' d=\'M5.8 3.6h.4L6 6.5z\'/%3e%3ccircle cx=\'6\' cy=\'8.2\' r=\'.6\' fill=\'%23dc3545\' stroke=\'none\'/%3e%3c/svg%3e\");padding-right:4.125rem;background-position:right .75rem center,center right 2.25rem;background-size:16px 12px,calc(.75em + .375rem) calc(.75em + .375rem)}.form-select.is-invalid:focus,.was-validated .form-select:invalid:focus{border-color:var(--bs-form-invalid-border-color);box-shadow:0 0 0 .25rem rgba(var(--bs-danger-rgb),.25)}.form-control-color.is-invalid,.was-validated .form-control-color:invalid{width:calc(3rem + calc(1.5em + .75rem))}.form-check-input.is-invalid,.was-validated .form-check-input:invalid{border-color:var(--bs-form-invalid-border-color)}.form-check-input.is-invalid:checked,.was-validated .form-check-input:invalid:checked{background-color:var(--bs-form-invalid-color)}.form-check-input.is-invalid:focus,.was-validated .form-check-input:invalid:focus{box-shadow:0 0 0 .25rem rgba(var(--bs-danger-rgb),.25)}.form-check-input.is-invalid~.form-check-label,.was-validated .form-check-input:invalid~.form-check-label{color:var(--bs-form-invalid-color)}.form-check-inline .form-check-input~.invalid-feedback{margin-left:.5em}.input-group>.form-control:not(:focus).is-invalid,.input-group>.form-floating:not(:focus-within).is-invalid,.input-group>.form-select:not(:focus).is-invalid,.was-validated .input-group>.form-control:not(:focus):invalid,.was-validated .input-group>.form-floating:not(:focus-within):invalid,.was-validated .input-group>.form-select:not(:focus):invalid{z-index:4}.btn{--bs-btn-padding-x:0.75rem;--bs-btn-padding-y:0.375rem;--bs-btn-font-family: ;--bs-btn-font-size:1rem;--bs-btn-font-weight:400;--bs-btn-line-height:1.5;--bs-btn-color:var(--bs-body-color);--bs-btn-bg:transparent;--bs-btn-border-width:var(--bs-border-width);--bs-btn-border-color:transparent;--bs-btn-border-radius:var(--bs-border-radius);--bs-btn-hover-border-color:transparent;--bs-btn-box-shadow:inset 0 1px 0 rgba(255, 255, 255, 0.15),0 1px 1px rgba(0, 0, 0, 0.075);--bs-btn-disabled-opacity:0.65;--bs-btn-focus-box-shadow:0 0 0 0.25rem rgba(var(--bs-btn-focus-shadow-rgb), .5);display:inline-block;padding:var(--bs-btn-padding-y) var(--bs-btn-padding-x);font-family:var(--bs-btn-font-family);font-size:var(--bs-btn-font-size);font-weight:var(--bs-btn-font-weight);line-height:var(--bs-btn-line-height);color:var(--bs-btn-color);text-align:center;text-decoration:none;vertical-align:middle;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;border:var(--bs-btn-border-width) solid var(--bs-btn-border-color);border-radius:var(--bs-btn-border-radius);background-color:var(--bs-btn-bg);transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.btn{transition:none}}.btn:hover{color:var(--bs-btn-hover-color);background-color:var(--bs-btn-hover-bg);border-color:var(--bs-btn-hover-border-color)}.btn-check+.btn:hover{color:var(--bs-btn-color);background-color:var(--bs-btn-bg);border-color:var(--bs-btn-border-color)}.btn:focus-visible{color:var(--bs-btn-hover-color);background-color:var(--bs-btn-hover-bg);border-color:var(--bs-btn-hover-border-color);outline:0;box-shadow:var(--bs-btn-focus-box-shadow)}.btn-check:focus-visible+.btn{border-color:var(--bs-btn-hover-border-color);outline:0;box-shadow:var(--bs-btn-focus-box-shadow)}.btn-check:checked+.btn,.btn.active,.btn.show,.btn:first-child:active,:not(.btn-check)+.btn:active{color:var(--bs-btn-active-color);background-color:var(--bs-btn-active-bg);border-color:var(--bs-btn-active-border-color)}.btn-check:checked+.btn:focus-visible,.btn.active:focus-visible,.btn.show:focus-visible,.btn:first-child:active:focus-visible,:not(.btn-check)+.btn:active:focus-visible{box-shadow:var(--bs-btn-focus-box-shadow)}.btn.disabled,.btn:disabled,fieldset:disabled .btn{color:var(--bs-btn-disabled-color);pointer-events:none;background-color:var(--bs-btn-disabled-bg);border-color:var(--bs-btn-disabled-border-color);opacity:var(--bs-btn-disabled-opacity)}.btn-primary{--bs-btn-color:#fff;--bs-btn-bg:#0d6efd;--bs-btn-border-color:#0d6efd;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#0b5ed7;--bs-btn-hover-border-color:#0a58ca;--bs-btn-focus-shadow-rgb:49,132,253;--bs-btn-active-color:#fff;--bs-btn-active-bg:#0a58ca;--bs-btn-active-border-color:#0a53be;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#fff;--bs-btn-disabled-bg:#0d6efd;--bs-btn-disabled-border-color:#0d6efd}.btn-secondary{--bs-btn-color:#fff;--bs-btn-bg:#6c757d;--bs-btn-border-color:#6c757d;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#5c636a;--bs-btn-hover-border-color:#565e64;--bs-btn-focus-shadow-rgb:130,138,145;--bs-btn-active-color:#fff;--bs-btn-active-bg:#565e64;--bs-btn-active-border-color:#51585e;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#fff;--bs-btn-disabled-bg:#6c757d;--bs-btn-disabled-border-color:#6c757d}.btn-success{--bs-btn-color:#fff;--bs-btn-bg:#198754;--bs-btn-border-color:#198754;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#157347;--bs-btn-hover-border-color:#146c43;--bs-btn-focus-shadow-rgb:60,153,110;--bs-btn-active-color:#fff;--bs-btn-active-bg:#146c43;--bs-btn-active-border-color:#13653f;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#fff;--bs-btn-disabled-bg:#198754;--bs-btn-disabled-border-color:#198754}.btn-info{--bs-btn-color:#000;--bs-btn-bg:#0dcaf0;--bs-btn-border-color:#0dcaf0;--bs-btn-hover-color:#000;--bs-btn-hover-bg:#31d2f2;--bs-btn-hover-border-color:#25cff2;--bs-btn-focus-shadow-rgb:11,172,204;--bs-btn-active-color:#000;--bs-btn-active-bg:#3dd5f3;--bs-btn-active-border-color:#25cff2;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#000;--bs-btn-disabled-bg:#0dcaf0;--bs-btn-disabled-border-color:#0dcaf0}.btn-warning{--bs-btn-color:#000;--bs-btn-bg:#ffc107;--bs-btn-border-color:#ffc107;--bs-btn-hover-color:#000;--bs-btn-hover-bg:#ffca2c;--bs-btn-hover-border-color:#ffc720;--bs-btn-focus-shadow-rgb:217,164,6;--bs-btn-active-color:#000;--bs-btn-active-bg:#ffcd39;--bs-btn-active-border-color:#ffc720;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#000;--bs-btn-disabled-bg:#ffc107;--bs-btn-disabled-border-color:#ffc107}.btn-danger{--bs-btn-color:#fff;--bs-btn-bg:#dc3545;--bs-btn-border-color:#dc3545;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#bb2d3b;--bs-btn-hover-border-color:#b02a37;--bs-btn-focus-shadow-rgb:225,83,97;--bs-btn-active-color:#fff;--bs-btn-active-bg:#b02a37;--bs-btn-active-border-color:#a52834;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#fff;--bs-btn-disabled-bg:#dc3545;--bs-btn-disabled-border-color:#dc3545}.btn-light{--bs-btn-color:#000;--bs-btn-bg:#f8f9fa;--bs-btn-border-color:#f8f9fa;--bs-btn-hover-color:#000;--bs-btn-hover-bg:#d3d4d5;--bs-btn-hover-border-color:#c6c7c8;--bs-btn-focus-shadow-rgb:211,212,213;--bs-btn-active-color:#000;--bs-btn-active-bg:#c6c7c8;--bs-btn-active-border-color:#babbbc;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#000;--bs-btn-disabled-bg:#f8f9fa;--bs-btn-disabled-border-color:#f8f9fa}.btn-dark{--bs-btn-color:#fff;--bs-btn-bg:#212529;--bs-btn-border-color:#212529;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#424649;--bs-btn-hover-border-color:#373b3e;--bs-btn-focus-shadow-rgb:66,70,73;--bs-btn-active-color:#fff;--bs-btn-active-bg:#4d5154;--bs-btn-active-border-color:#373b3e;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#fff;--bs-btn-disabled-bg:#212529;--bs-btn-disabled-border-color:#212529}.btn-outline-primary{--bs-btn-color:#0d6efd;--bs-btn-border-color:#0d6efd;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#0d6efd;--bs-btn-hover-border-color:#0d6efd;--bs-btn-focus-shadow-rgb:13,110,253;--bs-btn-active-color:#fff;--bs-btn-active-bg:#0d6efd;--bs-btn-active-border-color:#0d6efd;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#0d6efd;--bs-btn-disabled-bg:transparent;--bs-btn-disabled-border-color:#0d6efd;--bs-gradient:none}.btn-outline-secondary{--bs-btn-color:#6c757d;--bs-btn-border-color:#6c757d;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#6c757d;--bs-btn-hover-border-color:#6c757d;--bs-btn-focus-shadow-rgb:108,117,125;--bs-btn-active-color:#fff;--bs-btn-active-bg:#6c757d;--bs-btn-active-border-color:#6c757d;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#6c757d;--bs-btn-disabled-bg:transparent;--bs-btn-disabled-border-color:#6c757d;--bs-gradient:none}.btn-outline-success{--bs-btn-color:#198754;--bs-btn-border-color:#198754;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#198754;--bs-btn-hover-border-color:#198754;--bs-btn-focus-shadow-rgb:25,135,84;--bs-btn-active-color:#fff;--bs-btn-active-bg:#198754;--bs-btn-active-border-color:#198754;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#198754;--bs-btn-disabled-bg:transparent;--bs-btn-disabled-border-color:#198754;--bs-gradient:none}.btn-outline-info{--bs-btn-color:#0dcaf0;--bs-btn-border-color:#0dcaf0;--bs-btn-hover-color:#000;--bs-btn-hover-bg:#0dcaf0;--bs-btn-hover-border-color:#0dcaf0;--bs-btn-focus-shadow-rgb:13,202,240;--bs-btn-active-color:#000;--bs-btn-active-bg:#0dcaf0;--bs-btn-active-border-color:#0dcaf0;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#0dcaf0;--bs-btn-disabled-bg:transparent;--bs-btn-disabled-border-color:#0dcaf0;--bs-gradient:none}.btn-outline-warning{--bs-btn-color:#ffc107;--bs-btn-border-color:#ffc107;--bs-btn-hover-color:#000;--bs-btn-hover-bg:#ffc107;--bs-btn-hover-border-color:#ffc107;--bs-btn-focus-shadow-rgb:255,193,7;--bs-btn-active-color:#000;--bs-btn-active-bg:#ffc107;--bs-btn-active-border-color:#ffc107;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#ffc107;--bs-btn-disabled-bg:transparent;--bs-btn-disabled-border-color:#ffc107;--bs-gradient:none}.btn-outline-danger{--bs-btn-color:#dc3545;--bs-btn-border-color:#dc3545;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#dc3545;--bs-btn-hover-border-color:#dc3545;--bs-btn-focus-shadow-rgb:220,53,69;--bs-btn-active-color:#fff;--bs-btn-active-bg:#dc3545;--bs-btn-active-border-color:#dc3545;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#dc3545;--bs-btn-disabled-bg:transparent;--bs-btn-disabled-border-color:#dc3545;--bs-gradient:none}.btn-outline-light{--bs-btn-color:#f8f9fa;--bs-btn-border-color:#f8f9fa;--bs-btn-hover-color:#000;--bs-btn-hover-bg:#f8f9fa;--bs-btn-hover-border-color:#f8f9fa;--bs-btn-focus-shadow-rgb:248,249,250;--bs-btn-active-color:#000;--bs-btn-active-bg:#f8f9fa;--bs-btn-active-border-color:#f8f9fa;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#f8f9fa;--bs-btn-disabled-bg:transparent;--bs-btn-disabled-border-color:#f8f9fa;--bs-gradient:none}.btn-outline-dark{--bs-btn-color:#212529;--bs-btn-border-color:#212529;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#212529;--bs-btn-hover-border-color:#212529;--bs-btn-focus-shadow-rgb:33,37,41;--bs-btn-active-color:#fff;--bs-btn-active-bg:#212529;--bs-btn-active-border-color:#212529;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#212529;--bs-btn-disabled-bg:transparent;--bs-btn-disabled-border-color:#212529;--bs-gradient:none}.btn-link{--bs-btn-font-weight:400;--bs-btn-color:var(--bs-link-color);--bs-btn-bg:transparent;--bs-btn-border-color:transparent;--bs-btn-hover-color:var(--bs-link-hover-color);--bs-btn-hover-border-color:transparent;--bs-btn-active-color:var(--bs-link-hover-color);--bs-btn-active-border-color:transparent;--bs-btn-disabled-color:#6c757d;--bs-btn-disabled-border-color:transparent;--bs-btn-box-shadow:0 0 0 #000;--bs-btn-focus-shadow-rgb:49,132,253;text-decoration:underline}.btn-link:focus-visible{color:var(--bs-btn-color)}.btn-link:hover{color:var(--bs-btn-hover-color)}.btn-group-lg>.btn,.btn-lg{--bs-btn-padding-y:0.5rem;--bs-btn-padding-x:1rem;--bs-btn-font-size:1.25rem;--bs-btn-border-radius:var(--bs-border-radius-lg)}.btn-group-sm>.btn,.btn-sm{--bs-btn-padding-y:0.25rem;--bs-btn-padding-x:0.5rem;--bs-btn-font-size:0.875rem;--bs-btn-border-radius:var(--bs-border-radius-sm)}.fade{transition:opacity .15s linear}@media (prefers-reduced-motion:reduce){.fade{transition:none}}.fade:not(.show){opacity:0}.collapse:not(.show){display:none}.collapsing{height:0;overflow:hidden;transition:height .35s ease}@media (prefers-reduced-motion:reduce){.collapsing{transition:none}}.collapsing.collapse-horizontal{width:0;height:auto;transition:width .35s ease}@media (prefers-reduced-motion:reduce){.collapsing.collapse-horizontal{transition:none}}.dropdown,.dropdown-center,.dropend,.dropstart,.dropup,.dropup-center{position:relative}.dropdown-toggle{white-space:nowrap}.dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\"\";border-top:.3em solid;border-right:.3em solid transparent;border-bottom:0;border-left:.3em solid transparent}.dropdown-toggle:empty::after{margin-left:0}.dropdown-menu{--bs-dropdown-zindex:1000;--bs-dropdown-min-width:10rem;--bs-dropdown-padding-x:0;--bs-dropdown-padding-y:0.5rem;--bs-dropdown-spacer:0.125rem;--bs-dropdown-font-size:1rem;--bs-dropdown-color:var(--bs-body-color);--bs-dropdown-bg:var(--bs-body-bg);--bs-dropdown-border-color:var(--bs-border-color-translucent);--bs-dropdown-border-radius:var(--bs-border-radius);--bs-dropdown-border-width:var(--bs-border-width);--bs-dropdown-inner-border-radius:calc(var(--bs-border-radius) - va', '```html\n<div class=\'card\'>\n  <div class=\'card-header bg-danger text-white\'>\n    Vulnerabilidades de Seguridad\n  </div>\n  <div class=\'card-body\'>\n    Este código CSS de Bootstrap no presenta vulnerabilidades de seguridad directas. Los archivos CSS, en general, no son susceptibles a vulnerabilidades de ejecución de código como las que se encuentran en lenguajes de scripting (como JavaScript).\n\n    Sin embargo, hay algunas consideraciones importantes relacionadas con la seguridad al usar CSS:\n\n    <ul>\n      <li><b>Cross-Site Scripting (XSS)</b>: El CSS inyectado a través de una vulnerabilidad XSS puede utilizarse para alterar la apariencia de una página de manera engañosa (por ejemplo, imitando una solicitud de inicio de sesión) o para robar información del usuario.  Si este CSS se insertara dinámicamente basado en la entrada del usuario sin un saneamiento adecuado, podría ser un problema.</li>\n      <li><b>Ataques de Clickjacking</b>: CSS puede manipular la apariencia de un sitio web para engañar a los usuarios para que hagan clic en enlaces o botones que no pretendían.</li>\n      <li><b>Ataques de Denegación de Servicio (DoS)</b>: Si bien es menos común, CSS muy complejo puede, en teoría, consumir recursos significativos del navegador y contribuir a ataques DoS.</li>\n    </ul>\n  </div>\n</div>\n\n<div class=\'card\'>\n  <div class=\'card-header bg-warning\'>\n    Métricas de Calidad del Código\n  </div>\n  <div class=\'card-body\'>\n    <ul>\n      <li><b>Complejidad</b>: El código es extenso y contiene muchas clases CSS para diferentes componentes y estados.  La alta complejidad inherente a frameworks como Bootstrap se gestiona mediante una buena estructura modular. La complejidad ciclomática no aplica directamente al código CSS.</li>\n      <li><b>Duplicación</b>: Debido a la naturaleza modular de Bootstrap (y frameworks CSS en general), hay una cierta cantidad de duplicación inherente a la definición de estilos consistentes en diferentes elementos.  Sin embargo, Bootstrap intenta mitigar esto usando variables CSS.</li>\n      <li><b>Legibilidad</b>: El código es legible en la medida en que las clases CSS siguen una convención de nombres consistente y bien documentada. Sin embargo, el tamaño del archivo puede dificultar la navegación.</li>\n      <li><b>Acoplamiento</b>:  El acoplamiento es inherentemente alto con el HTML. Se espera que la estructura del HTML coincida con las clases CSS de Bootstrap. Se pueden usar metodologías como BEM (Block, Element, Modifier) para reducir aún más el acoplamiento.</li>\n      <li><b>Tamaño del archivo</b>: El tamaño de archivo es considerable. Para reducirlo se recomienda eliminar estilos no utilizados y minificar el código.</li>\n    </ul>\n  </div>\n</div>\n\n<div class=\'card border-success\'>\n  <div class=\'card-header bg-success text-white\'>\n    Solución Propuesta\n  </div>\n  <div class=\'card-body\'>\n    <p><b>Mitigación de XSS:</b></p>\n    <ul>\n      <li><b>Sanear entradas del usuario:</b> No insertar datos proporcionados por el usuario directamente en el CSS.  Si es necesario, escapar o validar rigurosamente los datos.</li>\n      <li><b>Content Security Policy (CSP):</b> Implementar CSP para controlar las fuentes de las que el navegador puede cargar recursos.</li>\n    </ul>\n\n    <p><b>Mejoras de calidad del código y rendimiento:</b></p>\n    <ul>\n      <li><b>Minificación:</b> Reduce el tamaño del archivo CSS eliminando espacios en blanco y comentarios innecesarios.</li>\n      <li><b>Eliminación de CSS no utilizado:</b> Utilizar herramientas como PurgeCSS o un CSS tree shaking para eliminar reglas CSS que no se usan en el proyecto.</li>\n      <li><b>Compresión Gzip:</b> Servir los archivos CSS comprimidos mediante Gzip para reducir el tiempo de descarga.</li>\n      <li><b>Cache del navegador:</b> Configurar correctamente los encabezados de cache para que los navegadores puedan almacenar en caché los archivos CSS y evitar descargas repetidas.</li>\n      <li><b>Revisión del código</b>: Incluir revisiones de código para garantizar que se sigan las convenciones de nombres y que el código sea fácil de mantener.</li>\n    </ul>\n  </div>\n</div>\n```', '2025-06-10 02:45:57', 3);
INSERT INTO `vulnerabilidades` (`id`, `archivo`, `tipo_vulnerabilidad`, `codigo_vulnerable`, `solucion_propuesta`, `fecha_subida`, `id_zip`) VALUES
(5, 'dataTables.bootstrap5.min.css', 'Detectado por GPT', ':root{--dt-row-selected: 13, 110, 253;--dt-row-selected-text: 255, 255, 255;--dt-row-selected-link: 9, 10, 11}table.dataTable td.dt-control{text-align:center;cursor:pointer}table.dataTable td.dt-control:before{height:1em;width:1em;margin-top:-9px;display:inline-block;color:white;border:.15em solid white;border-radius:1em;box-shadow:0 0 .2em #444;box-sizing:content-box;text-align:center;text-indent:0 !important;font-family:\"Courier New\",Courier,monospace;line-height:1em;content:\"+\";background-color:#31b131}table.dataTable tr.dt-hasChild td.dt-control:before{content:\"-\";background-color:#d33333}table.dataTable thead>tr>th.sorting,table.dataTable thead>tr>th.sorting_asc,table.dataTable thead>tr>th.sorting_desc,table.dataTable thead>tr>th.sorting_asc_disabled,table.dataTable thead>tr>th.sorting_desc_disabled,table.dataTable thead>tr>td.sorting,table.dataTable thead>tr>td.sorting_asc,table.dataTable thead>tr>td.sorting_desc,table.dataTable thead>tr>td.sorting_asc_disabled,table.dataTable thead>tr>td.sorting_desc_disabled{cursor:pointer;position:relative;padding-right:26px}table.dataTable thead>tr>th.sorting:before,table.dataTable thead>tr>th.sorting:after,table.dataTable thead>tr>th.sorting_asc:before,table.dataTable thead>tr>th.sorting_asc:after,table.dataTable thead>tr>th.sorting_desc:before,table.dataTable thead>tr>th.sorting_desc:after,table.dataTable thead>tr>th.sorting_asc_disabled:before,table.dataTable thead>tr>th.sorting_asc_disabled:after,table.dataTable thead>tr>th.sorting_desc_disabled:before,table.dataTable thead>tr>th.sorting_desc_disabled:after,table.dataTable thead>tr>td.sorting:before,table.dataTable thead>tr>td.sorting:after,table.dataTable thead>tr>td.sorting_asc:before,table.dataTable thead>tr>td.sorting_asc:after,table.dataTable thead>tr>td.sorting_desc:before,table.dataTable thead>tr>td.sorting_desc:after,table.dataTable thead>tr>td.sorting_asc_disabled:before,table.dataTable thead>tr>td.sorting_asc_disabled:after,table.dataTable thead>tr>td.sorting_desc_disabled:before,table.dataTable thead>tr>td.sorting_desc_disabled:after{position:absolute;display:block;opacity:.125;right:10px;line-height:9px;font-size:.8em}table.dataTable thead>tr>th.sorting:before,table.dataTable thead>tr>th.sorting_asc:before,table.dataTable thead>tr>th.sorting_desc:before,table.dataTable thead>tr>th.sorting_asc_disabled:before,table.dataTable thead>tr>th.sorting_desc_disabled:before,table.dataTable thead>tr>td.sorting:before,table.dataTable thead>tr>td.sorting_asc:before,table.dataTable thead>tr>td.sorting_desc:before,table.dataTable thead>tr>td.sorting_asc_disabled:before,table.dataTable thead>tr>td.sorting_desc_disabled:before{bottom:50%;content:\"▲\";content:\"▲\"/\"\"}table.dataTable thead>tr>th.sorting:after,table.dataTable thead>tr>th.sorting_asc:after,table.dataTable thead>tr>th.sorting_desc:after,table.dataTable thead>tr>th.sorting_asc_disabled:after,table.dataTable thead>tr>th.sorting_desc_disabled:after,table.dataTable thead>tr>td.sorting:after,table.dataTable thead>tr>td.sorting_asc:after,table.dataTable thead>tr>td.sorting_desc:after,table.dataTable thead>tr>td.sorting_asc_disabled:after,table.dataTable thead>tr>td.sorting_desc_disabled:after{top:50%;content:\"▼\";content:\"▼\"/\"\"}table.dataTable thead>tr>th.sorting_asc:before,table.dataTable thead>tr>th.sorting_desc:after,table.dataTable thead>tr>td.sorting_asc:before,table.dataTable thead>tr>td.sorting_desc:after{opacity:.6}table.dataTable thead>tr>th.sorting_desc_disabled:after,table.dataTable thead>tr>th.sorting_asc_disabled:before,table.dataTable thead>tr>td.sorting_desc_disabled:after,table.dataTable thead>tr>td.sorting_asc_disabled:before{display:none}table.dataTable thead>tr>th:active,table.dataTable thead>tr>td:active{outline:none}div.dataTables_scrollBody>table.dataTable>thead>tr>th:before,div.dataTables_scrollBody>table.dataTable>thead>tr>th:after,div.dataTables_scrollBody>table.dataTable>thead>tr>td:before,div.dataTables_scrollBody>table.dataTable>thead>tr>td:after{display:none}div.dataTables_processing{position:absolute;top:50%;left:50%;width:200px;margin-left:-100px;margin-top:-26px;text-align:center;padding:2px}div.dataTables_processing>div:last-child{position:relative;width:80px;height:15px;margin:1em auto}div.dataTables_processing>div:last-child>div{position:absolute;top:0;width:13px;height:13px;border-radius:50%;background:rgb(13, 110, 253);background:rgb(var(--dt-row-selected));animation-timing-function:cubic-bezier(0, 1, 1, 0)}div.dataTables_processing>div:last-child>div:nth-child(1){left:8px;animation:datatables-loader-1 .6s infinite}div.dataTables_processing>div:last-child>div:nth-child(2){left:8px;animation:datatables-loader-2 .6s infinite}div.dataTables_processing>div:last-child>div:nth-child(3){left:32px;animation:datatables-loader-2 .6s infinite}div.dataTables_processing>div:last-child>div:nth-child(4){left:56px;animation:datatables-loader-3 .6s infinite}@keyframes datatables-loader-1{0%{transform:scale(0)}100%{transform:scale(1)}}@keyframes datatables-loader-3{0%{transform:scale(1)}100%{transform:scale(0)}}@keyframes datatables-loader-2{0%{transform:translate(0, 0)}100%{transform:translate(24px, 0)}}table.dataTable.nowrap th,table.dataTable.nowrap td{white-space:nowrap}table.dataTable th.dt-left,table.dataTable td.dt-left{text-align:left}table.dataTable th.dt-center,table.dataTable td.dt-center,table.dataTable td.dataTables_empty{text-align:center}table.dataTable th.dt-right,table.dataTable td.dt-right{text-align:right}table.dataTable th.dt-justify,table.dataTable td.dt-justify{text-align:justify}table.dataTable th.dt-nowrap,table.dataTable td.dt-nowrap{white-space:nowrap}table.dataTable thead th,table.dataTable thead td,table.dataTable tfoot th,table.dataTable tfoot td{text-align:left}table.dataTable thead th.dt-head-left,table.dataTable thead td.dt-head-left,table.dataTable tfoot th.dt-head-left,table.dataTable tfoot td.dt-head-left{text-align:left}table.dataTable thead th.dt-head-center,table.dataTable thead td.dt-head-center,table.dataTable tfoot th.dt-head-center,table.dataTable tfoot td.dt-head-center{text-align:center}table.dataTable thead th.dt-head-right,table.dataTable thead td.dt-head-right,table.dataTable tfoot th.dt-head-right,table.dataTable tfoot td.dt-head-right{text-align:right}table.dataTable thead th.dt-head-justify,table.dataTable thead td.dt-head-justify,table.dataTable tfoot th.dt-head-justify,table.dataTable tfoot td.dt-head-justify{text-align:justify}table.dataTable thead th.dt-head-nowrap,table.dataTable thead td.dt-head-nowrap,table.dataTable tfoot th.dt-head-nowrap,table.dataTable tfoot td.dt-head-nowrap{white-space:nowrap}table.dataTable tbody th.dt-body-left,table.dataTable tbody td.dt-body-left{text-align:left}table.dataTable tbody th.dt-body-center,table.dataTable tbody td.dt-body-center{text-align:center}table.dataTable tbody th.dt-body-right,table.dataTable tbody td.dt-body-right{text-align:right}table.dataTable tbody th.dt-body-justify,table.dataTable tbody td.dt-body-justify{text-align:justify}table.dataTable tbody th.dt-body-nowrap,table.dataTable tbody td.dt-body-nowrap{white-space:nowrap}/*! Bootstrap 5 integration for DataTables\r\n *\r\n * ©2020 SpryMedia Ltd, all rights reserved.\r\n * License: MIT datatables.net/license/mit\r\n */table.dataTable{clear:both;margin-top:6px !important;margin-bottom:6px !important;max-width:none !important;border-collapse:separate !important;border-spacing:0}table.dataTable td,table.dataTable th{-webkit-box-sizing:content-box;box-sizing:content-box}table.dataTable td.dataTables_empty,table.dataTable th.dataTables_empty{text-align:center}table.dataTable.nowrap th,table.dataTable.nowrap td{white-space:nowrap}table.dataTable.table-striped>tbody>tr:nth-of-type(2n+1)>*{box-shadow:none}table.dataTable>tbody>tr{background-color:transparent}table.dataTable>tbody>tr.selected>*{box-shadow:inset 0 0 0 9999px rgb(13, 110, 253);box-shadow:inset 0 0 0 9999px rgb(var(--dt-row-selected));color:rgb(255, 255, 255);color:rgb(var(--dt-row-selected-text))}table.dataTable>tbody>tr.selected a{color:rgb(9, 10, 11);color:rgb(var(--dt-row-selected-link))}table.dataTable.table-striped>tbody>tr.odd>*{box-shadow:inset 0 0 0 9999px rgba(0, 0, 0, 0.05)}table.dataTable.table-striped>tbody>tr.odd.selected>*{box-shadow:inset 0 0 0 9999px rgba(13, 110, 253, 0.95);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.95)}table.dataTable.table-hover>tbody>tr:hover>*{box-shadow:inset 0 0 0 9999px rgba(0, 0, 0, 0.075)}table.dataTable.table-hover>tbody>tr.selected:hover>*{box-shadow:inset 0 0 0 9999px rgba(13, 110, 253, 0.975);box-shadow:inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.975)}div.dataTables_wrapper div.dataTables_length label{font-weight:normal;text-align:left;white-space:nowrap}div.dataTables_wrapper div.dataTables_length select{width:auto;display:inline-block}div.dataTables_wrapper div.dataTables_filter{text-align:right}div.dataTables_wrapper div.dataTables_filter label{font-weight:normal;white-space:nowrap;text-align:left}div.dataTables_wrapper div.dataTables_filter input{margin-left:.5em;display:inline-block;width:auto}div.dataTables_wrapper div.dataTables_info{padding-top:.85em}div.dataTables_wrapper div.dataTables_paginate{margin:0;white-space:nowrap;text-align:right}div.dataTables_wrapper div.dataTables_paginate ul.pagination{margin:2px 0;white-space:nowrap;justify-content:flex-end}div.dataTables_wrapper div.dt-row{position:relative}div.dataTables_scrollHead table.dataTable{margin-bottom:0 !important}div.dataTables_scrollBody>table{border-top:none;margin-top:0 !important;margin-bottom:0 !important}div.dataTables_scrollBody>table>thead .sorting:before,div.dataTables_scrollBody>table>thead .sorting_asc:before,div.dataTables_scrollBody>table>thead .sorting_desc:before,div.dataTables_scrollBody>table>thead .sorting:after,div.dataTables_scrollBody>table>thead .sorting_asc:after,div.dataTables_scrollBody>table>thead .sorting_desc:after{display:none}div.dataTables_scrollBody>table>tbody tr:first-child th,div.dataTables_scrollBody>table>tbody tr:first-child td{border-top:none}div.dataTables_scrollFoot>.dataTables_scrollFootInner{box-sizing:content-box}div.dataTables_scrollFoot>.dataTables_scrollFootInner>table{margin-top:0 !important;border-top:none}@media screen and (max-width: 767px){div.dataTables_wrapper div.dataTables_length,div.dataTables_wrapper div.dataTables_filter,div.dataTables_wrapper div.dataTables_info,div.dataTables_wrapper div.dataTables_paginate{text-align:center}div.dataTables_wrapper div.dataTables_paginate ul.pagination{justify-content:center !important}}table.dataTable.table-sm>thead>tr>th:not(.sorting_disabled){padding-right:20px}table.table-bordered.dataTable{border-right-width:0}table.table-bordered.dataTable thead tr:first-child th,table.table-bordered.dataTable thead tr:first-child td{border-top-width:1px}table.table-bordered.dataTable th,table.table-bordered.dataTable td{border-left-width:0}table.table-bordered.dataTable th:first-child,table.table-bordered.dataTable th:first-child,table.table-bordered.dataTable td:first-child,table.table-bordered.dataTable td:first-child{border-left-width:1px}table.table-bordered.dataTable th:last-child,table.table-bordered.dataTable th:last-child,table.table-bordered.dataTable td:last-child,table.table-bordered.dataTable td:last-child{border-right-width:1px}table.table-bordered.dataTable th,table.table-bordered.dataTable td{border-bottom-width:1px}div.dataTables_scrollHead table.table-bordered{border-bottom-width:0}div.table-responsive>div.dataTables_wrapper>div.row{margin:0}div.table-responsive>div.dataTables_wrapper>div.row>div[class^=col-]:first-child{padding-left:0}div.table-responsive>div.dataTables_wrapper>div.row>div[class^=col-]:last-child{padding-right:0}', '```html\n<div class=\'container\'>\n    <div class=\'card\'>\n        <div class=\'card-header bg-danger text-white\'>\n            Análisis de Vulnerabilidades y Calidad del Código\n        </div>\n        <div class=\'card-body\'>\n            <h5 class=\'card-title\'>Resumen</h5>\n            <p class=\'card-text\'>El código proporcionado corresponde a estilos CSS para la integración de DataTables con Bootstrap. No se detectan vulnerabilidades de seguridad directas en este código, ya que se trata de una definición de estilos y no incluye lógica de programación ejecutable en el servidor o en el cliente que pueda ser manipulada maliciosamente. Sin embargo, la complejidad y la duplicación pueden afectar la mantenibilidad. El principal riesgo estaría en una inyección CSS si este archivo CSS fuera generado dinámicamente basado en entrada de usuario no saneada (lo cual no se puede determinar solo con este fragmento).\n            </p>\n\n            <h6 class=\'card-subtitle mb-2 text-muted\'>Métricas de Calidad del Código</h6>\n            <ul>\n                <li><strong>Complejidad:</strong> Alta. El código contiene selectores CSS muy largos y anidados, lo que dificulta su comprensión y modificación.</li>\n                <li><strong>Duplicación:</strong> Moderada. Se observa cierta repetición en los selectores y declaraciones CSS, especialmente en los estilos de ordenamiento (<code>sorting</code>, <code>sorting_asc</code>, <code>sorting_desc</code>).</li>\n                <li><strong>Legibilidad:</strong> Baja. La longitud de los selectores y la falta de comentarios dificultan la comprensión del propósito de cada estilo.</li>\n                <li><strong>Acoplamiento:</strong> Alto. El código está fuertemente acoplado a las clases y estructura de DataTables y Bootstrap, lo que limita su reutilización en otros contextos.</li>\n            </ul>\n        </div>\n    </div>\n\n    <div class=\'card\'>\n        <div class=\'card-header bg-warning text-dark\'>\n            Vulnerabilidades Potenciales\n        </div>\n        <div class=\'card-body\'>\n            <h5 class=\'card-title\'>Posible Inyección CSS (Condicional)</h5>\n            <p class=\'card-text\'>\n                <strong>Tipo de Vulnerabilidad:</strong> Inyección CSS (si el CSS se genera dinámicamente).\n                <br>\n                <strong>Línea Aproximada:</strong> No aplica directamente. El riesgo surgiría si este CSS fuera generado dinámicamente, concatenando strings o datos no saneados provenientes del usuario.\n                <br>\n                <strong>Descripción:</strong> Si este archivo CSS fuera construido dinámicamente a partir de entradas de usuario no validadas (por ejemplo, variables que definen los colores o estilos), un atacante podría inyectar código CSS malicioso para alterar la apariencia del sitio web o incluso realizar acciones maliciosas (e.g., robar información mediante ataques de clickjacking disfrazados).\n                <br>\n                <strong>Mitigación:</strong>\n                <ul>\n                    <li><strong>Validación y Saneamiento:</strong> Si el CSS se genera dinámicamente, validar y sanear estrictamente cualquier entrada de usuario que se utilice para construir el CSS. Utilizar listas blancas de valores permitidos en lugar de listas negras.  Escapar caracteres especiales.</li>\n                    <li><strong>Content Security Policy (CSP):</strong> Implementar una política de seguridad de contenido (CSP) robusta para limitar las fuentes de las que se pueden cargar estilos y scripts.</li>\n                    <li><strong>Revisión de Código:</strong> Realizar revisiones de código exhaustivas para identificar posibles puntos de inyección.</li>\n                </ul>\n                <br>\n                <strong>Mejora de Métricas (aplicable si el CSS se genera dinámicamente):</strong> La clave es evitar la generación dinámica del CSS o, en su defecto, asegurar que el proceso de generación sea completamente seguro.\n            </p>\n        </div>\n    </div>\n\n    <div class=\'card border-success\'>\n        <div class=\'card-header bg-success text-white\'>\n            Solución Propuesta\n        </div>\n        <div class=\'card-body\'>\n            <h5 class=\'card-title\'>Recomendaciones de Mejora</h5>\n            <p class=\'card-text\'>\n                <strong>Refactorización CSS:</strong>\n                <ul>\n                    <li><strong>Modularización:</strong> Dividir el CSS en módulos más pequeños y específicos para cada componente de DataTables.</li>\n                    <li><strong>Uso de Preprocesadores (Sass/Less):</strong> Utilizar un preprocesador CSS para mejorar la legibilidad, reducir la duplicación y facilitar el mantenimiento.  Los preprocesadores permiten usar variables, mixins (funciones) y anidamiento de selectores de manera más organizada.</li>\n                    <li><strong>Clases Semánticas:</strong> Utilizar nombres de clases más descriptivos y semánticos que reflejen el propósito de cada estilo.</li>\n                    <li><strong>DRY (Don\'t Repeat Yourself):</strong> Identificar y eliminar la duplicación de código mediante la creación de clases reutilizables o mixins.</li>\n                    <li><strong>Atomic CSS:</strong> Considerar utilizar Atomic CSS, clases que representan una sola regla CSS. Aunque puede aumentar el tamaño del HTML, favorece la reutilización y reduce el tamaño del CSS.</li>\n                </ul>\n\n                <strong>Ejemplo de Refactorización (uso de Sass):</strong>\n\n                <pre>\n                    <code>\n// Variables\n$dt-row-selected: 13, 110, 253;\n$dt-row-selected-text: 255, 255, 255;\n$dt-row-selected-link: 9, 10, 11;\n$primary-color: #31b131;\n$danger-color: #d33333;\n\n// Mixin para flechas de ordenamiento\n@mixin sorting-arrows {\n    position: absolute;\n    display: block;\n    opacity: .125;\n    right: 10px;\n    line-height: 9px;\n    font-size: .8em;\n}\n\n// Estilos base para DataTables\ntable.dataTable {\n    // ... estilos base ...\n\n    td.dt-control {\n        text-align: center;\n        cursor: pointer;\n\n        &:before {\n            height: 1em;\n            width: 1em;\n            margin-top: -9px;\n            display: inline-block;\n            color: white;\n            border: .15em solid white;\n            border-radius: 1em;\n            box-shadow: 0 0 .2em #444;\n            box-sizing: content-box;\n            text-align: center;\n            text-indent: 0 !important;\n            font-family: \"Courier New\", Courier, monospace;\n            line-height: 1em;\n            content: \"+\";\n            background-color: $primary-color;\n        }\n    }\n\n    tr.dt-hasChild td.dt-control:before {\n        content: \"-\";\n        background-color: $danger-color;\n    }\n\n    thead > tr > th {\n        &.sorting,\n        &.sorting_asc,\n        &.sorting_desc,\n        &.sorting_asc_disabled,\n        &.sorting_desc_disabled {\n            cursor: pointer;\n            position: relative;\n            padding-right: 26px;\n\n            &:before,\n            &:after {\n                @include sorting-arrows;\n            }\n\n            &:before {\n                bottom: 50%;\n                content: \"▲\";\n                content: \"▲\" / \"\";\n            }\n\n            &:after {\n                top: 50%;\n                content: \"▼\";\n                content: \"▼\" / \"\";\n            }\n        }\n\n        &.sorting_asc:before,\n        &.sorting_desc:after {\n            opacity: .6;\n        }\n\n        &.sorting_desc_disabled:after,\n        &.sorting_asc_disabled:before {\n            display: none;\n        }\n    }\n}\n\n// ... otros estilos ...\n                    </code>\n                </pre>\n\n                <br>\n                <strong>Beneficios:</strong>\n                <ul>\n                    <li><strong>Mejor Mantenibilidad:</strong> El código será más fácil de entender, modificar y actualizar.</li>\n                    <li><strong>Mayor Reutilización:</strong> Los estilos podrán ser reutilizados en diferentes partes de la aplicación.</li>\n                    <li><strong>Menor Complejidad:</strong> La estructura del CSS será más clara y organizada.</li>\n                    <li><strong>Reducción de Duplicación:</strong> Se eliminará la repetición de código, lo que reducirá el tamaño del archivo CSS.</li>\n                </ul>\n\n            </p>\n        </div>\n    </div>\n</div>\n```\n', '2025-06-10 02:50:24', 3),
(6, 'dataTables.bootstrap5.min.js', 'Detectado por GPT', '/*! DataTables Bootstrap 5 integration\r\n * 2020 SpryMedia Ltd - datatables.net/license\r\n */\r\n!function(t){var n,r;\"function\"==typeof define&&define.amd?define([\"jquery\",\"datatables.net\"],function(e){return t(e,window,document)}):\"object\"==typeof exports?(n=require(\"jquery\"),r=function(e,a){a.fn.dataTable||require(\"datatables.net\")(e,a)},\"undefined\"!=typeof window?module.exports=function(e,a){return e=e||window,a=a||n(e),r(e,a),t(a,0,e.document)}:(r(window,n),module.exports=t(n,window,window.document))):t(jQuery,window,document)}(function(x,e,r,i){\"use strict\";var o=x.fn.dataTable;return x.extend(!0,o.defaults,{dom:\"<\'row\'<\'col-sm-12 col-md-6\'l><\'col-sm-12 col-md-6\'f>><\'row dt-row\'<\'col-sm-12\'tr>><\'row\'<\'col-sm-12 col-md-5\'i><\'col-sm-12 col-md-7\'p>>\",renderer:\"bootstrap\"}),x.extend(o.ext.classes,{sWrapper:\"dataTables_wrapper dt-bootstrap5\",sFilterInput:\"form-control form-control-sm\",sLengthSelect:\"form-select form-select-sm\",sProcessing:\"dataTables_processing card\",sPageButton:\"paginate_button page-item\"}),o.ext.renderer.pageButton.bootstrap=function(d,e,s,a,l,c){function u(e,a){for(var t,n,r=function(e){e.preventDefault(),x(e.currentTarget).hasClass(\"disabled\")||b.page()==e.data.action||b.page(e.data.action).draw(\"page\")},i=0,o=a.length;i<o;i++)if(t=a[i],Array.isArray(t))u(e,t);else{switch(f=p=\"\",t){case\"ellipsis\":p=\"&#x2026;\",f=\"disabled\";break;case\"first\":p=g.sFirst,f=t+(0<l?\"\":\" disabled\");break;case\"previous\":p=g.sPrevious,f=t+(0<l?\"\":\" disabled\");break;case\"next\":p=g.sNext,f=t+(l<c-1?\"\":\" disabled\");break;case\"last\":p=g.sLast,f=t+(l<c-1?\"\":\" disabled\");break;default:p=t+1,f=l===t?\"active\":\"\"}p&&(n=-1!==f.indexOf(\"disabled\"),n=x(\"<li>\",{class:m.sPageButton+\" \"+f,id:0===s&&\"string\"==typeof t?d.sTableId+\"_\"+t:null}).append(x(\"<a>\",{href:n?null:\"#\",\"aria-controls\":d.sTableId,\"aria-disabled\":n?\"true\":null,\"aria-label\":w[t],\"aria-role\":\"link\",\"aria-current\":\"active\"===f?\"page\":null,\"data-dt-idx\":t,tabindex:d.iTabIndex,class:\"page-link\"}).html(p)).appendTo(e),d.oApi._fnBindAction(n,{action:t},r))}}var p,f,t,b=new o.Api(d),m=d.oClasses,g=d.oLanguage.oPaginate,w=d.oLanguage.oAria.paginate||{},e=x(e);try{t=e.find(r.activeElement).data(\"dt-idx\")}catch(e){}var n=e.children(\"ul.pagination\");n.length?n.empty():n=e.html(\"<ul/>\").children(\"ul\").addClass(\"pagination\"),u(n,a),t!==i&&e.find(\"[data-dt-idx=\"+t+\"]\").trigger(\"focus\")},o});', '```html\n<div class=\'container\'>\n  <div class=\'row\'>\n    <div class=\'col-md-12\'>\n      <div class=\'card\'>\n        <div class=\'card-header bg-danger text-white\'>\n          Análisis de Vulnerabilidades y Calidad del Código\n        </div>\n        <div class=\'card-body\'>\n\n          <div class=\'card border-warning mb-3\'>\n            <div class=\'card-header\'>Posible Vulnerabilidad XSS</div>\n            <div class=\'card-body\'>\n              <h5 class=\'card-title\'>Descripción</h5>\n              <p class=\'card-text\'>\n                El código manipula HTML directamente usando `x(\"<a>\").html(p)`. Si la variable `p` contiene HTML malicioso (por ejemplo, desde `g.sFirst`, `g.sPrevious`, `g.sNext`, `g.sLast`, o incluso directamente desde el número de página `t+1`), podría ser explotado para Cross-Site Scripting (XSS).  Esto se vuelve especialmente crítico si las variables de idioma (`g.sFirst`, etc.) son configurables por el usuario o provienen de una fuente no confiable.  El manejo de `aria-label` también usa `w[t]`, que podría ser una fuente de XSS si `w` se construye de manera insegura.\n              </p>\n              <p class=\'card-text\'>\n                <strong>Línea Aproximada:</strong> Dentro de la función `u`, cerca de la creación del elemento `<a>`:\n              </p>\n              <pre><code>x(\"<a>\",{/*...*/}).html(p)</code></pre>\n              <h5 class=\'card-title\'>Mitigación</h5>\n              <ol>\n                <li>\n                  <strong>Escapado de HTML:</strong>  Siempre escapar el contenido de la variable `p` antes de insertarlo en el HTML. Usar, por ejemplo, `x(\"<a>\").text(p)` en lugar de `.html(p)` cuando `p` solo deba contener texto. Si `p` *debe* contener HTML, sanitizarlo usando una librería de sanitización HTML confiable.\n                </li>\n                <li>\n                 <strong>Sanitización de Datos de Idioma:</strong> Asegurarse de que los valores en `g.sFirst`, `g.sPrevious`, `g.sNext`, `g.sLast`, y  `w` estén correctamente escapados o sanitizados al momento de ser definidos y almacenados, antes de que sean usados por este código.\n                </li>\n                <li>\n                  <strong>Validación de Entrada:</strong>  Si los números de página son derivados de entrada del usuario, validar y sanitizar rigurosamente esa entrada para prevenir la inyección de código.\n                </li>\n              </ol>\n            </div>\n          </div>\n\n          <div class=\'card border-info mb-3\'>\n            <div class=\'card-header\'>Métricas de Calidad del Código</div>\n            <div class=\'card-body\'>\n              <h5 class=\'card-title\'>Complejidad Ciclomática</h5>\n              <p class=\'card-text\'>\n                La función `o.ext.renderer.pageButton.bootstrap` parece tener una complejidad ciclomática alta debido a la presencia de múltiples condicionales (`if`, `switch`) y bucles (`for`).  Esto dificulta la comprensión, prueba y mantenimiento del código.\n              </p>\n              <h5 class=\'card-title\'>Acoplamiento</h5>\n              <p class=\'card-text\'>\n                El código está fuertemente acoplado a jQuery y a la API interna de DataTables (`d.oApi._fnBindAction`).  Esto dificulta su reutilización en otros contextos y hace que el código sea más sensible a los cambios en DataTables.\n              </p>\n              <h5 class=\'card-title\'>Legibilidad</h5>\n              <p class=\'card-text\'>\n                La legibilidad se ve comprometida por el uso de nombres de variables abreviados (por ejemplo, `d`, `e`, `s`, `a`, `l`, `c`, `u`, `p`, `f`, `t`, `b`, `m`, `g`, `w`).  Una mejor elección de nombres mejoraría la comprensión del código.\n              </p>\n              <h5 class=\'card-title\'>Duplicación</h5>\n              <p class=\'card-text\'>\n               Hay una pequeña duplicación en el manejo de las clases \"disabled\" en los casos \"first\", \"previous\", \"next\", y \"last\".\n              </p>\n              <h5 class=\'card-title\'>Mejoras Sugeridas</h5>\n              <ul>\n                <li><strong>Refactorización:</strong> Dividir la función `o.ext.renderer.pageButton.bootstrap` en funciones más pequeñas y especializadas para reducir la complejidad.</li>\n                <li><strong>Nombres Descriptivos:</strong> Usar nombres de variables más descriptivos.</li>\n                <li><strong>Abstracción:</strong>  Considerar la posibilidad de abstraer la lógica de renderizado de los botones de paginación para reducir el acoplamiento.</li>\n                <li><strong>Eliminación de Duplicación:</strong>  Refactorizar el código para eliminar la duplicación en el manejo de la clase \"disabled\". Por ejemplo, crear una función auxiliar que determine si un botón debe estar deshabilitado o no.</li>\n              </ul>\n            </div>\n          </div>\n\n          <div class=\'card border-success\'>\n            <div class=\'card-header\'>Solución Propuesta (Fragmento)</div>\n            <div class=\'card-body\'>\n              <p class=\'card-text\'>\n                El siguiente fragmento ilustra cómo se podría escapar el contenido de la variable `p` para mitigar el riesgo de XSS.  Además, se renombran variables para mayor claridad.\n              </p>\n              <pre><code>\nfunction u(element, buttons) {\n  for (let i = 0; i < buttons.length; i++) {\n    const button = buttons[i];\n    if (Array.isArray(button)) {\n      u(element, button);\n    } else {\n      let buttonContent = \'\';\n      let buttonClass = \'\';\n\n      switch (button) {\n        case \"ellipsis\":\n          buttonContent = \"&#x2026;\";\n          buttonClass = \"disabled\";\n          break;\n        case \"first\":\n          buttonContent = language.oPaginate.sFirst;\n          buttonClass = button + (l > 0 ? \"\" : \" disabled\");\n          break;\n        // ... other cases ...\n        default:\n          buttonContent = button + 1;\n          buttonClass = l === button ? \"active\" : \"\";\n      }\n\n      if (buttonContent) {\n        const isDisabled = buttonClass.indexOf(\"disabled\") !== -1;\n        const buttonElement = x(\"<li>\", {\n          class: classes.sPageButton + \" \" + buttonClass,\n          id: 0 === s && \"string\" == typeof button ? tableSettings.sTableId + \"_\" + button : null\n        }).append(\n            x(\"<a>\", {\n              href: isDisabled ? null : \"#\",\n              \"aria-controls\": tableSettings.sTableId,\n              \"aria-disabled\": isDisabled ? \"true\" : null,\n              \"aria-label\": ariaLabels[button],\n              \"aria-role\": \"link\",\n              \"aria-current\": \"active\" === buttonClass ? \"page\" : null,\n              \"data-dt-idx\": button,\n              tabindex: tableSettings.iTabIndex,\n              class: \"page-link\"\n            }).text(buttonContent) // Use .text() instead of .html()\n        ).appendTo(element);\n\n        tableSettings.oApi._fnBindAction(buttonElement, { action: button }, function (e) {\n          e.preventDefault();\n          if (!x(e.currentTarget).hasClass(\"disabled\")) {\n            api.page(e.data.action).draw(\"page\");\n          }\n        });\n      }\n    }\n  }\n}\n              </code></pre>\n              <p class=\'card-text\'>\n                <strong>Cambios Clave:</strong> Se utiliza `.text(buttonContent)` en lugar de `.html(p)` para insertar el contenido del botón, lo que previene la inyección de HTML malicioso.  Además, las variables se han renombrado para mejorar la legibilidad.\n              </p>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n', '2025-06-10 02:51:14', 3);
INSERT INTO `vulnerabilidades` (`id`, `archivo`, `tipo_vulnerabilidad`, `codigo_vulnerable`, `solucion_propuesta`, `fecha_subida`, `id_zip`) VALUES
(7, 'jquery-3.6.0.min.js', 'Detectado por GPT', '/*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */\r\n!function(e,t){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(\"jQuery requires a window with a document\");return t(e)}:t(e)}(\"undefined\"!=typeof window?window:this,function(C,e){\"use strict\";var t=[],r=Object.getPrototypeOf,s=t.slice,g=t.flat?function(e){return t.flat.call(e)}:function(e){return t.concat.apply([],e)},u=t.push,i=t.indexOf,n={},o=n.toString,v=n.hasOwnProperty,a=v.toString,l=a.call(Object),y={},m=function(e){return\"function\"==typeof e&&\"number\"!=typeof e.nodeType&&\"function\"!=typeof e.item},x=function(e){return null!=e&&e===e.window},E=C.document,c={type:!0,src:!0,nonce:!0,noModule:!0};function b(e,t,n){var r,i,o=(n=n||E).createElement(\"script\");if(o.text=e,t)for(r in c)(i=t[r]||t.getAttribute&&t.getAttribute(r))&&o.setAttribute(r,i);n.head.appendChild(o).parentNode.removeChild(o)}function w(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?n[o.call(e)]||\"object\":typeof e}var f=\"3.6.0\",S=function(e,t){return new S.fn.init(e,t)};function p(e){var t=!!e&&\"length\"in e&&e.length,n=w(e);return!m(e)&&!x(e)&&(\"array\"===n||0===t||\"number\"==typeof t&&0<t&&t-1 in e)}S.fn=S.prototype={jquery:f,constructor:S,length:0,toArray:function(){return s.call(this)},get:function(e){return null==e?s.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=S.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return S.each(this,e)},map:function(n){return this.pushStack(S.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(s.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(S.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(S.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(0<=n&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:u,sort:t.sort,splice:t.splice},S.extend=S.fn.extend=function(){var e,t,n,r,i,o,a=arguments[0]||{},s=1,u=arguments.length,l=!1;for(\"boolean\"==typeof a&&(l=a,a=arguments[s]||{},s++),\"object\"==typeof a||m(a)||(a={}),s===u&&(a=this,s--);s<u;s++)if(null!=(e=arguments[s]))for(t in e)r=e[t],\"__proto__\"!==t&&a!==r&&(l&&r&&(S.isPlainObject(r)||(i=Array.isArray(r)))?(n=a[t],o=i&&!Array.isArray(n)?[]:i||S.isPlainObject(n)?n:{},i=!1,a[t]=S.extend(l,o,r)):void 0!==r&&(a[t]=r));return a},S.extend({expando:\"jQuery\"+(f+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||\"[object Object]\"!==o.call(e))&&(!(t=r(e))||\"function\"==typeof(n=v.call(t,\"constructor\")&&t.constructor)&&a.call(n)===l)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t,n){b(e,{nonce:t&&t.nonce},n)},each:function(e,t){var n,r=0;if(p(e)){for(n=e.length;r<n;r++)if(!1===t.call(e[r],r,e[r]))break}else for(r in e)if(!1===t.call(e[r],r,e[r]))break;return e},makeArray:function(e,t){var n=t||[];return null!=e&&(p(Object(e))?S.merge(n,\"string\"==typeof e?[e]:e):u.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:i.call(t,e,n)},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;r<n;r++)e[i++]=t[r];return e.length=i,e},grep:function(e,t,n){for(var r=[],i=0,o=e.length,a=!n;i<o;i++)!t(e[i],i)!==a&&r.push(e[i]);return r},map:function(e,t,n){var r,i,o=0,a=[];if(p(e))for(r=e.length;o<r;o++)null!=(i=t(e[o],o,n))&&a.push(i);else for(o in e)null!=(i=t(e[o],o,n))&&a.push(i);return g(a)},guid:1,support:y}),\"function\"==typeof Symbol&&(S.fn[Symbol.iterator]=t[Symbol.iterator]),S.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"),function(e,t){n[\"[object \"+t+\"]\"]=t.toLowerCase()});var d=function(n){var e,d,b,o,i,h,f,g,w,u,l,T,C,a,E,v,s,c,y,S=\"sizzle\"+1*new Date,p=n.document,k=0,r=0,m=ue(),x=ue(),A=ue(),N=ue(),j=function(e,t){return e===t&&(l=!0),0},D={}.hasOwnProperty,t=[],q=t.pop,L=t.push,H=t.push,O=t.slice,P=function(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1},R=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",M=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",I=\"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\"+M+\"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",W=\"\\\\[\"+M+\"*(\"+I+\")(?:\"+M+\"*([*^$|!~]?=)\"+M+\"*(?:\'((?:\\\\\\\\.|[^\\\\\\\\\'])*)\'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+I+\"))|)\"+M+\"*\\\\]\",F=\":(\"+I+\")(?:\\\\(((\'((?:\\\\\\\\.|[^\\\\\\\\\'])*)\'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+W+\")*)|.*)\\\\)|)\",B=new RegExp(M+\"+\",\"g\"),$=new RegExp(\"^\"+M+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+M+\"+$\",\"g\"),_=new RegExp(\"^\"+M+\"*,\"+M+\"*\"),z=new RegExp(\"^\"+M+\"*([>+~]|\"+M+\")\"+M+\"*\"),U=new RegExp(M+\"|>\"),X=new RegExp(F),V=new RegExp(\"^\"+I+\"$\"),G={ID:new RegExp(\"^#(\"+I+\")\"),CLASS:new RegExp(\"^\\\\.(\"+I+\")\"),TAG:new RegExp(\"^(\"+I+\"|[*])\"),ATTR:new RegExp(\"^\"+W),PSEUDO:new RegExp(\"^\"+F),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+M+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+M+\"*(?:([+-]|)\"+M+\"*(\\\\d+)|))\"+M+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+R+\")$\",\"i\"),needsContext:new RegExp(\"^\"+M+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+M+\"*((?:-\\\\d)?\\\\d*)\"+M+\"*\\\\)|)(?=[^-]|$)\",\"i\")},Y=/HTML$/i,Q=/^(?:input|select|textarea|button)$/i,J=/^h\\d$/i,K=/^[^{]+\\{\\s*\\[native \\w/,Z=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,ee=/[+~]/,te=new RegExp(\"\\\\\\\\[\\\\da-fA-F]{1,6}\"+M+\"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\",\"g\"),ne=function(e,t){var n=\"0x\"+e.slice(1)-65536;return t||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},re=/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,ie=function(e,t){return t?\"\\0\"===e?\"\\ufffd\":e.slice(0,-1)+\"\\\\\"+e.charCodeAt(e.length-1).toString(16)+\" \":\"\\\\\"+e},oe=function(){T()},ae=be(function(e){return!0===e.disabled&&\"fieldset\"===e.nodeName.toLowerCase()},{dir:\"parentNode\",next:\"legend\"});try{H.apply(t=O.call(p.childNodes),p.childNodes),t[p.childNodes.length].nodeType}catch(e){H={apply:t.length?function(e,t){L.apply(e,O.call(t))}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1}}}function se(t,e,n,r){var i,o,a,s,u,l,c,f=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],\"string\"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!r&&(T(e),e=e||C,E)){if(11!==p&&(u=Z.exec(t)))if(i=u[1]){if(9===p){if(!(a=e.getElementById(i)))return n;if(a.id===i)return n.push(a),n}else if(f&&(a=f.getElementById(i))&&y(e,a)&&a.id===i)return n.push(a),n}else{if(u[2])return H.apply(n,e.getElementsByTagName(t)),n;if((i=u[3])&&d.getElementsByClassName&&e.getElementsByClassName)return H.apply(n,e.getElementsByClassName(i)),n}if(d.qsa&&!N[t+\" \"]&&(!v||!v.test(t))&&(1!==p||\"object\"!==e.nodeName.toLowerCase())){if(c=t,f=e,1===p&&(U.test(t)||z.test(t))){(f=ee.test(t)&&ye(e.parentNode)||e)===e&&d.scope||((s=e.getAttribute(\"id\"))?s=s.replace(re,ie):e.setAttribute(\"id\",s=S)),o=(l=h(t)).length;while(o--)l[o]=(s?\"#\"+s:\":scope\")+\" \"+xe(l[o]);c=l.join(\",\")}try{return H.apply(n,f.querySelectorAll(c)),n}catch(e){N(t,!0)}finally{s===S&&e.removeAttribute(\"id\")}}}return g(t.replace($,\"$1\"),e,n,r)}function ue(){var r=[];return function e(t,n){return r.push(t+\" \")>b.cacheLength&&delete e[r.shift()],e[t+\" \"]=n}}function le(e){return e[S]=!0,e}function ce(e){var t=C.createElement(\"fieldset\");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function fe(e,t){var n=e.split(\"|\"),r=n.length;while(r--)b.attrHandle[n[r]]=t}function pe(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function de(t){return function(e){return\"input\"===e.nodeName.toLowerCase()&&e.type===t}}function he(n){return function(e){var t=e.nodeName.toLowerCase();return(\"input\"===t||\"button\"===t)&&e.type===n}}function ge(t){return function(e){return\"form\"in e?e.parentNode&&!1===e.disabled?\"label\"in e?\"label\"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&ae(e)===t:e.disabled===t:\"label\"in e&&e.disabled===t}}function ve(a){return le(function(o){return o=+o,le(function(e,t){var n,r=a([],e.length,o),i=r.length;while(i--)e[n=r[i]]&&(e[n]=!(t[n]=e[n]))})})}function ye(e){return e&&\"undefined\"!=typeof e.getElementsByTagName&&e}for(e in d=se.support={},i=se.isXML=function(e){var t=e&&e.namespaceURI,n=e&&(e.ownerDocument||e).documentElement;return!Y.test(t||n&&n.nodeName||\"HTML\")},T=se.setDocument=function(e){var t,n,r=e?e.ownerDocument||e:p;return r!=C&&9===r.nodeType&&r.documentElement&&(a=(C=r).documentElement,E=!i(C),p!=C&&(n=C.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener(\"unload\",oe,!1):n.attachEvent&&n.attachEvent(\"onunload\",oe)),d.scope=ce(function(e){return a.appendChild(e).appendChild(C.createElement(\"div\")),\"undefined\"!=typeof e.querySelectorAll&&!e.querySelectorAll(\":scope fieldset div\").length}),d.attributes=ce(function(e){return e.className=\"i\",!e.getAttribute(\"className\")}),d.getElementsByTagName=ce(function(e){return e.appendChild(C.createComment(\"\")),!e.getElementsByTagName(\"*\").length}),d.getElementsByClassName=K.test(C.getElementsByClassName),d.getById=ce(function(e){return a.appendChild(e).id=S,!C.getElementsByName||!C.getElementsByName(S).length}),d.getById?(b.filter.ID=function(e){var t=e.replace(te,ne);return function(e){return e.getAttribute(\"id\")===t}},b.find.ID=function(e,t){if(\"undefined\"!=typeof t.getElementById&&E){var n=t.getElementById(e);return n?[n]:[]}}):(b.filter.ID=function(e){var n=e.replace(te,ne);return function(e){var t=\"undefined\"!=typeof e.getAttributeNode&&e.getAttributeNode(\"id\");return t&&t.value===n}},b.find.ID=function(e,t){if(\"undefined\"!=typeof t.getElementById&&E){var n,r,i,o=t.getElementById(e);if(o){if((n=o.getAttributeNode(\"id\"))&&n.value===e)return[o];i=t.getElementsByName(e),r=0;while(o=i[r++])if((n=o.getAttributeNode(\"id\"))&&n.value===e)return[o]}return[]}}),b.find.TAG=d.getElementsByTagName?function(e,t){return\"undefined\"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):d.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if(\"*\"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},b.find.CLASS=d.getElementsByClassName&&function(e,t){if(\"undefined\"!=typeof t.getElementsByClassName&&E)return t.getElementsByClassName(e)},s=[],v=[],(d.qsa=K.test(C.querySelectorAll))&&(ce(function(e){var t;a.appendChild(e).innerHTML=\"<a id=\'\"+S+\"\'></a><select id=\'\"+S+\"-\\r\\\\\' msallowcapture=\'\'><option selected=\'\'></option></select>\",e.querySelectorAll(\"[msallowcapture^=\'\']\").length&&v.push(\"[*^$]=\"+M+\"*(?:\'\'|\\\"\\\")\"),e.querySelectorAll(\"[selected]\").length||v.push(\"\\\\[\"+M+\"*(?:value|\"+R+\")\"),e.querySelectorAll(\"[id~=\"+S+\"-]\").length||v.push(\"~=\"),(t=C.createElement(\"input\")).setAttribute(\"name\",\"\"),e.appendChild(t),e.querySelectorAll(\"[name=\'\']\").length||v.push(\"\\\\[\"+M+\"*name\"+M+\"*=\"+M+\"*(?:\'\'|\\\"\\\")\"),e.querySelectorAll(\":checked\").length||v.push(\":checked\"),e.querySelectorAll(\"a#\"+S+\"+*\").length||v.push(\".#.+[+~]\"),e.querySelectorAll(\"\\\\\\f\"),v.push(\"[\\\\r\\\\n\\\\f]\")}),ce(function(e){e.innerHTML=\"<a href=\'\' disabled=\'disabled\'></a><select disabled=\'disabled\'><option/></select>\";var t=C.createElement(\"input\");t.setAttribute(\"type\",\"hidden\"),e.appendChild(t).setAttribute(\"name\",\"D\"),e.querySelectorAll(\"[name=d]\").length&&v.push(\"name\"+M+\"*[*^$|!~]?=\"),2!==e.querySelectorAll(\":enabled\").length&&v.push(\":enabled\",\":disabled\"),a.appendChild(e).disabled=!0,2!==e.querySelectorAll(\":disabled\").length&&v.push(\":enabled\",\":disabled\"),e.querySelectorAll(\"*,:x\"),v.push(\",.*:\")})),(d.matchesSelector=K.test(c=a.matches||a.webkitMatchesSelector||a.mozMatchesSelector||a.oMatchesSelector||a.msMatchesSelector))&&ce(function(e){d.disconnectedMatch=c.call(e,\"*\"),c.call(e,\"[s!=\'\']:x\"),s.push(\"!=\",F)}),v=v.length&&new RegExp(v.join(\"|\")),s=s.length&&new RegExp(s.join(\"|\")),t=K.test(a.compareDocumentPosition),y=t||K.test(a.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},j=t?function(e,t){if(e===t)return l=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!d.sortDetached&&t.compareDocumentPosition(e)===n?e==C||e.ownerDocument==p&&y(p,e)?-1:t==C||t.ownerDocument==p&&y(p,t)?1:u?P(u,e)-P(u,t):0:4&n?-1:1)}:function(e,t){if(e===t)return l=!0,0;var n,r=0,i=e.parentNode,o=t.parentNode,a=[e],s=[t];if(!i||!o)return e==C?-1:t==C?1:i?-1:o?1:u?P(u,e)-P(u,t):0;if(i===o)return pe(e,t);n=e;while(n=n.parentNode)a.unshift(n);n=t;while(n=n.parentNode)s.unshift(n);while(a[r]===s[r])r++;return r?pe(a[r],s[r]):a[r]==p?-1:s[r]==p?1:0}),C},se.matches=function(e,t){return se(e,null,null,t)},se.matchesSelector=function(e,t){if(T(e),d.matchesSelector&&E&&!N[t+\" \"]&&(!s||!s.test(t))&&(!v||!v.test(t)))try{var n=c.call(e,t);if(n||d.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){N(t,!0)}return 0<se(t,C,null,[e]).length},se.contains=function(e,t){return(e.ownerDocument||e)!=C&&T(e),y(e,t)},se.attr=function(e,t){(e.ownerDocument||e)!=C&&T(e);var n=b.attrHandle[t.toLowerCase()],r=n&&D.call(b.attrHandle,t.toLowerCase())?n(e,t,!E):void 0;return void 0!==r?r:d.attributes||!E?e.getAttribute(t):(r=e.getAttributeNode(t))&&r.specified?r.value:null},se.escape=function(e){return(e+\"\").replace(re,ie)},se.error=function(e){throw new Error(\"Syntax error, unrecognized expression: \"+e)},se.uniqueSort=function(e){var t,n=[],r=0,i=0;if(l=!d.detectDuplicates,u=!d.sortStable&&e.slice(0),e.sort(j),l){while(t=e[i++])t===e[i]&&(r=n.push(i));while(r--)e.splice(n[r],1)}return u=null,e},o=se.getText=function(e){var t,n=\"\",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if(\"string\"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=o(e)}else if(3===i||4===i)return e.nodeValue}else while(t=e[r++])n+=o(t);return n},(b=se.selectors={cacheLength:50,createPseudo:le,match:G,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,ne),e[3]=(e[3]||e[4]||e[5]||\"\").replace(te,ne),\"~=\"===e[2]&&(e[3]=\" \"+e[3]+\" \"),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),\"nth\"===e[1].slice(0,3)?(e[3]||se.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(\"even\"===e[3]||\"odd\"===e[3])),e[5]=+(e[7]+e[8]||\"odd\"===e[3])):e[3]&&se.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return G.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||\"\":n&&X.test(n)&&(t=h(n,!0))&&(t=n.indexOf(\")\",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,ne).toLowerCase();return\"*\"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=m[e+\" \"];return t||(t=new RegExp(\"(^|\"+M+\")\"+e+\"(\"+M+\"|$)\"))&&m(e,function(e){return t.test(\"string\"==typeof e.className&&e.className||\"undefined\"!=typeof e.getAttribute&&e.getAttribute(\"class\")||\"\")})},ATTR:function(n,r,i){return function(e){var t=se.attr(e,n);return null==t?\"!=\"===r:!r||(t+=\"\",\"=\"===r?t===i:\"!=\"===r?t!==i:\"^=\"===r?i&&0===t.indexOf(i):\"*=\"===r?i&&-1<t.indexOf(i):\"$=\"===r?i&&t.slice(-i.length)===i:\"~=\"===r?-1<(\" \"+t.replace(B,\" \")+\" \").indexOf(i):\"|=\"===r&&(t===i||t.slice(0,i.length+1)===i+\"-\"))}},CHILD:function(h,e,t,g,v){var y=\"nth\"!==h.slice(0,3),m=\"last\"!==h.slice(-4),x=\"of-type\"===e;return 1===g&&0===v?function(e){return!!e.parentNode}:function(e,t,n){var r,i,o,a,s,u,l=y!==m?\"nextSibling\":\"previousSibling\",c=e.parentNode,f=x&&e.nodeName.toLowerCase(),p=!n&&!x,d=!1;if(c){if(y){while(l){a=e;while(a=a[l])if(x?a.nodeName.toLowerCase()===f:1===a.nodeType)return!1;u=l=\"only\"===h&&!u&&\"nextSibling\"}return!0}if(u=[m?c.firstChild:c.lastChild],m&&p){d=(s=(r=(i=(o=(a=c)[S]||(a[S]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]||[])[0]===k&&r[1])&&r[2],a=s&&c.childNodes[s];while(a=++s&&a&&a[l]||(d=s=0)||u.pop())if(1===a.nodeType&&++d&&a===e){i[h]=[k,s,d];break}}else if(p&&(d=s=(r=(i=(o=(a=e)[S]||(a[S]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]||[])[0]===k&&r[1]),!1===d)while(a=++s&&a&&a[l]||(d=s=0)||u.pop())if((x?a.nodeName.toLowerCase()===f:1===a.nodeType)&&++d&&(p&&((i=(o=a[S]||(a[S]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]=[k,d]),a===e))break;return(d-=v)===g||d%g==0&&0<=d/g}}},PSEUDO:function(e,o){var t,a=b.pseudos[e]||b.setFilters[e.toLowerCase()]||se.error(\"unsupported pseudo: \"+e);return a[S]?a(o):1<a.length?(t=[e,e,\"\",o],b.setFilters.hasOwnProperty(e.toLowerCase())?le(function(e,t){var n,r=a(e,o),i=r.length;while(i--)e[n=P(e,r[i])]=!(t[n]=r[i])}):function(e){return a(e,0,t)}):a}},pseudos:{not:le(function(e){var r=[],i=[],s=f(e.replace($,\"$1\"));return s[S]?le(function(e,t,n,r){var i,o=s(e,null,r,[]),a=e.length;while(a--)(i=o[a])&&(e[a]=!(t[a]=i))}):function(e,t,n){return r[0]=e,s(r,null,n,i),r[0]=null,!i.pop()}}),has:le(function(t){return function(e){return 0<se(t,e).length}}),contains:le(function(t){return t=t.replace(te,ne),function(e){return-1<(e.textContent||o(e)).indexOf(t)}}),lang:le(function(n){return V.test(n||\"\")||se.error(\"unsupported lang: \"+n),n=n.replace(te,ne).toLowerCase(),function(e){var t;do{if(t=E?e.lang:e.getAttribute(\"xml:lang\")||e.getAttribute(\"lang\"))return(t=t.toLowerCase())===n||0===t.indexOf(n+\"-\")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=n.location&&n.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===a},focus:function(e){return e===C.activeElement&&(!C.hasFocus||C.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:ge(!1),disabled:ge(!0),checked:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&!!e.checked||\"option\"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return J.test(e.nodeName)},input:function(e){return Q.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&\"button\"===e.type||\"button\"===t},text:function(e){var t;return\"input\"===e.nodeName.toLowerCase()&&\"text\"===e.type&&(null==(t=e.getAttribute(\"type\"))||\"text\"===t.toLowerCase())},first:ve(function(){return[0]}),last:ve(function(e,t){return[t-1]}),eq:ve(function(e,t,n){return[n<0?n+t:n]}),even:ve(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:ve(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:ve(function(e,t,n){for(var r=n<0?n+t:t<n?t:n;0<=--r;)e.push(r);return e}),gt:ve(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=de(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=he(e);function me(){}function xe(e){for(var t=0,n=e.length,r=\"\";t<n;t++)r+=e[t].value;return r}function be(s,e,t){var u=e.dir,l=e.next,c=l||u,f=t&&\"parentNode\"===c,p=r++;return e.first?function(e,t,n){while(e=e[u])if(1===e.nodeType||f)return s(e,t,n);return!1}:function(e,t,n){var r,i,o,a=[k,p];if(n){while(e=e[u])if((1===e.nodeType||f)&&s(e,t,n))return!0}else while(e=e[u])if(1===e.nodeType||f)if(i=(o=e[S]||(e[S]={}))[e.uniqueID]||(o[e.uniqueID]={}),l&&l===e.nodeName.toLowerCase())e=e[u]||e;else{if((r=i[c])&&r[0]===k&&r[1]===p)return a[2]=r[2];if((i[c]=a)[2]=s(e,t,n))return!0}return!1}}function we(i){return 1<i.length?function(e,t,n){var r=i.length;while(r--)if(!i[r](e,t,n))return!1;return!0}:i[0]}function Te(e,t,n,r,i){for(var o,a=[],s=0,u=e.length,l=null!=t;s<u;s++)(o=e[s])&&(n&&!n(o,r,i)||(a.push(o),l&&t.push(s)));return a}function Ce(d,h,g,v,y,e){return v&&!v[S]&&(v=Ce(v)),y&&!y[S]&&(y=Ce(y,e)),le(function(e,t,n,r){var i,o,a,s=[],u=[],l=t.length,c=e||function(e,t,n){for(var r=0,i=t.length;r<i;r++)se(e,t[r],n);return n}(h||\"*\",n.nodeType?[n]:n,[]),f=!d||!e&&h?c:Te(c,s,d,n,r),p=g?y||(e?d:l||v)?[]:t:f;if(g&&g(f,p,n,r),v){i=Te(p,u),v(i,[],n,r),o=i.length;while(o--)(a=i[o])&&(p[u[o]]=!(f[u[o]]=a))}if(e){if(y||d){if(y){i=[],o=p.length;while(o--)(a=p[o])&&i.push(f[o]=a);y(null,p=[],i,r)}o=p.length;while(o--)(a=p[o])&&-1<(i=y?P(e,a):s[o])&&(e[i]=!(t[i]=a))}}else p=Te(p===t?p.splice(l,p.length):p),y?y(null,t,p,r):H.apply(t,p)})}function Ee(e){for(var i,t,n,r=e.length,o=b.relative[e[0].type],a=o||b.relative[\" \"],s=o?1:0,u=be(function(e){return e===i},a,!0),l=be(function(e){return-1<P(i,e)},a,!0),c=[function(e,t,n){var r=!o&&(n||t!==w)||((i=t).nodeType?u(e,t,n):l(e,t,n));return i=null,r}];s<r;s++)if(t=b.relative[e[s].type])c=[be(we(c),t)];else{if((t=b.filter[e[s].type].apply(null,e[s].matches))[S]){for(n=++s;n<r;n++)if(b.relative[e[n].type])break;return Ce(1<s&&we(c),1<s&&xe(e.slice(0,s-1).concat({value:\" \"===e[s-2].type?\"*\":\"\"})).replace($,\"$1\"),t,s<n&&Ee(e.slice(s,n)),n<r&&Ee(e=e.slice(n)),n<r&&xe(e))}c.push(t)}return we(c)}return me.prototype=b.filters=b.pseudos,b.setFilters=new me,h=se.tokenize=function(e,t){var n,r,i,o,a,s,u,l=x[e+\" \"];if(l)return t?0:l.slice(0);a=e,s=[],u=b.preFilter;while(a){for(o in n&&!(r=_.exec(a))||(r&&(a=a.slice(r[0].length)||a),s.push(i=[])),n=!1,(r=z.exec(a))&&(n=r.shift(),i.push({value:n,type:r[0].replace($,\" \")}),a=a.slice(n.length)),b.filter)!(r=G[o].exec(a))||u[o]&&!(r=u[o](r))||(n=r.shift(),i.push({value:n,type:o,matches:r}),a=a.slice(n.length));if(!n)break}return t?a.length:a?se.error(e):x(e,s).slice(0)},f=se.compile=function(e,t){var n,v,y,m,x,r,i=[],o=[],a=A[e+\" \"];if(!a){t||(t=h(e)),n=t.length;while(n--)(a=Ee(t[n]))[S]?i.push(a):o.push(a);(a=A(e,(v=o,m=0<(y=i).length,x=0<v.length,r=function(e,t,n,r,i){var o,a,s,u=0,l=\"0\",c=e&&[],f=[],p=w,d=e||x&&b.find.TAG(\"*\",i),h=k+=null==p?1:Math.random()||.1,g=d.length;for(i&&(w=t==C||t||i);l!==g&&null!=(o=d[l]);l++){if(x&&o){a=0,t||o.ownerDocument==C||(T(o),n=!E);while(s=v[a++])if(s(o,t||C,n)){r.push(o);break}i&&(k=h)}m&&((o=!s&&o)&&u--,e&&c.push(o))}if(u+=l,m&&l!==u){a=0;while(s=y[a++])s(c,f,t,n);if(e){if(0<u)while(l--)c[l]||f[l]||(f[l]=q.call(r));f=Te(f)}H.apply(r,f),i&&!e&&0<f.length&&1<u+y.length&&se.uniqueSort(r)}return i&&(k=h,w=p),c},m?le(r):r))).selector=e}return a},g=se.select=function(e,t,n,r){var i,o,a,s,u,l=\"function\"==typeof e&&e,c=!r&&h(e=l.selector||e);if(n=n||[],1===c.length){if(2<(o=c[0]=c[0].slice(0)).length&&\"ID\"===(a=o[0]).type&&9===t.nodeType&&E&&b.relative[o[1].type]){if(!(t=(b.find.ID(a.matches[0].replace(te,ne),t)||[])[0]))return n;l&&(t=t.parentNode),e=e.slice(o.shift().value.length)}i=G.needsContext.test(e)?0:o.length;while(i--){if(a=o[i],b.relative[s=a.type])break;if((u=b.find[s])&&(r=u(a.matches[0].replace(te,ne),ee.test(o[0].type)&&ye(t.parentNode)||t))){if(o.splice(i,1),!(e=r.length&&xe(o)))return H.apply(n,r),n;break}}}return(l||f(e,c))(r,t,!E,n,!t||ee.test(e)&&ye(t.parentNode)||t),n},d.sortStable=S.split(\"\").sort(j).join(\"\")===S,d.detectDuplicates=!!l,T(),d.sortDetached=ce(function(e){return 1&e.compareDocumentPosition(C.createElement(\"fieldset\"))}),ce(function(e){return e.innerHTML=\"<a href=\'#\'></a>\",\"#\"===e.firstChild.getAttribute(\"href\")})||fe(\"type|href|height|width\",function(e,t,n){if(!n)return e.getAttribute(t,\"type\"===t.toLowerCase()?1:2)}),d.attributes&&ce(function(e){return e.innerHTML=\"<input/>\",e.firstChild.setAttribute(\"value\",\"\"),\"\"===e.firstChild.getAttribute(\"value\")})||fe(\"value\",function(e,t,n){if(!n&&\"input\"===e.nodeName.toLowerCase())return e.defaultValue}),ce(function(e){return null==e.getAttribute(\"disabled\")})||fe(R,function(e,t,n){var r;if(!n)return!0===e[t]?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null}),se}(C);S.find=d,S.expr=d.selectors,S.expr[\":\"]=S.expr.pseudos,S.uniqueSort=S.unique=d.uniqueSort,S.text=d.getText,S.isXMLDoc=d.isXML,S.contains=d.contains,S.escapeSelector=d.escape;var h=function(e,t,n){var r=[],i=void 0!==n;while((e=e[t])&&9!==e.nodeType)if(1===e.nodeType){if(i&&S(e).is(n))break;r.push(e)}return r},T=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},k=S.expr.match.needsContext;function A(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var N=/^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i;function j(e,n,r){return m(n)?S.grep(e,function(e,t){return!!n.call(e,t,e)!==r}):n.nodeType?S.grep(e,function(e){return e===n!==r}):\"string\"!=typeof n?S.grep(e,function(e){return-1<i.call(n,e)!==r}):S.filter(n,e,r)}S.filter=function(e,t,n){var r=t[0];return n&&(e=\":not(\"+e+\")\"),1===t.length&&1===r.nodeType?S.find.matchesSelector(r,e)?[r]:[]:S.find.matches(e,S.grep(t,function(e){return 1===e.nodeType}))},S.fn.extend({find:function(e){var t,n,r=this.length,i=this;if(\"string\"!=typeof e)return this.pushStack(S(e).filter(function(){for(t=0;t<r;t++)if(S.contains(i[t],this))return!0}));for(n=this.pushStack([]),t=0;t<r;t++)S.find(e,i[t],n);return 1<r?S.uniqueSort(n):n},filter:function(e){return this.pushStack(j(this,e||[],!1))},not:function(e){return this.pushStack(j(this,e||[],!0))},is:function(e){return!!j(this,\"string\"==typeof e&&k.test(e)?S(e):e||[],!1).length}});var D,q=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/;(S.fn.init=function(e,t,n){var r,i;if(!e)return this;if(n=n||D,\"string\"==typeof e){if(!(r=\"<\"===e[0]&&\">\"===e[e.length-1]&&3<=e.length?[null,e,null]:q.exec(e))||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof S?t[0]:t,S.merge(this,S.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:E,!0)),N.test(r[1])&&S.isPlainObject(t))for(r in t)m(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return(i=E.getElementById(r[2]))&&(this[0]=i,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):m(e)?void 0!==n.ready?n.ready(e):e(S):S.makeArray(e,this)}).prototype=S.fn,D=S(E);var L=/^(?:parents|prev(?:Until|All))/,H={children:!0,contents:!0,next:!0,prev:!0};function O(e,t){while((e=e[t])&&1!==e.nodeType);return e}S.fn.extend({has:function(e){var t=S(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(S.contains(this,t[e]))return!0})},closest:function(e,t){var n,r=0,i=this.length,o=[],a=\"string\"!=typeof e&&S(e);if(!k.test(e))for(;r<i;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?-1<a.index(n):1===n.nodeType&&S.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(1<o.length?S.uniqueSort(o):o)},index:function(e){return e?\"string\"==typeof e?i.call(S(e),this[0]):i.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(S.uniqueSort(S.merge(this.get(),S(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),S.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return h(e,\"parentNode\")},parentsUntil:function(e,t,n){return h(e,\"parentNode\",n)},next:function(e){return O(e,\"nextSibling\")},prev:function(e){return O(e,\"previousSibling\")},nextAll:function(e){return h(e,\"nextSibling\")},prevAll:function(e){return h(e,\"previousSibling\")},nextUntil:function(e,t,n){return h(e,\"nextSibling\",n)},prevUntil:function(e,t,n){return h(e,\"previousSibling\",n)},siblings:function(e){return T((e.parentNode||{}).firstChild,e)},children:function(e){return T(e.firstChild)},contents:function(e){return null!=e.contentDocument&&r(e.contentDocument)?e.contentDocument:(A(e,\"template\")&&(e=e.content||e),S.merge([],e.childNodes))}},function(r,i){S.fn[r]=function(e,t){var n=S.map(this,i,e);return\"Until\"!==r.slice(-5)&&(t=e),t&&\"string\"==typeof t&&(n=S.filter(t,n)),1<this.length&&(H[r]||S.uniqueSort(n),L.test(r)&&n.reverse()),this.pushStack(n)}});var P=/[^\\x20\\t\\r\\n\\f]+/g;function R(e){return e}function M(e){throw e}function I(e,t,n,r){var i;try{e&&m(i=e.promise)?i.call(e).done(t).fail(n):e&&m(i=e.then)?i.call(e,t,n):t.apply(void 0,[e].slice(r))}catch(e){n.apply(void 0,[e])}}S.Callbacks=function(r){var e,n;r=\"string\"==typeof r?(e=r,n={},S.each(e.match(P)||[],function(e,t){n[t]=!0}),n):S.extend({},r);var i,t,o,a,s=[],u=[],l=-1,c=function(){for(a=a||r.once,o=i=!0;u.length;l=-1){t=u.shift();while(++l<s.length)!1===s[l].apply(t[0],t[1])&&r.stopOnFalse&&(l=s.length,t=!1)}r.memory||(t=!1),i=!1,a&&(s=t?[]:\"\")},f={add:function(){return s&&(t&&!i&&(l=s.length-1,u.push(t)),function n(e){S.each(e,function(e,t){m(t)?r.unique&&f.has(t)||s.push(t):t&&t.length&&\"string\"!==w(t)&&n(t)})}(arguments),t&&!i&&c()),this},remove:function(){return S.each(arguments,function(e,t){var n;while(-1<(n=S.inArray(t,s,n)))s.splice(n,1),n<=l&&l--}),this},has:function(e){return e?-1<S.inArray(e,s):0<s.length},empty:function(){return s&&(s=[]),this},disable:function(){return a=u=[],s=t=\"\",this},disabled:function(){return!s},lock:function(){return a=u=[],t||i||(s=t=\"\"),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],u.push(t),i||c()),this},fire:function(){return f.fireWith(this,arguments),this},fired:function(){return!!o}};return f},S.extend({Deferred:function(e){var o=[[\"notify\",\"progress\",S.Callbacks(\"memory\"),S.Callbacks(\"memory\"),2],[\"resolve\",\"done\",S.Callbacks(\"once memory\"),S.Callbacks(\"once memory\"),0,\"resolved\"],[\"reject\",\"fail\",S.Callbacks(\"once memory\"),S.Callbacks(\"once memory\"),1,\"rejected\"]],i=\"pending\",a={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},\"catch\":function(e){return a.then(null,e)},pipe:function(){var i=arguments;return S.Deferred(function(r){S.each(o,function(e,t){var n=m(i[t[4]])&&i[t[4]];s[t[1]](function(){var e=n&&n.apply(this,arguments);e&&m(e.promise)?e.promise().progress(r.notify).done(r.resolve).fail(r.reject):r[t[0]+\"With\"](this,n?[e]:arguments)})}),i=null}).promise()},then:function(t,n,r){var u=0;function l(i,o,a,s){return function(){var n=this,r=arguments,e=function(){var e,t;if(!(i<u)){if((e=a.apply(n,r))===o.promise())throw new TypeError(\"Thenable self-resolution\");t=e&&(\"object\"==typeof e||\"function\"==typeof e)&&e.then,m(t)?s?t.call(e,l(u,o,R,s),l(u,o,M,s)):(u++,t.call(e,l(u,o,R,s),l(u,o,M,s),l(u,o,R,o.notifyWith))):(a!==R&&(n=void 0,r=[e]),(s||o.resolveWith)(n,r))}},t=s?e:function(){try{e()}catch(e){S.Deferred.exceptionHook&&S.Deferred.exceptionHook(e,t.stackTrace),u<=i+1&&(a!==M&&(n=void 0,r=[e]),o.rejectWith(n,r))}};i?t():(S.Deferred.getStackHook&&(t.stackTrace=S.Deferred.getStackHook()),C.setTimeout(t))}}return S.Deferred(function(e){o[0][3].add(l(0,e,m(r)?r:R,e.notifyWith)),o[1][3].add(l(0,e,m(t)?t:R)),o[2][3].add(l(0,e,m(n)?n:M))}).promise()},promise:function(e){return null!=e?S.extend(e,a):a}},s={};return S.each(o,function(e,t){var n=t[2],r=t[5];a[t[1]]=n.add,r&&n.add(function(){i=r},o[3-e][2].disable,o[3-e][3].disable,o[0][2].lock,o[0][3].lock),n.add(t[3].fire),s[t[0]]=function(){return s[t[0]+\"With\"](this===s?void 0:this,arguments),this},s[t[0]+\"With\"]=n.fireWith}),a.promise(s),e&&e.call(s,s),s},when:function(e){var n=arguments.length,t=n,r=Array(t),i=s.call(arguments),o=S.Deferred(),a=function(t){return function(e){r[t]=this,i[t]=1<arguments.length?s.call(arguments):e,--n||o.resolveWith(r,i)}};if(n<=1&&(I(e,o.done(a(t)).resolve,o.reject,!n),\"pending\"===o.state()||m(i[t]&&i[t].then)))return o.then();while(t--)I(i[t],a(t),o.reject);return o.promise()}});var W=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;S.Deferred.exceptionHook=function(e,t){C.console&&C.console.warn&&e&&W.test(e.name)&&C.console.warn(\"jQuery.Deferred exception: \"+e.message,e.stack,t)},S.readyException=function(e){C.setTimeout(function(){throw e})};var F=S.Deferred();function B(){E.removeEventListener(\"DOMContentLoaded\",B),C.removeEventListener(\"load\",B),S.ready()}S.fn.ready=function(e){return F.then(e)[\"catch\"](function(e){S.readyException(e)}),this},S.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--S.readyWait:S.isReady)||(S.isReady=!0)!==e&&0<--S.readyWait||F.resolveWith(E,[S])}}),S.ready.then=F.then,\"complete\"===E.readyState||\"loading\"!==E.readyState&&!E.documentElement.doScroll?C.setTimeout(S.ready):(E.addEventListener(\"DOMContentLoaded\",B),C.addEventListener(\"load\",B));var $=function(e,t,n,r,i,o,a){var s=0,u=e.length,l=null==n;if(\"object\"===w(n))for(s in i=!0,n)$(e,t,s,n[s],!0,o,a);else if(void 0!==r&&(i=!0,m(r)||(a=!0),l&&(a?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(S(e),n)})),t))for(;s<u;s++)t(e[s],n,a?r:r.call(e[s],s,t(e[s],n)));return i?e:l?t.call(e):u?t(e[0],n):o},_=/^-ms-/,z=/-([a-z])/g;function U(e,t){return t.toUpperCase()}function X(e){return e.replace(_,\"ms-\").replace(z,U)}var V=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function G(){this.expando=S.expando+G.uid++}G.uid=1,G.prototype={cache:function(e){var t=e[this.expando];return t||(t={},V(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var r,i=this.cache(e);if(\"string\"==typeof t)i[X(t)]=n;else for(r in t)i[X(r)]=t[r];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][X(t)]},access:function(e,t,n){return void 0===t||t&&\"string\"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r=e[this.expando];if(void 0!==r){if(void 0!==t){n=(t=Array.isArray(t)?t.map(X):(t=X(t))in r?[t]:t.match(P)||[]).length;while(n--)delete r[t[n]]}(void 0===t||S.isEmptyObject(r))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!S.isEmptyObject(t)}};var Y=new G,Q=new G,J=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,K=/[A-Z]/g;function Z(e,t,n){var r,i;if(void 0===n&&1===e.nodeType)if(r=\"data-\"+t.replace(K,\"-$&\").toLowerCase(),\"string\"==typeof(n=e.getAttribute(r))){try{n=\"true\"===(i=n)||\"false\"!==i&&(\"null\"===i?null:i===+i+\"\"?+i:J.test(i)?JSON.parse(i):i)}catch(e){}Q.set(e,t,n)}else n=void 0;return n}S.extend({hasData:function(e){return Q.hasData(e)||Y.hasData(e)},data:function(e,t,n){return Q.access(e,t,n)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,n){return Y.access(e,t,n)},_removeData:function(e,t){Y.remove(e,t)}}),S.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=Q.get(o),1===o.nodeType&&!Y.get(o,\"hasDataAttrs\"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf(\"data-\")&&(r=X(r.slice(5)),Z(o,r,i[r]));Y.set(o,\"hasDataAttrs\",!0)}return i}return\"object\"==typeof n?this.each(function(){Q.set(this,n)}):$(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=Q.get(o,n))?t:void 0!==(t=Z(o,n))?t:void 0;this.each(function(){Q.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){Q.remove(this,e)})}}),S.extend({queue:function(e,t,n){var r;if(e)return t=(t||\"fx\")+\"queue\",r=Y.get(e,t),n&&(!r||Array.isArray(n)?r=Y.access(e,t,S.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||\"fx\";var n=S.queue(e,t),r=n.length,i=n.shift(),o=S._queueHooks(e,t);\"inprogress\"===i&&(i=n.shift(),r--),i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,function(){S.dequeue(e,t)},o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return Y.get(e,n)||Y.access(e,n,{empty:S.Callbacks(\"once memory\").add(function(){Y.remove(e,[t+\"queue\",n])})})}}),S.fn.extend({queue:function(t,n){var e=2;return\"string\"!=typeof t&&(n=t,t=\"fx\",e--),arguments.length<e?S.queue(this[0],t):void 0===n?this:this.each(function(){var e=S.queue(this,t,n);S._queueHooks(this,t),\"fx\"===t&&\"inprogress\"!==e[0]&&S.dequeue(this,t)})},dequeue:function(e){return this.each(function(){S.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,t){var n,r=1,i=S.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};\"string\"!=typeof e&&(t=e,e=void 0),e=e||\"fx\";while(a--)(n=Y.get(o[a],e+\"queueHooks\"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var ee=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,te=new RegExp(\"^(?:([+-])=|)(\"+ee+\")([a-z%]*)$\",\"i\"),ne=[\"Top\",\"Right\",\"Bottom\",\"Left\"],re=E.documentElement,ie=function(e){return S.contains(e.ownerDocument,e)},oe={composed:!0};re.getRootNode&&(ie=function(e){return S.contains(e.ownerDocument,e)||e.getRootNode(oe)===e.ownerDocument});var ae=function(e,t){return\"none\"===(e=t||e).style.display||\"\"===e.style.display&&ie(e)&&\"none\"===S.css(e,\"display\")};function se(e,t,n,r){var i,o,a=20,s=r?function(){return r.cur()}:function(){return S.css(e,t,\"\")},u=s(),l=n&&n[3]||(S.cssNumber[t]?\"\":\"px\"),c=e.nodeType&&(S.cssNumber[t]||\"px\"!==l&&+u)&&te.exec(S.css(e,t));if(c&&c[3]!==l){u/=2,l=l||c[3],c=+u||1;while(a--)S.style(e,t,c+l),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),c/=o;c*=2,S.style(e,t,c+l),n=n||[]}return n&&(c=+c||+u||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=i)),i}var ue={};function le(e,t){for(var n,r,i,o,a,s,u,l=[],c=0,f=e.length;c<f;c++)(r=e[c]).style&&(n=r.style.display,t?(\"none\"===n&&(l[c]=Y.get(r,\"display\")||null,l[c]||(r.style.display=\"\")),\"\"===r.style.display&&ae(r)&&(l[c]=(u=a=o=void 0,a=(i=r).ownerDocument,s=i.nodeName,(u=ue[s])||(o=a.body.appendChild(a.createElement(s)),u=S.css(o,\"display\"),o.parentNode.removeChild(o),\"none\"===u&&(u=\"block\"),ue[s]=u)))):\"none\"!==n&&(l[c]=\"none\",Y.set(r,\"display\",n)));for(c=0;c<f;c++)null!=l[c]&&(e[c].style.display=l[c]);return e}S.fn.extend({show:function(){return le(this,!0)},hide:function(){return le(this)},toggle:function(e){return\"boolean\"==typeof e?e?this.show():this.hide():this.each(function(){ae(this)?S(this).show():S(this).hide()})}});var ce,fe,pe=/^(?:checkbox|radio)$/i,de=/<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i,he=/^$|^module$|\\/(?:java|ecma)script/i;ce=E.createDocumentFragment().appendChild(E.createElement(\"div\")),(fe=E.createElement(\"input\")).setAttribute(\"type\",\"radio\"),fe.setAttribute(\"checked\",\"checked\"),fe.setAttribute(\"name\",\"t\"),ce.appendChild(fe),y.checkClone=ce.cloneNode(!0).cloneNode(!0).lastChild.checked,ce.innerHTML=\"<textarea>x</textarea>\",y.noCloneChecked=!!ce.cloneNode(!0).lastChild.defaultValue,ce.innerHTML=\"<option></option>\",y.option=!!ce.lastChild;var ge={thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};function ve(e,t){var n;return n=\"undefined\"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||\"*\"):\"undefined\"!=typeof e.querySelectorAll?e.querySelectorAll(t||\"*\"):[],void 0===t||t&&A(e,t)?S.merge([e],n):n}function ye(e,t){for(var n=0,r=e.length;n<r;n++)Y.set(e[n],\"globalEval\",!t||Y.get(t[n],\"globalEval\"))}ge.tbody=ge.tfoot=ge.colgroup=ge.caption=ge.thead,ge.th=ge.td,y.option||(ge.optgroup=ge.option=[1,\"<select multiple=\'multiple\'>\",\"</select>\"]);var me=/<|&#?\\w+;/;function xe(e,t,n,r,i){for(var o,a,s,u,l,c,f=t.createDocumentFragment(),p=[],d=0,h=e.length;d<h;d++)if((o=e[d])||0===o)if(\"object\"===w(o))S.merge(p,o.nodeType?[o]:o);else if(me.test(o)){a=a||f.appendChild(t.createElement(\"div\")),s=(de.exec(o)||[\"\",\"\"])[1].toLowerCase(),u=ge[s]||ge._default,a.innerHTML=u[1]+S.htmlPrefilter(o)+u[2],c=u[0];while(c--)a=a.lastChild;S.merge(p,a.childNodes),(a=f.firstChild).textContent=\"\"}else p.push(t.createTextNode(o));f.textContent=\"\",d=0;while(o=p[d++])if(r&&-1<S.inArray(o,r))i&&i.push(o);else if(l=ie(o),a=ve(f.appendChild(o),\"script\"),l&&ye(a),n){c=0;while(o=a[c++])he.test(o.type||\"\")&&n.push(o)}return f}var be=/^([^.]*)(?:\\.(.+)|)/;function we(){return!0}function Te(){return!1}function Ce(e,t){return e===function(){try{return E.activeElement}catch(e){}}()==(\"focus\"===t)}function Ee(e,t,n,r,i,o){var a,s;if(\"object\"==typeof t){for(s in\"string\"!=typeof n&&(r=r||n,n=void 0),t)Ee(e,s,n,r,t[s],o);return e}if(null==r&&null==i?(i=n,r=n=void 0):null==i&&(\"string\"==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),!1===i)i=Te;else if(!i)return e;return 1===o&&(a=i,(i=function(e){return S().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=S.guid++)),e.each(function(){S.event.add(this,t,i,r,n)})}function Se(e,i,o){o?(Y.set(e,i,!1),S.event.add(e,i,{namespace:!1,handler:function(e){var t,n,r=Y.get(this,i);if(1&e.isTrigger&&this[i]){if(r.length)(S.event.special[i]||{}).delegateType&&e.stopPropagation();else if(r=s.call(arguments),Y.set(this,i,r),t=o(this,i),this[i](),r!==(n=Y.get(this,i))||t?Y.set(this,i,!1):n={},r!==n)return e.stopImmediatePropagation(),e.preventDefault(),n&&n.value}else r.length&&(Y.set(this,i,{value:S.event.trigger(S.extend(r[0],S.Event.prototype),r.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Y.get(e,i)&&S.event.add(e,i,we)}S.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.get(t);if(V(t)){n.handler&&(n=(o=n).handler,i=o.selector),i&&S.find.matchesSelector(re,i),n.guid||(n.guid=S.guid++),(u=v.events)||(u=v.events=Object.create(null)),(a=v.handle)||(a=v.handle=function(e){return\"undefined\"!=typeof S&&S.event.triggered!==e.type?S.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||\"\").match(P)||[\"\"]).length;while(l--)d=g=(s=be.exec(e[l])||[])[1],h=(s[2]||\"\").split(\".\").sort(),d&&(f=S.event.special[d]||{},d=(i?f.delegateType:f.bindType)||d,f=S.event.special[d]||{},c=S.extend({type:d,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&S.expr.match.needsContext.test(i),namespace:h.join(\".\")},o),(p=u[d])||((p=u[d]=[]).delegateCount=0,f.setup&&!1!==f.setup.call(t,r,h,a)||t.addEventListener&&t.addEventListener(d,a)),f.add&&(f.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),S.event.global[d]=!0)}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.hasData(e)&&Y.get(e);if(v&&(u=v.events)){l=(t=(t||\"\").match(P)||[\"\"]).length;while(l--)if(d=g=(s=be.exec(t[l])||[])[1],h=(s[2]||\"\").split(\".\").sort(),d){f=S.event.special[d]||{},p=u[d=(r?f.delegateType:f.bindType)||d]||[],s=s[2]&&new RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),a=o=p.length;while(o--)c=p[o],!i&&g!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||r&&r!==c.selector&&(\"**\"!==r||!c.selector)||(p.splice(o,1),c.selector&&p.delegateCount--,f.remove&&f.remove.call(e,c));a&&!p.length&&(f.teardown&&!1!==f.teardown.call(e,h,v.handle)||S.removeEvent(e,d,v.handle),delete u[d])}else for(d in u)S.event.remove(e,d+t[l],n,r,!0);S.isEmptyObject(u)&&Y.remove(e,\"handle events\")}},dispatch:function(e){var t,n,r,i,o,a,s=new Array(arguments.length),u=S.event.fix(e),l=(Y.get(this,\"events\")||Object.create(null))[u.type]||[],c=S.event.special[u.type]||{};for(s[0]=u,t=1;t<arguments.length;t++)s[t]=arguments[t];if(u.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,u)){a=S.event.handlers.call(this,u,l),t=0;while((i=a[t++])&&!u.isPropagationStopped()){u.currentTarget=i.elem,n=0;while((o=i.handlers[n++])&&!u.isImmediatePropagationStopped())u.rnamespace&&!1!==o.namespace&&!u.rnamespace.test(o.namespace)||(u.handleObj=o,u.data=o.data,void 0!==(r=((S.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,s))&&!1===(u.result=r)&&(u.preventDefault(),u.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,u),u.result}},handlers:function(e,t){var n,r,i,o,a,s=[],u=t.delegateCount,l=e.target;if(u&&l.nodeType&&!(\"click\"===e.type&&1<=e.button))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&(\"click\"!==e.type||!0!==l.disabled)){for(o=[],a={},n=0;n<u;n++)void 0===a[i=(r=t[n]).selector+\" \"]&&(a[i]=r.needsContext?-1<S(i,this).index(l):S.find(i,this,null,[l]).length),a[i]&&o.push(r);o.length&&s.push({elem:l,handlers:o})}return l=this,u<t.length&&s.push({elem:l,handlers:t.slice(u)}),s},addProp:function(t,e){Object.defineProperty(S.Event.prototype,t,{enumerable:!0,configurable:!0,get:m(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[S.expando]?e:new S.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Se(t,\"click\",we),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Se(t,\"click\"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&A(t,\"input\")&&Y.get(t,\"click\")||A(t,\"a\")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},S.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},S.Event=function(e,t){if(!(this instanceof S.Event))return new S.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?we:Te,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&S.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[S.expando]=!0},S.Event.prototype={constructor:S.Event,isDefaultPrevented:Te,isPropagationStopped:Te,isImmediatePropagationStopped:Te,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=we,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=we,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=we,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},S.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,\"char\":!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},S.event.addProp),S.each({focus:\"focusin\",blur:\"focusout\"},function(e,t){S.event.special[e]={setup:function(){return Se(this,e,Ce),!1},trigger:function(){return Se(this,e),!0},_default:function(){return!0},delegateType:t}}),S.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(e,i){S.event.special[e]={delegateType:i,bindType:i,handle:function(e){var t,n=e.relatedTarget,r=e.handleObj;return n&&(n===this||S.contains(this,n))||(e.type=r.origType,t=r.handler.apply(this,arguments),e.type=i),t}}}),S.fn.extend({on:function(e,t,n,r){return Ee(this,e,t,n,r)},one:function(e,t,n,r){return Ee(this,e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,S(e.delegateTarget).off(r.namespace?r.origType+\".\"+r.namespace:r.origType,r.selector,r.handler),this;if(\"object\"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return!1!==t&&\"function\"!=typeof t||(n=t,t=void 0),!1===n&&(n=Te),this.each(function(){S.event.remove(this,e,n,t)})}});var ke=/<script|<style|<link/i,Ae=/checked\\s*(?:[^=]|=\\s*.checked.)/i,Ne=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;function je(e,t){return A(e,\"table\")&&A(11!==t.nodeType?t:t.firstChild,\"tr\")&&S(e).children(\"tbody\")[0]||e}function De(e){return e.type=(null!==e.getAttribute(\"type\"))+\"/\"+e.type,e}function qe(e){return\"true/\"===(e.type||\"\").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute(\"type\"),e}function Le(e,t){var n,r,i,o,a,s;if(1===t.nodeType){if(Y.hasData(e)&&(s=Y.get(e).events))for(i in Y.remove(t,\"handle events\"),s)for(n=0,r=s[i].length;n<r;n++)S.event.add(t,i,s[i][n]);Q.hasData(e)&&(o=Q.access(e),a=S.extend({},o),Q.set(t,a))}}function He(n,r,i,o){r=g(r);var e,t,a,s,u,l,c=0,f=n.length,p=f-1,d=r[0],h=m(d);if(h||1<f&&\"string\"==typeof d&&!y.checkClone&&Ae.test(d))return n.each(function(e){var t=n.eq(e);h&&(r[0]=d.call(this,e,t.html())),He(t,r,i,o)});if(f&&(t=(e=xe(r,n[0].ownerDocument,!1,n,o)).firstChild,1===e.childNodes.length&&(e=t),t||o)){for(s=(a=S.map(ve(e,\"script\"),De)).length;c<f;c++)u=e,c!==p&&(u=S.clone(u,!0,!0),s&&S.merge(a,ve(u,\"script\"))),i.call(n[c],u,c);if(s)for(l=a[a.length-1].ownerDocument,S.map(a,qe),c=0;c<s;c++)u=a[c],he.test(u.type||\"\")&&!Y.access(u,\"globalEval\")&&S.contains(l,u)&&(u.src&&\"module\"!==(u.type||\"\").toLowerCase()?S._evalUrl&&!u.noModule&&S._evalUrl(u.src,{nonce:u.nonce||u.getAttribute(\"nonce\")},l):b(u.textContent.replace(Ne,\"\"),u,l))}return n}function Oe(e,t,n){for(var r,i=t?S.filter(t,e):e,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||S.cleanData(ve(r)),r.parentNode&&(n&&ie(r)&&ye(ve(r,\"script\")),r.parentNode.removeChild(r));return e}S.extend({htmlPrefilter:function(e){return e},clone:function(e,t,n){var r,i,o,a,s,u,l,c=e.cloneNode(!0),f=ie(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||S.isXMLDoc(e)))for(a=ve(c),r=0,i=(o=ve(e)).length;r<i;r++)s=o[r],u=a[r],void 0,\"input\"===(l=u.nodeName.toLowerCase())&&pe.test(s.type)?u.checked=s.checked:\"input\"!==l&&\"textarea\"!==l||(u.defaultValue=s.defaultValue);if(t)if(n)for(o=o||ve(e),a=a||ve(c),r=0,i=o.length;r<i;r++)Le(o[r],a[r]);else Le(e,c);return 0<(a=ve(c,\"script\")).length&&ye(a,!f&&ve(e,\"script\")),c},cleanData:function(e){for(var t,n,r,i=S.event.special,o=0;void 0!==(n=e[o]);o++)if(V(n)){if(t=n[Y.expando]){if(t.events)for(r in t.events)i[r]?S.event.remove(n,r):S.removeEvent(n,r,t.handle);n[Y.expando]=void 0}n[Q.expando]&&(n[Q.expando]=void 0)}}}),S.fn.extend({detach:function(e){return Oe(this,e,!0)},remove:function(e){return Oe(this,e)},text:function(e){return $(this,function(e){return void 0===e?S.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return He(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||je(this,e).appendChild(e)})},prepend:function(){return He(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=je(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return He(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return He(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(S.cleanData(ve(e,!1)),e.textContent=\"\");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return S.clone(this,e,t)})},html:function(e){return $(this,function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if(\"string\"==typeof e&&!ke.test(e)&&!ge[(de.exec(e)||[\"\",\"\"])[1].toLowerCase()]){e=S.htmlPrefilter(e);try{for(;n<r;n++)1===(t=this[n]||{}).nodeType&&(S.cleanData(ve(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return He(this,arguments,function(e){var t=this.parentNode;S.inArray(this,n)<0&&(S.cleanData(ve(this)),t&&t.replaceChild(e,this))},n)}}),S.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,a){S.fn[e]=function(e){for(var t,n=[],r=S(e),i=r.length-1,o=0;o<=i;o++)t=o===i?this:this.clone(!0),S(r[o])[a](t),u.apply(n,t.get());return this.pushStack(n)}});var Pe=new RegExp(\"^(\"+ee+\")(?!px)[a-z%]+$\",\"i\"),Re=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=C),t.getComputedStyle(e)},Me=function(e,t,n){var r,i,o={};for(i in t)o[i]=e.style[i],e.style[i]=t[i];for(i in r=n.call(e),t)e.style[i]=o[i];return r},Ie=new RegExp(ne.join(\"|\"),\"i\");function We(e,t,n){var r,i,o,a,s=e.style;return(n=n||Re(e))&&(\"\"!==(a=n.getPropertyValue(t)||n[t])||ie(e)||(a=S.style(e,t)),!y.pixelBoxStyles()&&Pe.test(a)&&Ie.test(t)&&(r=s.width,i=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=r,s.minWidth=i,s.maxWidth=o)),void 0!==a?a+\"\":a}function Fe(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(l){u.style.cssText=\"position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0\",l.style.cssText=\"position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%\",re.appendChild(u).appendChild(l);var e=C.getComputedStyle(l);n=\"1%\"!==e.top,s=12===t(e.marginLeft),l.style.right=\"60%\",o=36===t(e.right),r=36===t(e.width),l.style.position=\"absolute\",i=12===t(l.offsetWidth/3),re.removeChild(u),l=null}}function t(e){return Math.round(parseFloat(e))}var n,r,i,o,a,s,u=E.createElement(\"div\"),l=E.createElement(\"div\");l.style&&(l.style.backgroundClip=\"content-box\",l.cloneNode(!0).style.backgroundClip=\"\",y.clearCloneStyle=\"content-box\"===l.style.backgroundClip,S.extend(y,{boxSizingReliable:function(){return e(),r},pixelBoxStyles:function(){return e(),o},pixelPosition:function(){return e(),n},reliableMarginLeft:function(){return e(),s},scrollboxSize:function(){return e(),i},reliableTrDimensions:function(){var e,t,n,r;return null==a&&(e=E.createElement(\"table\"),t=E.createElement(\"tr\"),n=E.createElement(\"div\"),e.style.cssText=\"position:absolute;left:-11111px;border-collapse:separate\",t.style.cssText=\"border:1px solid\",t.style.height=\"1px\",n.style.height=\"9px\",n.style.display=\"block\",re.appendChild(e).appendChild(t).appendChild(n),r=C.getComputedStyle(t),a=parseInt(r.height,10)+parseInt(r.borderTopWidth,10)+parseInt(r.borderBottomWidth,10)===t.offsetHeight,re.removeChild(e)),a}}))}();var Be=[\"Webkit\",\"Moz\",\"ms\"],$e=E.createElement(\"div\").style,_e={};function ze(e){var t=S.cssProps[e]||_e[e];return t||(e in $e?e:_e[e]=function(e){var t=e[0].toUpperCase()+e.slice(1),n=Be.length;while(n--)if((e=Be[n]+t)in $e)return e}(e)||e)}var Ue=/^(none|table(?!-c[ea]).+)/,Xe=/^--/,Ve={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Ge={letterSpacing:\"0\",fontWeight:\"400\"};function Ye(e,t,n){var r=te.exec(t);return r?Math.max(0,r[2]-(n||0))+(r[3]||\"px\"):t}function Qe(e,t,n,r,i,o){var a=\"width\"===t?1:0,s=0,u=0;if(n===(r?\"border\":\"content\"))return 0;for(;a<4;a+=2)\"margin\"===n&&(u+=S.css(e,n+ne[a],!0,i)),r?(\"content\"===n&&(u-=S.css(e,\"padding\"+ne[a],!0,i)),\"margin\"!==n&&(u-=S.css(e,\"border\"+ne[a]+\"Width\",!0,i))):(u+=S.css(e,\"padding\"+ne[a],!0,i),\"padding\"!==n?u+=S.css(e,\"border\"+ne[a]+\"Width\",!0,i):s+=S.css(e,\"border\"+ne[a]+\"Width\",!0,i));return!r&&0<=o&&(u+=Math.max(0,Math.ceil(e[\"offset\"+t[0].toUpperCase()+t.slice(1)]-o-u-s-.5))||0),u}function Je(e,t,n){var r=Re(e),i=(!y.boxSizingReliable()||n)&&\"border-box\"===S.css(e,\"boxSizing\",!1,r),o=i,a=We(e,t,r),s=\"offset\"+t[0].toUpperCase()+t.slice(1);if(Pe.test(a)){if(!n)return a;a=\"auto\"}return(!y.boxSizingReliable()&&i||!y.reliableTrDimensions()&&A(e,\"tr\")||\"auto\"===a||!parseFloat(a)&&\"inline\"===S.css(e,\"display\",!1,r))&&e.getClientRects().length&&(i=\"border-box\"===S.css(e,\"boxSizing\",!1,r),(o=s in e)&&(a=e[s])),(a=parseFloat(a)||0)+Qe(e,t,n||(i?\"border\":\"content\"),o,r,a)+\"px\"}function Ke(e,t,n,r,i){return new Ke.prototype.init(e,t,n,r,i)}S.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=We(e,\"opacity\");return\"\"===n?\"1\":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=X(t),u=Xe.test(t),l=e.style;if(u||(t=ze(s)),a=S.cssHooks[t]||S.cssHooks[s],void 0===n)return a&&\"get\"in a&&void 0!==(i=a.get(e,!1,r))?i:l[t];\"string\"===(o=typeof n)&&(i=te.exec(n))&&i[1]&&(n=se(e,t,i),o=\"number\"),null!=n&&n==n&&(\"number\"!==o||u||(n+=i&&i[3]||(S.cssNumber[s]?\"\":\"px\")),y.clearCloneStyle||\"\"!==n||0!==t.indexOf(\"background\")||(l[t]=\"inherit\"),a&&\"set\"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]=n))}},css:function(e,t,n,r){var i,o,a,s=X(t);return Xe.test(t)||(t=ze(s)),(a=S.cssHooks[t]||S.cssHooks[s])&&\"get\"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=We(e,t,r)),\"normal\"===i&&t in Ge&&(i=Ge[t]),\"\"===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),S.each([\"height\",\"width\"],function(e,u){S.cssHooks[u]={get:function(e,t,n){if(t)return!Ue.test(S.css(e,\"display\"))||e.getClientRects().length&&e.getBoundingClientRect().width?Je(e,u,n):Me(e,Ve,function(){return Je(e,u,n)})},set:function(e,t,n){var r,i=Re(e),o=!y.scrollboxSize()&&\"absolute\"===i.position,a=(o||n)&&\"border-box\"===S.css(e,\"boxSizing\",!1,i),s=n?Qe(e,u,n,a,i):0;return a&&o&&(s-=Math.ceil(e[\"offset\"+u[0].toUpperCase()+u.slice(1)]-parseFloat(i[u])-Qe(e,u,\"border\",!1,i)-.5)),s&&(r=te.exec(t))&&\"px\"!==(r[3]||\"px\")&&(e.style[u]=t,t=S.css(e,u)),Ye(0,t,s)}}}),S.cssHooks.marginLeft=Fe(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(We(e,\"marginLeft\"))||e.getBoundingClientRect().left-Me(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+\"px\"}),S.each({margin:\"\",padding:\"\",border:\"Width\"},function(i,o){S.cssHooks[i+o]={expand:function(e){for(var t=0,n={},r=\"string\"==typeof e?e.split(\" \"):[e];t<4;t++)n[i+ne[t]+o]=r[t]||r[t-2]||r[0];return n}},\"margin\"!==i&&(S.cssHooks[i+o].set=Ye)}),S.fn.extend({css:function(e,t){return $(this,function(e,t,n){var r,i,o={},a=0;if(Array.isArray(t)){for(r=Re(e),i=t.length;a<i;a++)o[t[a]]=S.css(e,t[a],!1,r);return o}return void 0!==n?S.style(e,t,n):S.css(e,t)},e,t,1<arguments.length)}}),((S.Tween=Ke).prototype={constructor:Ke,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||S.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(S.cssNumber[n]?\"\":\"px\")},cur:function(){var e=Ke.propHooks[this.prop];return e&&e.get?e.get(this):Ke.propHooks._default.get(this)},run:function(e){var t,n=Ke.propHooks[this.prop];return this.options.duration?this.pos=t=S.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):Ke.propHooks._default.set(this),this}}).init.prototype=Ke.prototype,(Ke.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=S.css(e.elem,e.prop,\"\"))&&\"auto\"!==t?t:0},set:function(e){S.fx.step[e.prop]?S.fx.step[e.prop](e):1!==e.elem.nodeType||!S.cssHooks[e.prop]&&null==e.elem.style[ze(e.prop)]?e.elem[e.prop]=e.now:S.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=Ke.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},S.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:\"swing\"},S.fx=Ke.prototype.init,S.fx.step={};var Ze,et,tt,nt,rt=/^(?:toggle|show|hide)$/,it=/queueHooks$/;function ot(){et&&(!1===E.hidden&&C.requestAnimationFrame?C.requestAnimationFrame(ot):C.setTimeout(ot,S.fx.interval),S.fx.tick())}function at(){return C.setTimeout(function(){Ze=void 0}),Ze=Date.now()}function st(e,t){var n,r=0,i={height:e};for(t=t?1:0;r<4;r+=2-t)i[\"margin\"+(n=ne[r])]=i[\"padding\"+n]=e;return t&&(i.opacity=i.width=e),i}function ut(e,t,n){for(var r,i=(lt.tweeners[t]||[]).concat(lt.tweeners[\"*\"]),o=0,a=i.length;o<a;o++)if(r=i[o].call(n,t,e))return r}function lt(o,e,t){var n,a,r=0,i=lt.prefilters.length,s=S.Deferred().always(function(){delete u.elem}),u=function(){if(a)return!1;for(var e=Ze||at(),t=Math.max(0,l.startTime+l.duration-e),n=1-(t/l.duration||0),r=0,i=l.tweens.length;r<i;r++)l.tweens[r].run(n);return s.notifyWith(o,[l,n,t]),n<1&&i?t:(i||s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l]),!1)},l=s.promise({elem:o,props:S.extend({},e),opts:S.extend(!0,{specialEasing:{},easing:S.easing._default},t),originalProperties:e,originalOptions:t,startTime:Ze||at(),duration:t.duration,tweens:[],createTween:function(e,t){var n=S.Tween(o,l.opts,e,t,l.opts.specialEasing[e]||l.opts.easing);return l.tweens.push(n),n},stop:function(e){var t=0,n=e?l.tweens.length:0;if(a)return this;for(a=!0;t<n;t++)l.tweens[t].run(1);return e?(s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l,e])):s.rejectWith(o,[l,e]),this}}),c=l.props;for(!function(e,t){var n,r,i,o,a;for(n in e)if(i=t[r=X(n)],o=e[n],Array.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),(a=S.cssHooks[r])&&\"expand\"in a)for(n in o=a.expand(o),delete e[r],o)n in e||(e[n]=o[n],t[n]=i);else t[r]=i}(c,l.opts.specialEasing);r<i;r++)if(n=lt.prefilters[r].call(l,o,c,l.opts))return m(n.stop)&&(S._queueHooks(l.elem,l.opts.queue).stop=n.stop.bind(n)),n;return S.map(c,ut,l),m(l.opts.start)&&l.opts.start.call(o,l),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always),S.fx.timer(S.extend(u,{elem:o,anim:l,queue:l.opts.queue})),l}S.Animation=S.extend(lt,{tweeners:{\"*\":[function(e,t){var n=this.createTween(e,t);return se(n.elem,e,te.exec(t),n),n}]},tweener:function(e,t){m(e)?(t=e,e=[\"*\"]):e=e.match(P);for(var n,r=0,i=e.length;r<i;r++)n=e[r],lt.tweeners[n]=lt.tweeners[n]||[],lt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var r,i,o,a,s,u,l,c,f=\"width\"in t||\"height\"in t,p=this,d={},h=e.style,g=e.nodeType&&ae(e),v=Y.get(e,\"fxshow\");for(r in n.queue||(null==(a=S._queueHooks(e,\"fx\")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,S.queue(e,\"fx\").length||a.empty.fire()})})),t)if(i=t[r],rt.test(i)){if(delete t[r],o=o||\"toggle\"===i,i===(g?\"hide\":\"show\")){if(\"show\"!==i||!v||void 0===v[r])continue;g=!0}d[r]=v&&v[r]||S.style(e,r)}if((u=!S.isEmptyObject(t))||!S.isEmptyObject(d))for(r in f&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(l=v&&v.display)&&(l=Y.get(e,\"display\")),\"none\"===(c=S.css(e,\"display\"))&&(l?c=l:(le([e],!0),l=e.style.display||l,c=S.css(e,\"display\"),le([e]))),(\"inline\"===c||\"inline-block\"===c&&null!=l)&&\"none\"===S.css(e,\"float\")&&(u||(p.done(function(){h.display=l}),null==l&&(c=h.display,l=\"none\"===c?\"\":c)),h.display=\"inline-block\")),n.overflow&&(h.overflow=\"hidden\",p.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]})),u=!1,d)u||(v?\"hidden\"in v&&(g=v.hidden):v=Y.access(e,\"fxshow\",{display:l}),o&&(v.hidden=!g),g&&le([e],!0),p.done(function(){for(r in g||le([e]),Y.remove(e,\"fxshow\"),d)S.style(e,r,d[r])})),u=ut(g?v[r]:0,r,p),r in v||(v[r]=u.start,g&&(u.end=u.start,u.start=0))}],prefilter:function(e,t){t?lt.prefilters.unshift(e):lt.prefilters.push(e)}}),S.speed=function(e,t,n){var r=e&&\"object\"==typeof e?S.extend({},e):{complete:n||!n&&t||m(e)&&e,duration:e,easing:n&&t||t&&!m(t)&&t};return S.fx.off?r.duration=0:\"number\"!=typeof r.duration&&(r.duration in S.fx.speeds?r.duration=S.fx.speeds[r.duration]:r.duration=S.fx.speeds._default),null!=r.queue&&!0!==r.queue||(r.queue=\"fx\"),r.old=r.complete,r.complete=function(){m(r.old)&&r.old.call(this),r.queue&&S.dequeue(this,r.queue)},r},S.fn.extend({fadeTo:function(e,t,n,r){return this.filter(ae).css(\"opacity\",0).show().end().animate({opacity:t},e,n,r)},animate:function(t,e,n,r){var i=S.isEmptyObject(t),o=S.speed(e,n,r),a=function(){var e=lt(this,S.extend({},t),o);(i||Y.get(this,\"finish\"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return\"string\"!=typeof i&&(o=e,e=i,i=void 0),e&&this.queue(i||\"fx\",[]),this.each(function(){var e=!0,t=null!=i&&i+\"queueHooks\",n=S.timers,r=Y.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&it.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||S.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||\"fx\"),this.each(function(){var e,t=Y.get(this),n=t[a+\"queue\"],r=t[a+\"queueHooks\"],i=S.timers,o=n?n.length:0;for(t.finish=!0,S.queue(this,a,[]),r&&r.stop&&r.stop.call(this,!0),e=i.length;e--;)i[e].elem===this&&i[e].queue===a&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),S.each([\"toggle\",\"show\",\"hide\"],function(e,r){var i=S.fn[r];S.fn[r]=function(e,t,n){return null==e||\"boolean\"==typeof e?i.apply(this,arguments):this.animate(st(r,!0),e,t,n)}}),S.each({slideDown:st(\"show\"),slideUp:st(\"hide\"),slideToggle:st(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(e,r){S.fn[e]=function(e,t,n){return this.animate(r,e,t,n)}}),S.timers=[],S.fx.tick=function(){var e,t=0,n=S.timers;for(Ze=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||S.fx.stop(),Ze=void 0},S.fx.timer=function(e){S.timers.push(e),S.fx.start()},S.fx.interval=13,S.fx.start=function(){et||(et=!0,ot())},S.fx.stop=function(){et=null},S.fx.speeds={slow:600,fast:200,_default:400},S.fn.delay=function(r,e){return r=S.fx&&S.fx.speeds[r]||r,e=e||\"fx\",this.queue(e,function(e,t){var n=C.setTimeout(e,r);t.stop=function(){C.clearTimeout(n)}})},tt=E.createElement(\"input\"),nt=E.createElement(\"select\").appendChild(E.createElement(\"option\")),tt.type=\"checkbox\",y.checkOn=\"\"!==tt.value,y.optSelected=nt.selected,(tt=E.createElement(\"input\")).value=\"t\",tt.type=\"radio\",y.radioValue=\"t\"===tt.value;var ct,ft=S.expr.attrHandle;S.fn.extend({attr:function(e,t){return $(this,S.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){S.removeAttr(this,e)})}}', '```html\n<div class=\'container\'>\n  <div class=\'card\'>\n    <div class=\'card-header bg-danger text-white\'>\n      Vulnerabilidades de Seguridad\n    </div>\n    <div class=\'card-body\'>\n      <h5 class=\'card-title\'>Posible XSS en la función `S.html()`</h5>\n      <p class=\'card-text\'>\n        <b>Tipo:</b> Cross-Site Scripting (XSS).<br>\n        <b>Línea Aproximada:</b> La función `S.fn.html` y `S.html` son las propensas a esta vulnerabilidad.<br>\n        <b>Descripción:</b> Si la entrada a la función `S.html()` no se sanitiza correctamente, un atacante podría inyectar código HTML malicioso que se ejecutaría en el navegador del usuario.  Este código malicioso podría robar cookies, redirigir al usuario a un sitio web falso o realizar otras acciones perjudiciales en nombre del usuario.<br>\n        <b>Mitigación:</b>\n        <ul>\n          <li><b>Sanitizar la entrada:</b> Utiliza una función de escape HTML para codificar cualquier entrada proporcionada por el usuario antes de pasarla a la función `S.html()`.  Esto convertirá caracteres especiales como `<`, `>` y `\"` en sus correspondientes entidades HTML (por ejemplo, `&lt;`, `&gt;`, `&quot;`), evitando que el código malicioso se interprete como HTML.</li>\n          <li><b>Utilizar `textContent` en lugar de `innerHTML` cuando sea posible:</b> Si solo necesitas insertar texto simple, utiliza la propiedad `textContent` en lugar de `innerHTML`. Esto evita que el navegador interprete el contenido como HTML.</li>\n          <li><b>Validar contra una lista blanca:</b> En lugar de filtrar una lista negra de caracteres, considera validar el input comparándolo contra una lista blanca de valores o caracteres permitidos.</li>\n        </ul>\n        <b>Ejemplo de código vulnerable:</b>\n        <code>\n          <pre>\n          S.fn.extend({\n            html: function(e) {\n              return $(this, function(e) {\n                if (typeof e === \"string\") {\n                  this.innerHTML = e; // Vulnerable!\n                }\n              }, null, e, arguments.length);\n            }\n          });\n          </pre>\n        </code>\n        <b>Ejemplo de código mitigado:</b>\n        <code>\n          <pre>\n          function escapeHTML(string) {\n            var pre = document.createElement(\'pre\');\n            var text = document.createTextNode(string);\n            pre.appendChild(text);\n            return pre.innerHTML;\n          }\n\n          S.fn.extend({\n            html: function(e) {\n              return $(this, function(e) {\n                if (typeof e === \"string\") {\n                  this.innerHTML = escapeHTML(e); // Mitigated\n                }\n              }, null, e, arguments.length);\n            }\n          });\n          </pre>\n        </code>\n        <b>Mejora de la Calidad del Código:</b>  El uso de una función de escape centralizada mejora la legibilidad y mantenibilidad, facilitando la actualización de la lógica de escape en el futuro.\n      </p>\n    </div>\n  </div>\n\n  <div class=\'card\'>\n    <div class=\'card-header bg-warning text-white\'>\n      Métricas de Calidad del Código\n    </div>\n    <div class=\'card-body\'>\n      <h5 class=\'card-title\'>Complejidad Ciclomática</h5>\n      <p class=\'card-text\'>\n        <b>Descripción:</b> El código, al ser una biblioteca completa, presenta una alta complejidad ciclomática en varias funciones, especialmente en las relacionadas con la selección de elementos (Sizzle) y el manejo de eventos. La presencia de múltiples bifurcaciones y bucles anidados dificulta la comprensión y el mantenimiento.\n        <br>\n        <b>Mejora:</b>\n        <ul>\n          <li><b>Refactorizar funciones complejas:</b> Divide las funciones grandes en funciones más pequeñas y manejables, cada una con una única responsabilidad. Esto mejora la legibilidad y facilita las pruebas unitarias.</li>\n          <li><b>Utilizar patrones de diseño:</b> Considera la posibilidad de aplicar patrones de diseño como el Strategy o el Template Method para reducir la complejidad y mejorar la flexibilidad.</li>\n          <li><b>Simplificar lógica condicional:</b> Reduce el número de condiciones anidadas utilizando técnicas como tablas de búsqueda o la descomposición en funciones separadas para cada caso.</li>\n        </ul>\n      </p>\n\n      <h5 class=\'card-title\'>Duplicación de Código</h5>\n      <p class=\'card-text\'>\n        <b>Descripción:</b>  Es probable que exista duplicación de código en varias partes de la biblioteca, especialmente en funciones que realizan tareas similares, como la manipulación de atributos y el manejo de eventos.\n        <br>\n        <b>Mejora:</b>\n        <ul>\n          <li><b>Extraer funciones comunes:</b> Identifica las secciones de código duplicadas y crea funciones reutilizables para encapsularlas.</li>\n          <li><b>Utilizar herencia o composición:</b> Si hay clases con funcionalidades similares, considera la posibilidad de utilizar la herencia o la composición para compartir el código común.</li>\n        </ul>\n      </p>\n\n      <h5 class=\'card-title\'>Legibilidad</h5>\n      <p class=\'card-text\'>\n        <b>Descripción:</b>  El código está ofuscado y minificado, lo que dificulta enormemente la legibilidad y el entendimiento.\n        <br>\n        <b>Mejora:</b>\n        <ul>\n          <li>Usar versión no minificada para desarrollo: Esencial usar la versión no minificada para análisis, depuración y mantenimiento.</li>\n          <li>Comentar el código: Explicar la funcionalidad de las secciones complejas.</li>\n          <li>Nombrar variables y funciones descriptivamente: Usar nombres que reflejen su propósito.</li>\n        </ul>\n      </p>\n\n      <h5 class=\'card-title\'>Acoplamiento</h5>\n      <p class=\'card-text\'>\n        <b>Descripción:</b> Dado que jQuery es una biblioteca monolítica, existe un alto acoplamiento entre sus diferentes componentes. Los cambios en un componente pueden afectar a otros, lo que dificulta el mantenimiento y la evolución.\n        <br>\n        <b>Mejora:</b>\n        <ul>\n          <li><b>Modularizar la biblioteca:</b> Divide la biblioteca en módulos más pequeños e independientes con interfaces bien definidas.  Esto permite que los módulos se desarrollen y se prueben de forma independiente, y reduce el impacto de los cambios en otros módulos.</li>\n          <li><b>Utilizar inyección de dependencias:</b> Reduce el acoplamiento entre los módulos utilizando la inyección de dependencias. Esto permite que los módulos se configuren con diferentes implementaciones de sus dependencias, lo que facilita las pruebas y la reutilización.</li>\n        </ul>\n      </p>\n    </div>\n  </div>\n\n  <div class=\'card border-success\'>\n    <div class=\'card-header bg-success text-white\'>\n      Solución Propuesta\n    </div>\n    <div class=\'card-body\'>\n      <p class=\'card-text\'>\n        La principal mejora radica en <b>sanitizar las entradas de usuario</b> en las funciones de manipulación del DOM, como `S.html()`. Además, el código se beneficiaría de una <b>refactorización</b> para reducir la complejidad ciclomática, eliminar la duplicación y mejorar la legibilidad. La <b>modularización</b> y la <b>inyección de dependencias</b> podrían ayudar a reducir el acoplamiento entre los componentes de la biblioteca. Es imperativo contar con una versión no minificada y bien comentada para desarrollo y mantenimiento.\n      </p>\n    </div>\n  </div>\n</div>\n```\n', '2025-06-10 02:51:47', 3);
INSERT INTO `vulnerabilidades` (`id`, `archivo`, `tipo_vulnerabilidad`, `codigo_vulnerable`, `solucion_propuesta`, `fecha_subida`, `id_zip`) VALUES
(8, 'sweetalert2@11.js', 'Detectado por GPT', '/*!\r\n* sweetalert2 v11.17.2\r\n* Released under the MIT License.\r\n*/\r\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).Sweetalert2=t()}(this,(function(){\"use strict\";function e(e,t,n){if(\"function\"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError(\"Private element is not present on this object\")}function t(t,n){return t.get(e(t,n))}function n(e,t,n){(function(e,t){if(t.has(e))throw new TypeError(\"Cannot initialize the same private elements twice on an object\")})(e,t),t.set(e,n)}const o={},i=e=>new Promise((t=>{if(!e)return t();const n=window.scrollX,i=window.scrollY;o.restoreFocusTimeout=setTimeout((()=>{o.previousActiveElement instanceof HTMLElement?(o.previousActiveElement.focus(),o.previousActiveElement=null):document.body&&document.body.focus(),t()}),100),window.scrollTo(n,i)})),s=\"swal2-\",r=[\"container\",\"shown\",\"height-auto\",\"iosfix\",\"popup\",\"modal\",\"no-backdrop\",\"no-transition\",\"toast\",\"toast-shown\",\"show\",\"hide\",\"close\",\"title\",\"html-container\",\"actions\",\"confirm\",\"deny\",\"cancel\",\"default-outline\",\"footer\",\"icon\",\"icon-content\",\"image\",\"input\",\"file\",\"range\",\"select\",\"radio\",\"checkbox\",\"label\",\"textarea\",\"inputerror\",\"input-label\",\"validation-message\",\"progress-steps\",\"active-progress-step\",\"progress-step\",\"progress-step-line\",\"loader\",\"loading\",\"styled\",\"top\",\"top-start\",\"top-end\",\"top-left\",\"top-right\",\"center\",\"center-start\",\"center-end\",\"center-left\",\"center-right\",\"bottom\",\"bottom-start\",\"bottom-end\",\"bottom-left\",\"bottom-right\",\"grow-row\",\"grow-column\",\"grow-fullscreen\",\"rtl\",\"timer-progress-bar\",\"timer-progress-bar-container\",\"scrollbar-measure\",\"icon-success\",\"icon-warning\",\"icon-info\",\"icon-question\",\"icon-error\",\"draggable\",\"dragging\"].reduce(((e,t)=>(e[t]=s+t,e)),{}),a=[\"success\",\"warning\",\"info\",\"question\",\"error\"].reduce(((e,t)=>(e[t]=s+t,e)),{}),l=\"SweetAlert2:\",c=e=>e.charAt(0).toUpperCase()+e.slice(1),u=e=>{console.warn(`${l} ${\"object\"==typeof e?e.join(\" \"):e}`)},d=e=>{console.error(`${l} ${e}`)},p=[],m=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;var n;n=`\"${e}\" is deprecated and will be removed in the next major release.${t?` Use \"${t}\" instead.`:\"\"}`,p.includes(n)||(p.push(n),u(n))},h=e=>\"function\"==typeof e?e():e,g=e=>e&&\"function\"==typeof e.toPromise,f=e=>g(e)?e.toPromise():Promise.resolve(e),b=e=>e&&Promise.resolve(e)===e,y=()=>document.body.querySelector(`.${r.container}`),v=e=>{const t=y();return t?t.querySelector(e):null},w=e=>v(`.${e}`),C=()=>w(r.popup),A=()=>w(r.icon),E=()=>w(r.title),k=()=>w(r[\"html-container\"]),B=()=>w(r.image),L=()=>w(r[\"progress-steps\"]),$=()=>w(r[\"validation-message\"]),x=()=>v(`.${r.actions} .${r.confirm}`),P=()=>v(`.${r.actions} .${r.cancel}`),T=()=>v(`.${r.actions} .${r.deny}`),S=()=>v(`.${r.loader}`),O=()=>w(r.actions),M=()=>w(r.footer),j=()=>w(r[\"timer-progress-bar\"]),H=()=>w(r.close),I=()=>{const e=C();if(!e)return[];const t=e.querySelectorAll(\'[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])\'),n=Array.from(t).sort(((e,t)=>{const n=parseInt(e.getAttribute(\"tabindex\")||\"0\"),o=parseInt(t.getAttribute(\"tabindex\")||\"0\");return n>o?1:n<o?-1:0})),o=e.querySelectorAll(\'\\n  a[href],\\n  area[href],\\n  input:not([disabled]),\\n  select:not([disabled]),\\n  textarea:not([disabled]),\\n  button:not([disabled]),\\n  iframe,\\n  object,\\n  embed,\\n  [tabindex=\"0\"],\\n  [contenteditable],\\n  audio[controls],\\n  video[controls],\\n  summary\\n\'),i=Array.from(o).filter((e=>\"-1\"!==e.getAttribute(\"tabindex\")));return[...new Set(n.concat(i))].filter((e=>ee(e)))},D=()=>N(document.body,r.shown)&&!N(document.body,r[\"toast-shown\"])&&!N(document.body,r[\"no-backdrop\"]),q=()=>{const e=C();return!!e&&N(e,r.toast)},V=(e,t)=>{if(e.textContent=\"\",t){const n=(new DOMParser).parseFromString(t,\"text/html\"),o=n.querySelector(\"head\");o&&Array.from(o.childNodes).forEach((t=>{e.appendChild(t)}));const i=n.querySelector(\"body\");i&&Array.from(i.childNodes).forEach((t=>{t instanceof HTMLVideoElement||t instanceof HTMLAudioElement?e.appendChild(t.cloneNode(!0)):e.appendChild(t)}))}},N=(e,t)=>{if(!t)return!1;const n=t.split(/\\s+/);for(let t=0;t<n.length;t++)if(!e.classList.contains(n[t]))return!1;return!0},_=(e,t,n)=>{if(((e,t)=>{Array.from(e.classList).forEach((n=>{Object.values(r).includes(n)||Object.values(a).includes(n)||Object.values(t.showClass||{}).includes(n)||e.classList.remove(n)}))})(e,t),!t.customClass)return;const o=t.customClass[n];o&&(\"string\"==typeof o||o.forEach?z(e,o):u(`Invalid type of customClass.${n}! Expected string or iterable object, got \"${typeof o}\"`))},F=(e,t)=>{if(!t)return null;switch(t){case\"select\":case\"textarea\":case\"file\":return e.querySelector(`.${r.popup} > .${r[t]}`);case\"checkbox\":return e.querySelector(`.${r.popup} > .${r.checkbox} input`);case\"radio\":return e.querySelector(`.${r.popup} > .${r.radio} input:checked`)||e.querySelector(`.${r.popup} > .${r.radio} input:first-child`);case\"range\":return e.querySelector(`.${r.popup} > .${r.range} input`);default:return e.querySelector(`.${r.popup} > .${r.input}`)}},R=e=>{if(e.focus(),\"file\"!==e.type){const t=e.value;e.value=\"\",e.value=t}},U=(e,t,n)=>{e&&t&&(\"string\"==typeof t&&(t=t.split(/\\s+/).filter(Boolean)),t.forEach((t=>{Array.isArray(e)?e.forEach((e=>{n?e.classList.add(t):e.classList.remove(t)})):n?e.classList.add(t):e.classList.remove(t)})))},z=(e,t)=>{U(e,t,!0)},W=(e,t)=>{U(e,t,!1)},K=(e,t)=>{const n=Array.from(e.children);for(let e=0;e<n.length;e++){const o=n[e];if(o instanceof HTMLElement&&N(o,t))return o}},Y=(e,t,n)=>{n===`${parseInt(n)}`&&(n=parseInt(n)),n||0===parseInt(n)?e.style.setProperty(t,\"number\"==typeof n?`${n}px`:n):e.style.removeProperty(t)},X=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"flex\";e&&(e.style.display=t)},Z=e=>{e&&(e.style.display=\"none\")},J=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"block\";e&&new MutationObserver((()=>{Q(e,e.innerHTML,t)})).observe(e,{childList:!0,subtree:!0})},G=(e,t,n,o)=>{const i=e.querySelector(t);i&&i.style.setProperty(n,o)},Q=function(e,t){t?X(e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"flex\"):Z(e)},ee=e=>!(!e||!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)),te=e=>!!(e.scrollHeight>e.clientHeight),ne=e=>{const t=window.getComputedStyle(e),n=parseFloat(t.getPropertyValue(\"animation-duration\")||\"0\"),o=parseFloat(t.getPropertyValue(\"transition-duration\")||\"0\");return n>0||o>0},oe=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=j();n&&ee(n)&&(t&&(n.style.transition=\"none\",n.style.width=\"100%\"),setTimeout((()=>{n.style.transition=`width ${e/1e3}s linear`,n.style.width=\"0%\"}),10))},ie=`\\n <div aria-labelledby=\"${r.title}\" aria-describedby=\"${r[\"html-container\"]}\" class=\"${r.popup}\" tabindex=\"-1\">\\n   <button type=\"button\" class=\"${r.close}\"></button>\\n   <ul class=\"${r[\"progress-steps\"]}\"></ul>\\n   <div class=\"${r.icon}\"></div>\\n   <img class=\"${r.image}\" />\\n   <h2 class=\"${r.title}\" id=\"${r.title}\"></h2>\\n   <div class=\"${r[\"html-container\"]}\" id=\"${r[\"html-container\"]}\"></div>\\n   <input class=\"${r.input}\" id=\"${r.input}\" />\\n   <input type=\"file\" class=\"${r.file}\" />\\n   <div class=\"${r.range}\">\\n     <input type=\"range\" />\\n     <output></output>\\n   </div>\\n   <select class=\"${r.select}\" id=\"${r.select}\"></select>\\n   <div class=\"${r.radio}\"></div>\\n   <label class=\"${r.checkbox}\">\\n     <input type=\"checkbox\" id=\"${r.checkbox}\" />\\n     <span class=\"${r.label}\"></span>\\n   </label>\\n   <textarea class=\"${r.textarea}\" id=\"${r.textarea}\"></textarea>\\n   <div class=\"${r[\"validation-message\"]}\" id=\"${r[\"validation-message\"]}\"></div>\\n   <div class=\"${r.actions}\">\\n     <div class=\"${r.loader}\"></div>\\n     <button type=\"button\" class=\"${r.confirm}\"></button>\\n     <button type=\"button\" class=\"${r.deny}\"></button>\\n     <button type=\"button\" class=\"${r.cancel}\"></button>\\n   </div>\\n   <div class=\"${r.footer}\"></div>\\n   <div class=\"${r[\"timer-progress-bar-container\"]}\">\\n     <div class=\"${r[\"timer-progress-bar\"]}\"></div>\\n   </div>\\n </div>\\n`.replace(/(^|\\n)\\s*/g,\"\"),se=()=>{o.currentInstance.resetValidationMessage()},re=e=>{const t=(()=>{const e=y();return!!e&&(e.remove(),W([document.documentElement,document.body],[r[\"no-backdrop\"],r[\"toast-shown\"],r[\"has-column\"]]),!0)})();if(\"undefined\"==typeof window||\"undefined\"==typeof document)return void d(\"SweetAlert2 requires document to initialize\");const n=document.createElement(\"div\");n.className=r.container,t&&z(n,r[\"no-transition\"]),V(n,ie),n.dataset.swal2Theme=e.theme;const o=\"string\"==typeof(i=e.target)?document.querySelector(i):i;var i;o.appendChild(n),(e=>{const t=C();t.setAttribute(\"role\",e.toast?\"alert\":\"dialog\"),t.setAttribute(\"aria-live\",e.toast?\"polite\":\"assertive\"),e.toast||t.setAttribute(\"aria-modal\",\"true\")})(e),(e=>{\"rtl\"===window.getComputedStyle(e).direction&&z(y(),r.rtl)})(o),(()=>{const e=C(),t=K(e,r.input),n=K(e,r.file),o=e.querySelector(`.${r.range} input`),i=e.querySelector(`.${r.range} output`),s=K(e,r.select),a=e.querySelector(`.${r.checkbox} input`),l=K(e,r.textarea);t.oninput=se,n.onchange=se,s.onchange=se,a.onchange=se,l.oninput=se,o.oninput=()=>{se(),i.value=o.value},o.onchange=()=>{se(),i.value=o.value}})()},ae=(e,t)=>{e instanceof HTMLElement?t.appendChild(e):\"object\"==typeof e?le(e,t):e&&V(t,e)},le=(e,t)=>{e.jquery?ce(t,e):V(t,e.toString())},ce=(e,t)=>{if(e.textContent=\"\",0 in t)for(let n=0;n in t;n++)e.appendChild(t[n].cloneNode(!0));else e.appendChild(t.cloneNode(!0))},ue=(e,t)=>{const n=O(),o=S();n&&o&&(t.showConfirmButton||t.showDenyButton||t.showCancelButton?X(n):Z(n),_(n,t,\"actions\"),function(e,t,n){const o=x(),i=T(),s=P();if(!o||!i||!s)return;de(o,\"confirm\",n),de(i,\"deny\",n),de(s,\"cancel\",n),function(e,t,n,o){if(!o.buttonsStyling)return void W([e,t,n],r.styled);z([e,t,n],r.styled),o.confirmButtonColor&&(e.style.backgroundColor=o.confirmButtonColor,z(e,r[\"default-outline\"]));o.denyButtonColor&&(t.style.backgroundColor=o.denyButtonColor,z(t,r[\"default-outline\"]));o.cancelButtonColor&&(n.style.backgroundColor=o.cancelButtonColor,z(n,r[\"default-outline\"]))}(o,i,s,n),n.reverseButtons&&(n.toast?(e.insertBefore(s,o),e.insertBefore(i,o)):(e.insertBefore(s,t),e.insertBefore(i,t),e.insertBefore(o,t)))}(n,o,t),V(o,t.loaderHtml||\"\"),_(o,t,\"loader\"))};function de(e,t,n){const o=c(t);Q(e,n[`show${o}Button`],\"inline-block\"),V(e,n[`${t}ButtonText`]||\"\"),e.setAttribute(\"aria-label\",n[`${t}ButtonAriaLabel`]||\"\"),e.className=r[t],_(e,n,`${t}Button`)}const pe=(e,t)=>{const n=y();n&&(!function(e,t){\"string\"==typeof t?e.style.background=t:t||z([document.documentElement,document.body],r[\"no-backdrop\"])}(n,t.backdrop),function(e,t){if(!t)return;t in r?z(e,r[t]):(u(\'The \"position\" parameter is not valid, defaulting to \"center\"\'),z(e,r.center))}(n,t.position),function(e,t){if(!t)return;z(e,r[`grow-${t}`])}(n,t.grow),_(n,t,\"container\"))};var me={innerParams:new WeakMap,domCache:new WeakMap};const he=[\"input\",\"file\",\"range\",\"select\",\"radio\",\"checkbox\",\"textarea\"],ge=e=>{if(!e.input)return;if(!Ae[e.input])return void d(`Unexpected type of input! Expected ${Object.keys(Ae).join(\" | \")}, got \"${e.input}\"`);const t=we(e.input);if(!t)return;const n=Ae[e.input](t,e);X(t),e.inputAutoFocus&&setTimeout((()=>{R(n)}))},fe=(e,t)=>{const n=C();if(!n)return;const o=F(n,e);if(o){(e=>{for(let t=0;t<e.attributes.length;t++){const n=e.attributes[t].name;[\"id\",\"type\",\"value\",\"style\"].includes(n)||e.removeAttribute(n)}})(o);for(const e in t)o.setAttribute(e,t[e])}},be=e=>{if(!e.input)return;const t=we(e.input);t&&_(t,e,\"input\")},ye=(e,t)=>{!e.placeholder&&t.inputPlaceholder&&(e.placeholder=t.inputPlaceholder)},ve=(e,t,n)=>{if(n.inputLabel){const o=document.createElement(\"label\"),i=r[\"input-label\"];o.setAttribute(\"for\",e.id),o.className=i,\"object\"==typeof n.customClass&&z(o,n.customClass.inputLabel),o.innerText=n.inputLabel,t.insertAdjacentElement(\"beforebegin\",o)}},we=e=>{const t=C();if(t)return K(t,r[e]||r.input)},Ce=(e,t)=>{[\"string\",\"number\"].includes(typeof t)?e.value=`${t}`:b(t)||u(`Unexpected type of inputValue! Expected \"string\", \"number\" or \"Promise\", got \"${typeof t}\"`)},Ae={};Ae.text=Ae.email=Ae.password=Ae.number=Ae.tel=Ae.url=Ae.search=Ae.date=Ae[\"datetime-local\"]=Ae.time=Ae.week=Ae.month=(e,t)=>(Ce(e,t.inputValue),ve(e,e,t),ye(e,t),e.type=t.input,e),Ae.file=(e,t)=>(ve(e,e,t),ye(e,t),e),Ae.range=(e,t)=>{const n=e.querySelector(\"input\"),o=e.querySelector(\"output\");return Ce(n,t.inputValue),n.type=t.input,Ce(o,t.inputValue),ve(n,e,t),e},Ae.select=(e,t)=>{if(e.textContent=\"\",t.inputPlaceholder){const n=document.createElement(\"option\");V(n,t.inputPlaceholder),n.value=\"\",n.disabled=!0,n.selected=!0,e.appendChild(n)}return ve(e,e,t),e},Ae.radio=e=>(e.textContent=\"\",e),Ae.checkbox=(e,t)=>{const n=F(C(),\"checkbox\");n.value=\"1\",n.checked=Boolean(t.inputValue);const o=e.querySelector(\"span\");return V(o,t.inputPlaceholder||t.inputLabel),n},Ae.textarea=(e,t)=>{Ce(e,t.inputValue),ye(e,t),ve(e,e,t);return setTimeout((()=>{if(\"MutationObserver\"in window){const n=parseInt(window.getComputedStyle(C()).width);new MutationObserver((()=>{if(!document.body.contains(e))return;const o=e.offsetWidth+(i=e,parseInt(window.getComputedStyle(i).marginLeft)+parseInt(window.getComputedStyle(i).marginRight));var i;o>n?C().style.width=`${o}px`:Y(C(),\"width\",t.width)})).observe(e,{attributes:!0,attributeFilter:[\"style\"]})}})),e};const Ee=(e,t)=>{const n=k();n&&(J(n),_(n,t,\"htmlContainer\"),t.html?(ae(t.html,n),X(n,\"block\")):t.text?(n.textContent=t.text,X(n,\"block\")):Z(n),((e,t)=>{const n=C();if(!n)return;const o=me.innerParams.get(e),i=!o||t.input!==o.input;he.forEach((e=>{const o=K(n,r[e]);o&&(fe(e,t.inputAttributes),o.className=r[e],i&&Z(o))})),t.input&&(i&&ge(t),be(t))})(e,t))},ke=(e,t)=>{for(const[n,o]of Object.entries(a))t.icon!==n&&W(e,o);z(e,t.icon&&a[t.icon]),$e(e,t),Be(),_(e,t,\"icon\")},Be=()=>{const e=C();if(!e)return;const t=window.getComputedStyle(e).getPropertyValue(\"background-color\"),n=e.querySelectorAll(\"[class^=swal2-success-circular-line], .swal2-success-fix\");for(let e=0;e<n.length;e++)n[e].style.backgroundColor=t},Le=(e,t)=>{if(!t.icon&&!t.iconHtml)return;let n=e.innerHTML,o=\"\";if(t.iconHtml)o=xe(t.iconHtml);else if(\"success\"===t.icon)o=\'\\n  <div class=\"swal2-success-circular-line-left\"></div>\\n  <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\\n  <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\\n  <div class=\"swal2-success-circular-line-right\"></div>\\n\',n=n.replace(/ style=\".*?\"/g,\"\");else if(\"error\"===t.icon)o=\'\\n  <span class=\"swal2-x-mark\">\\n    <span class=\"swal2-x-mark-line-left\"></span>\\n    <span class=\"swal2-x-mark-line-right\"></span>\\n  </span>\\n\';else if(t.icon){o=xe({question:\"?\",warning:\"!\",info:\"i\"}[t.icon])}n.trim()!==o.trim()&&V(e,o)},$e=(e,t)=>{if(t.iconColor){e.style.color=t.iconColor,e.style.borderColor=t.iconColor;for(const n of[\".swal2-success-line-tip\",\".swal2-success-line-long\",\".swal2-x-mark-line-left\",\".swal2-x-mark-line-right\"])G(e,n,\"background-color\",t.iconColor);G(e,\".swal2-success-ring\",\"border-color\",t.iconColor)}},xe=e=>`<div class=\"${r[\"icon-content\"]}\">${e}</div>`;let Pe=!1,Te=0,Se=0,Oe=0,Me=0;const je=e=>{const t=C();if(e.target===t||A().contains(e.target)){Pe=!0;const n=De(e);Te=n.clientX,Se=n.clientY,Oe=parseInt(t.style.insetInlineStart)||0,Me=parseInt(t.style.insetBlockStart)||0,z(t,\"swal2-dragging\")}},He=e=>{const t=C();if(Pe){let{clientX:n,clientY:o}=De(e);t.style.insetInlineStart=`${Oe+(n-Te)}px`,t.style.insetBlockStart=`${Me+(o-Se)}px`}},Ie=()=>{const e=C();Pe=!1,W(e,\"swal2-dragging\")},De=e=>{let t=0,n=0;return e.type.startsWith(\"mouse\")?(t=e.clientX,n=e.clientY):e.type.startsWith(\"touch\")&&(t=e.touches[0].clientX,n=e.touches[0].clientY),{clientX:t,clientY:n}},qe=(e,t)=>{const n=y(),o=C();if(n&&o){if(t.toast){Y(n,\"width\",t.width),o.style.width=\"100%\";const e=S();e&&o.insertBefore(e,A())}else Y(o,\"width\",t.width);Y(o,\"padding\",t.padding),t.color&&(o.style.color=t.color),t.background&&(o.style.background=t.background),Z($()),Ve(o,t),t.draggable&&!t.toast?(z(o,r.draggable),(e=>{e.addEventListener(\"mousedown\",je),document.body.addEventListener(\"mousemove\",He),e.addEventListener(\"mouseup\",Ie),e.addEventListener(\"touchstart\",je),document.body.addEventListener(\"touchmove\",He),e.addEventListener(\"touchend\",Ie)})(o)):(W(o,r.draggable),(e=>{e.removeEventListener(\"mousedown\",je),document.body.removeEventListener(\"mousemove\",He),e.removeEventListener(\"mouseup\",Ie),e.removeEventListener(\"touchstart\",je),document.body.removeEventListener(\"touchmove\",He),e.removeEventListener(\"touchend\",Ie)})(o))}},Ve=(e,t)=>{const n=t.showClass||{};e.className=`${r.popup} ${ee(e)?n.popup:\"\"}`,t.toast?(z([document.documentElement,document.body],r[\"toast-shown\"]),z(e,r.toast)):z(e,r.modal),_(e,t,\"popup\"),\"string\"==typeof t.customClass&&z(e,t.customClass),t.icon&&z(e,r[`icon-${t.icon}`])},Ne=e=>{const t=document.createElement(\"li\");return z(t,r[\"progress-step\"]),V(t,e),t},_e=e=>{const t=document.createElement(\"li\");return z(t,r[\"progress-step-line\"]),e.progressStepsDistance&&Y(t,\"width\",e.progressStepsDistance),t},Fe=(e,t)=>{qe(0,t),pe(0,t),((e,t)=>{const n=L();if(!n)return;const{progressSteps:o,currentProgressStep:i}=t;o&&0!==o.length&&void 0!==i?(X(n),n.textContent=\"\",i>=o.length&&u(\"Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)\"),o.forEach(((e,s)=>{const a=Ne(e);if(n.appendChild(a),s===i&&z(a,r[\"active-progress-step\"]),s!==o.length-1){const e=_e(t);n.appendChild(e)}}))):Z(n)})(0,t),((e,t)=>{const n=me.innerParams.get(e),o=A();if(!o)return;if(n&&t.icon===n.icon)return Le(o,t),void ke(o,t);if(!t.icon&&!t.iconHtml)return void Z(o);if(t.icon&&-1===Object.keys(a).indexOf(t.icon))return d(`Unknown icon! Expected \"success\", \"error\", \"warning\", \"info\" or \"question\", got \"${t.icon}\"`),void Z(o);X(o),Le(o,t),ke(o,t),z(o,t.showClass&&t.showClass.icon),window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\",Be)})(e,t),((e,t)=>{const n=B();n&&(t.imageUrl?(X(n,\"\"),n.setAttribute(\"src\",t.imageUrl),n.setAttribute(\"alt\",t.imageAlt||\"\"),Y(n,\"width\",t.imageWidth),Y(n,\"height\",t.imageHeight),n.className=r.image,_(n,t,\"image\")):Z(n))})(0,t),((e,t)=>{const n=E();n&&(J(n),Q(n,t.title||t.titleText,\"block\"),t.title&&ae(t.title,n),t.titleText&&(n.innerText=t.titleText),_(n,t,\"title\"))})(0,t),((e,t)=>{const n=H();n&&(V(n,t.closeButtonHtml||\"\"),_(n,t,\"closeButton\"),Q(n,t.showCloseButton),n.setAttribute(\"aria-label\",t.closeButtonAriaLabel||\"\"))})(0,t),Ee(e,t),ue(0,t),((e,t)=>{const n=M();n&&(J(n),Q(n,t.footer,\"block\"),t.footer&&ae(t.footer,n),_(n,t,\"footer\"))})(0,t);const n=C();\"function\"==typeof t.didRender&&n&&t.didRender(n),o.eventEmitter.emit(\"didRender\",n)},Re=()=>{var e;return null===(e=x())||void 0===e?void 0:e.click()},Ue=Object.freeze({cancel:\"cancel\",backdrop:\"backdrop\",close:\"close\",esc:\"esc\",timer:\"timer\"}),ze=e=>{e.keydownTarget&&e.keydownHandlerAdded&&(e.keydownTarget.removeEventListener(\"keydown\",e.keydownHandler,{capture:e.keydownListenerCapture}),e.keydownHandlerAdded=!1)},We=(e,t)=>{var n;const o=I();if(o.length)return(e+=t)===o.length?e=0:-1===e&&(e=o.length-1),void o[e].focus();null===(n=C())||void 0===n||n.focus()},Ke=[\"ArrowRight\",\"ArrowDown\"],Ye=[\"ArrowLeft\",\"ArrowUp\"],Xe=(e,t,n)=>{e&&(t.isComposing||229===t.keyCode||(e.stopKeydownPropagation&&t.stopPropagation(),\"Enter\"===t.key?Ze(t,e):\"Tab\"===t.key?Je(t):[...Ke,...Ye].includes(t.key)?Ge(t.key):\"Escape\"===t.key&&Qe(t,e,n)))},Ze=(e,t)=>{if(!h(t.allowEnterKey))return;const n=F(C(),t.input);if(e.target&&n&&e.target instanceof HTMLElement&&e.target.outerHTML===n.outerHTML){if([\"textarea\",\"file\"].includes(t.input))return;Re(),e.preventDefault()}},Je=e=>{const t=e.target,n=I();let o=-1;for(let e=0;e<n.length;e++)if(t===n[e]){o=e;break}e.shiftKey?We(o,-1):We(o,1),e.stopPropagation(),e.preventDefault()},Ge=e=>{const t=O(),n=x(),o=T(),i=P();if(!(t&&n&&o&&i))return;const s=[n,o,i];if(document.activeElement instanceof HTMLElement&&!s.includes(document.activeElement))return;const r=Ke.includes(e)?\"nextElementSibling\":\"previousElementSibling\";let a=document.activeElement;if(a){for(let e=0;e<t.children.length;e++){if(a=a[r],!a)return;if(a instanceof HTMLButtonElement&&ee(a))break}a instanceof HTMLButtonElement&&a.focus()}},Qe=(e,t,n)=>{h(t.allowEscapeKey)&&(e.preventDefault(),n(Ue.esc))};var et={swalPromiseResolve:new WeakMap,swalPromiseReject:new WeakMap};const tt=()=>{Array.from(document.body.children).forEach((e=>{e.hasAttribute(\"data-previous-aria-hidden\")?(e.setAttribute(\"aria-hidden\",e.getAttribute(\"data-previous-aria-hidden\")||\"\"),e.removeAttribute(\"data-previous-aria-hidden\")):e.removeAttribute(\"aria-hidden\")}))},nt=\"undefined\"!=typeof window&&!!window.GestureEvent,ot=()=>{const e=y();if(!e)return;let t;e.ontouchstart=e=>{t=it(e)},e.ontouchmove=e=>{t&&(e.preventDefault(),e.stopPropagation())}},it=e=>{const t=e.target,n=y(),o=k();return!(!n||!o)&&(!st(e)&&!rt(e)&&(t===n||!te(n)&&t instanceof HTMLElement&&\"INPUT\"!==t.tagName&&\"TEXTAREA\"!==t.tagName&&(!te(o)||!o.contains(t))))},st=e=>e.touches&&e.touches.length&&\"stylus\"===e.touches[0].touchType,rt=e=>e.touches&&e.touches.length>1;let at=null;const lt=e=>{null===at&&(document.body.scrollHeight>window.innerHeight||\"scroll\"===e)&&(at=parseInt(window.getComputedStyle(document.body).getPropertyValue(\"padding-right\")),document.body.style.paddingRight=`${at+(()=>{const e=document.createElement(\"div\");e.className=r[\"scrollbar-measure\"],document.body.appendChild(e);const t=e.getBoundingClientRect().width-e.clientWidth;return document.body.removeChild(e),t})()}px`)};function ct(e,t,n,s){q()?bt(e,s):(i(n).then((()=>bt(e,s))),ze(o)),nt?(t.setAttribute(\"style\",\"display:none !important\"),t.removeAttribute(\"class\"),t.innerHTML=\"\"):t.remove(),D()&&(null!==at&&(document.body.style.paddingRight=`${at}px`,at=null),(()=>{if(N(document.body,r.iosfix)){const e=parseInt(document.body.style.top,10);W(document.body,r.iosfix),document.body.style.top=\"\",document.body.scrollTop=-1*e}})(),tt()),W([document.documentElement,document.body],[r.shown,r[\"height-auto\"],r[\"no-backdrop\"],r[\"toast-shown\"]])}function ut(e){e=ht(e);const t=et.swalPromiseResolve.get(this),n=dt(this);this.isAwaitingPromise?e.isDismissed||(mt(this),t(e)):n&&t(e)}const dt=e=>{const t=C();if(!t)return!1;const n=me.innerParams.get(e);if(!n||N(t,n.hideClass.popup))return!1;W(t,n.showClass.popup),z(t,n.hideClass.popup);const o=y();return W(o,n.showClass.backdrop),z(o,n.hideClass.backdrop),gt(e,t,n),!0};function pt(e){const t=et.swalPromiseReject.get(this);mt(this),t&&t(e)}const mt=e=>{e.isAwaitingPromise&&(delete e.isAwaitingPromise,me.innerParams.get(e)||e._destroy())},ht=e=>void 0===e?{isConfirmed:!1,isDenied:!1,isDismissed:!0}:Object.assign({isConfirmed:!1,isDenied:!1,isDismissed:!1},e),gt=(e,t,n)=>{var i;const s=y(),r=ne(t);\"function\"==typeof n.willClose&&n.willClose(t),null===(i=o.eventEmitter)||void 0===i||i.emit(\"willClose\",t),r?ft(e,t,s,n.returnFocus,n.didClose):ct(e,s,n.returnFocus,n.didClose)},ft=(e,t,n,i,s)=>{o.swalCloseEventFinishedCallback=ct.bind(null,e,n,i,s);const r=function(e){var n;e.target===t&&(null===(n=o.swalCloseEventFinishedCallback)||void 0===n||n.call(o),delete o.swalCloseEventFinishedCallback,t.removeEventListener(\"animationend\",r),t.removeEventListener(\"transitionend\",r))};t.addEventListener(\"animationend\",r),t.addEventListener(\"transitionend\",r)},bt=(e,t)=>{setTimeout((()=>{var n;\"function\"==typeof t&&t.bind(e.params)(),null===(n=o.eventEmitter)||void 0===n||n.emit(\"didClose\"),e._destroy&&e._destroy()}))},yt=e=>{let t=C();if(t||new Gn,t=C(),!t)return;const n=S();q()?Z(A()):vt(t,e),X(n),t.setAttribute(\"data-loading\",\"true\"),t.setAttribute(\"aria-busy\",\"true\"),t.focus()},vt=(e,t)=>{const n=O(),o=S();n&&o&&(!t&&ee(x())&&(t=x()),X(n),t&&(Z(t),o.setAttribute(\"data-button-to-replace\",t.className),n.insertBefore(o,t)),z([e,n],r.loading))},wt=e=>e.checked?1:0,Ct=e=>e.checked?e.value:null,At=e=>e.files&&e.files.length?null!==e.getAttribute(\"multiple\")?e.files:e.files[0]:null,Et=(e,t)=>{const n=C();if(!n)return;const o=e=>{\"select\"===t.input?function(e,t,n){const o=K(e,r.select);if(!o)return;const i=(e,t,o)=>{const i=document.createElement(\"option\");i.value=o,V(i,t),i.selected=Lt(o,n.inputValue),e.appendChild(i)};t.forEach((e=>{const t=e[0],n=e[1];if(Array.isArray(n)){const e=document.createElement(\"optgroup\");e.label=t,e.disabled=!1,o.appendChild(e),n.forEach((t=>i(e,t[1],t[0])))}else i(o,n,t)})),o.focus()}(n,Bt(e),t):\"radio\"===t.input&&function(e,t,n){const o=K(e,r.radio);if(!o)return;t.forEach((e=>{const t=e[0],i=e[1],s=document.createElement(\"input\"),a=document.createElement(\"label\");s.type=\"radio\",s.name=r.radio,s.value=t,Lt(t,n.inputValue)&&(s.checked=!0);const l=document.createElement(\"span\");V(l,i),l.className=r.label,a.appendChild(s),a.appendChild(l),o.appendChild(a)}));const i=o.querySelectorAll(\"input\");i.length&&i[0].focus()}(n,Bt(e),t)};g(t.inputOptions)||b(t.inputOptions)?(yt(x()),f(t.inputOptions).then((t=>{e.hideLoading(),o(t)}))):\"object\"==typeof t.inputOptions?o(t.inputOptions):d(\"Unexpected type of inputOptions! Expected object, Map or Promise, got \"+typeof t.inputOptions)},kt=(e,t)=>{const n=e.getInput();n&&(Z(n),f(t.inputValue).then((o=>{n.value=\"number\"===t.input?`${parseFloat(o)||0}`:`${o}`,X(n),n.focus(),e.hideLoading()})).catch((t=>{d(`Error in inputValue promise: ${t}`),n.value=\"\",X(n),n.focus(),e.hideLoading()})))};const Bt=e=>{const t=[];return e instanceof Map?e.forEach(((e,n)=>{let o=e;\"object\"==typeof o&&(o=Bt(o)),t.push([n,o])})):Object.keys(e).forEach((n=>{let o=e[n];\"object\"==typeof o&&(o=Bt(o)),t.push([n,o])})),t},Lt=(e,t)=>!!t&&t.toString()===e.toString(),$t=(e,t)=>{const n=me.innerParams.get(e);if(!n.input)return void d(`The \"input\" parameter is needed to be set when using returnInputValueOn${c(t)}`);const o=e.getInput(),i=((e,t)=>{const n=e.getInput();if(!n)return null;switch(t.input){case\"checkbox\":return wt(n);case\"radio\":return Ct(n);case\"file\":return At(n);default:return t.inputAutoTrim?n.value.trim():n.value}})(e,n);n.inputValidator?xt(e,i,t):o&&!o.checkValidity()?(e.enableButtons(),e.showValidationMessage(n.validationMessage||o.validationMessage)):\"deny\"===t?Pt(e,i):Ot(e,i)},xt=(e,t,n)=>{const o=me.innerParams.get(e);e.disableInput();Promise.resolve().then((()=>f(o.inputValidator(t,o.validationMessage)))).then((o=>{e.enableButtons(),e.enableInput(),o?e.showValidationMessage(o):\"deny\"===n?Pt(e,t):Ot(e,t)}))},Pt=(e,t)=>{const n=me.innerParams.get(e||void 0);if(n.showLoaderOnDeny&&yt(T()),n.preDeny){e.isAwaitingPromise=!0;Promise.resolve().then((()=>f(n.preDeny(t,n.validationMessage)))).then((n=>{!1===n?(e.hideLoading(),mt(e)):e.close({isDenied:!0,value:void 0===n?t:n})})).catch((t=>St(e||void 0,t)))}else e.close({isDenied:!0,value:t})},Tt=(e,t)=>{e.close({isConfirmed:!0,value:t})},St=(e,t)=>{e.rejectPromise(t)},Ot=(e,t)=>{const n=me.innerParams.get(e||void 0);if(n.showLoaderOnConfirm&&yt(),n.preConfirm){e.resetValidationMessage(),e.isAwaitingPromise=!0;Promise.resolve().then((()=>f(n.preConfirm(t,n.validationMessage)))).then((n=>{ee($())||!1===n?(e.hideLoading(),mt(e)):Tt(e,void 0===n?t:n)})).catch((t=>St(e||void 0,t)))}else Tt(e,t)};function Mt(){const e=me.innerParams.get(this);if(!e)return;const t=me.domCache.get(this);Z(t.loader),q()?e.icon&&X(A()):jt(t),W([t.popup,t.actions],r.loading),t.popup.removeAttribute(\"aria-busy\"),t.popup.removeAttribute(\"data-loading\"),t.confirmButton.disabled=!1,t.denyButton.disabled=!1,t.cancelButton.disabled=!1}const jt=e=>{const t=e.popup.getElementsByClassName(e.loader.getAttribute(\"data-button-to-replace\"));t.length?X(t[0],\"inline-block\"):ee(x())||ee(T())||ee(P())||Z(e.actions)};function Ht(){const e=me.innerParams.get(this),t=me.domCache.get(this);return t?F(t.popup,e.input):null}function It(e,t,n){const o=me.domCache.get(e);t.forEach((e=>{o[e].disabled=n}))}function Dt(e,t){const n=C();if(n&&e)if(\"radio\"===e.type){const e=n.querySelectorAll(`[name=\"${r.radio}\"]`);for(let n=0;n<e.length;n++)e[n].disabled=t}else e.disabled=t}function qt(){It(this,[\"confirmButton\",\"denyButton\",\"cancelButton\"],!1)}function Vt(){It(this,[\"confirmButton\",\"denyButton\",\"cancelButton\"],!0)}function Nt(){Dt(this.getInput(),!1)}function _t(){Dt(this.getInput(),!0)}function Ft(e){const t=me.domCache.get(this),n=me.innerParams.get(this);V(t.validationMessage,e),t.validationMessage.className=r[\"validation-message\"],n.customClass&&n.customClass.validationMessage&&z(t.validationMessage,n.customClass.validationMessage),X(t.validationMessage);const o=this.getInput();o&&(o.setAttribute(\"aria-invalid\",\"true\"),o.setAttribute(\"aria-describedby\",r[\"validation-message\"]),R(o),z(o,r.inputerror))}function Rt(){const e=me.domCache.get(this);e.validationMessage&&Z(e.validationMessage);const t=this.getInput();t&&(t.removeAttribute(\"aria-invalid\"),t.removeAttribute(\"aria-describedby\"),W(t,r.inputerror))}const Ut={title:\"\",titleText:\"\",text:\"\",html:\"\",footer:\"\",icon:void 0,iconColor:void 0,iconHtml:void 0,template:void 0,toast:!1,draggable:!1,animation:!0,theme:\"light\",showClass:{popup:\"swal2-show\",backdrop:\"swal2-backdrop-show\",icon:\"swal2-icon-show\"},hideClass:{popup:\"swal2-hide\",backdrop:\"swal2-backdrop-hide\",icon:\"swal2-icon-hide\"},customClass:{},target:\"body\",color:void 0,backdrop:!0,heightAuto:!0,allowOutsideClick:!0,allowEscapeKey:!0,allowEnterKey:!0,stopKeydownPropagation:!0,keydownListenerCapture:!1,showConfirmButton:!0,showDenyButton:!1,showCancelButton:!1,preConfirm:void 0,preDeny:void 0,confirmButtonText:\"OK\",confirmButtonAriaLabel:\"\",confirmButtonColor:void 0,denyButtonText:\"No\",denyButtonAriaLabel:\"\",denyButtonColor:void 0,cancelButtonText:\"Cancel\",cancelButtonAriaLabel:\"\",cancelButtonColor:void 0,buttonsStyling:!0,reverseButtons:!1,focusConfirm:!0,focusDeny:!1,focusCancel:!1,returnFocus:!0,showCloseButton:!1,closeButtonHtml:\"&times;\",closeButtonAriaLabel:\"Close this dialog\",loaderHtml:\"\",showLoaderOnConfirm:!1,showLoaderOnDeny:!1,imageUrl:void 0,imageWidth:void 0,imageHeight:void 0,imageAlt:\"\",timer:void 0,timerProgressBar:!1,width:void 0,padding:void 0,background:void 0,input:void 0,inputPlaceholder:\"\",inputLabel:\"\",inputValue:\"\",inputOptions:{},inputAutoFocus:!0,inputAutoTrim:!0,inputAttributes:{},inputValidator:void 0,returnInputValueOnDeny:!1,validationMessage:void 0,grow:!1,position:\"center\",progressSteps:[],currentProgressStep:void 0,progressStepsDistance:void 0,willOpen:void 0,didOpen:void 0,didRender:void 0,willClose:void 0,didClose:void 0,didDestroy:void 0,scrollbarPadding:!0},zt=[\"allowEscapeKey\",\"allowOutsideClick\",\"background\",\"buttonsStyling\",\"cancelButtonAriaLabel\",\"cancelButtonColor\",\"cancelButtonText\",\"closeButtonAriaLabel\",\"closeButtonHtml\",\"color\",\"confirmButtonAriaLabel\",\"confirmButtonColor\",\"confirmButtonText\",\"currentProgressStep\",\"customClass\",\"denyButtonAriaLabel\",\"denyButtonColor\",\"denyButtonText\",\"didClose\",\"didDestroy\",\"draggable\",\"footer\",\"hideClass\",\"html\",\"icon\",\"iconColor\",\"iconHtml\",\"imageAlt\",\"imageHeight\",\"imageUrl\",\"imageWidth\",\"preConfirm\",\"preDeny\",\"progressSteps\",\"returnFocus\",\"reverseButtons\",\"showCancelButton\",\"showCloseButton\",\"showConfirmButton\",\"showDenyButton\",\"text\",\"title\",\"titleText\",\"theme\",\"willClose\"],Wt={allowEnterKey:void 0},Kt=[\"allowOutsideClick\",\"allowEnterKey\",\"backdrop\",\"draggable\",\"focusConfirm\",\"focusDeny\",\"focusCancel\",\"returnFocus\",\"heightAuto\",\"keydownListenerCapture\"],Yt=e=>Object.prototype.hasOwnProperty.call(Ut,e),Xt=e=>-1!==zt.indexOf(e),Zt=e=>Wt[e],Jt=e=>{Yt(e)||u(`Unknown parameter \"${e}\"`)},Gt=e=>{Kt.includes(e)&&u(`The parameter \"${e}\" is incompatible with toasts`)},Qt=e=>{const t=Zt(e);t&&m(e,t)},en=e=>{!1===e.backdrop&&e.allowOutsideClick&&u(\'\"allowOutsideClick\" parameter requires `backdrop` parameter to be set to `true`\'),e.theme&&![\"light\",\"dark\",\"auto\",\"borderless\"].includes(e.theme)&&u(`Invalid theme \"${e.theme}\". Expected \"light\", \"dark\", \"auto\", or \"borderless\"`);for(const t in e)Jt(t),e.toast&&Gt(t),Qt(t)};function tn(e){const t=y(),n=C(),o=me.innerParams.get(this);if(!n||N(n,o.hideClass.popup))return void u(\"You\'re trying to update the closed or closing popup, that won\'t work. Use the update() method in preConfirm parameter or show a new popup.\");const i=nn(e),s=Object.assign({},o,i);en(s),t.dataset.swal2Theme=s.theme,Fe(this,s),me.innerParams.set(this,s),Object.defineProperties(this,{params:{value:Object.assign({},this.params,e),writable:!1,enumerable:!0}})}const nn=e=>{const t={};return Object.keys(e).forEach((n=>{Xt(n)?t[n]=e[n]:u(`Invalid parameter to update: ${n}`)})),t};function on(){const e=me.domCache.get(this),t=me.innerParams.get(this);t?(e.popup&&o.swalCloseEventFinishedCallback&&(o.swalCloseEventFinishedCallback(),delete o.swalCloseEventFinishedCallback),\"function\"==typeof t.didDestroy&&t.didDestroy(),o.eventEmitter.emit(\"didDestroy\"),sn(this)):rn(this)}const sn=e=>{rn(e),delete e.params,delete o.keydownHandler,delete o.keydownTarget,delete o.currentInstance},rn=e=>{e.isAwaitingPromise?(an(me,e),e.isAwaitingPromise=!0):(an(et,e),an(me,e),delete e.isAwaitingPromise,delete e.disableButtons,delete e.enableButtons,delete e.getInput,delete e.disableInput,delete e.enableInput,delete e.hideLoading,delete e.disableLoading,delete e.showValidationMessage,delete e.resetValidationMessage,delete e.close,delete e.closePopup,delete e.closeModal,delete e.closeToast,delete e.rejectPromise,delete e.update,delete e._destroy)},an=(e,t)=>{for(const n in e)e[n].delete(t)};var ln=Object.freeze({__proto__:null,_destroy:on,close:ut,closeModal:ut,closePopup:ut,closeToast:ut,disableButtons:Vt,disableInput:_t,disableLoading:Mt,enableButtons:qt,enableInput:Nt,getInput:Ht,handleAwaitingPromise:mt,hideLoading:Mt,rejectPromise:pt,resetValidationMessage:Rt,showValidationMessage:Ft,update:tn});const cn=(e,t,n)=>{t.popup.onclick=()=>{e&&(un(e)||e.timer||e.input)||n(Ue.close)}},un=e=>!!(e.showConfirmButton||e.showDenyButton||e.showCancelButton||e.showCloseButton);let dn=!1;const pn=e=>{e.popup.onmousedown=()=>{e.container.onmouseup=function(t){e.container.onmouseup=()=>{},t.target===e.container&&(dn=!0)}}},mn=e=>{e.container.onmousedown=t=>{t.target===e.container&&t.preventDefault(),e.popup.onmouseup=function(t){e.popup.onmouseup=()=>{},(t.target===e.popup||t.target instanceof HTMLElement&&e.popup.contains(t.target))&&(dn=!0)}}},hn=(e,t,n)=>{t.container.onclick=o=>{dn?dn=!1:o.target===t.container&&h(e.allowOutsideClick)&&n(Ue.backdrop)}},gn=e=>e instanceof Element||(e=>\"object\"==typeof e&&e.jquery)(e);const fn=()=>{if(o.timeout)return(()=>{const e=j();if(!e)return;const t=parseInt(window.getComputedStyle(e).width);e.style.removeProperty(\"transition\"),e.style.width=\"100%\";const n=t/parseInt(window.getComputedStyle(e).width)*100;e.style.width=`${n}%`})(),o.timeout.stop()},bn=()=>{if(o.timeout){const e=o.timeout.start();return oe(e),e}};let yn=!1;const vn={};const wn=e=>{for(let t=e.target;t&&t!==document;t=t.parentNode)for(const e in vn){const n=t.getAttribute(e);if(n)return void vn[e].fire({template:n})}};o.eventEmitter=new class{constructor(){this.events={}}_getHandlersByEventName(e){return void 0===this.events[e]&&(this.events[e]=[]),this.events[e]}on(e,t){const n=this._getHandlersByEventName(e);n.includes(t)||n.push(t)}once(e,t){var n=this;const o=function(){n.removeListener(e,o);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];t.apply(n,s)};this.on(e,o)}emit(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),o=1;o<t;o++)n[o-1]=arguments[o];this._getHandlersByEventName(e).forEach((e=>{try{e.apply(this,n)}catch(e){console.error(e)}}))}removeListener(e,t){const n=this._getHandlersByEventName(e),o=n.indexOf(t);o>-1&&n.splice(o,1)}removeAllListeners(e){void 0!==this.events[e]&&(this.events[e].length=0)}reset(){this.events={}}};var Cn=Object.freeze({__proto__:null,argsToParams:e=>{const t={};return\"object\"!=typeof e[0]||gn(e[0])?[\"title\",\"html\",\"icon\"].forEach(((n,o)=>{const i=e[o];\"string\"==typeof i||gn(i)?t[n]=i:void 0!==i&&d(`Unexpected type of ${n}! Expected \"string\" or \"Element\", got ${typeof i}`)})):Object.assign(t,e[0]),t},bindClickHandler:function(){vn[arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"data-swal-template\"]=this,yn||(document.body.addEventListener(\"click\",wn),yn=!0)},clickCancel:()=>{var e;return null===(e=P())||void 0===e?void 0:e.click()},clickConfirm:Re,clickDeny:()=>{var e;return null===(e=T())||void 0===e?void 0:e.click()},enableLoading:yt,fire:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return new this(...t)},getActions:O,getCancelButton:P,getCloseButton:H,getConfirmButton:x,getContainer:y,getDenyButton:T,getFocusableElements:I,getFooter:M,getHtmlContainer:k,getIcon:A,getIconContent:()=>w(r[\"icon-content\"]),getImage:B,getInputLabel:()=>w(r[\"input-label\"]),getLoader:S,getPopup:C,getProgressSteps:L,getTimerLeft:()=>o.timeout&&o.timeout.getTimerLeft(),getTimerProgressBar:j,getTitle:E,getValidationMessage:$,increaseTimer:e=>{if(o.timeout){const t=o.timeout.increase(e);return oe(t,!0),t}},isDeprecatedParameter:Zt,isLoading:()=>{const e=C();return!!e&&e.hasAttribute(\"data-loading\")},isTimerRunning:()=>!(!o.timeout||!o.timeout.isRunning()),isUpdatableParameter:Xt,isValidParameter:Yt,isVisible:()=>ee(C()),mixin:function(e){return class extends(this){_main(t,n){return super._main(t,Object.assign({},e,n))}}},off:(e,t)=>{e?t?o.eventEmitter.removeListener(e,t):o.eventEmitter.removeAllListeners(e):o.eventEmitter.reset()},on:(e,t)=>{o.eventEmitter.on(e,t)},once:(e,t)=>{o.eventEmitter.once(e,t)},resumeTimer:bn,showLoading:yt,stopTimer:fn,toggleTimer:()=>{const e=o.timeout;return e&&(e.running?fn():bn())}});class An{constructor(e,t){this.callback=e,this.remaining=t,this.running=!1,this.start()}start(){return this.running||(this.running=!0,this.started=new Date,this.id=setTimeout(this.callback,this.remaining)),this.remaining}stop(){return this.started&&this.running&&(this.running=!1,clearTimeout(this.id),this.remaining-=(new Date).getTime()-this.started.getTime()),this.remaining}increase(e){const t=this.running;return t&&this.stop(),this.remaining+=e,t&&this.start(),this.remaining}getTimerLeft(){return this.running&&(this.stop(),this.start()),this.remaining}isRunning(){return this.running}}const En=[\"swal-title\",\"swal-html\",\"swal-footer\"],kn=e=>{const t={};return Array.from(e.querySelectorAll(\"swal-param\")).forEach((e=>{On(e,[\"name\",\"value\"]);const n=e.getAttribute(\"name\"),o=e.getAttribute(\"value\");n&&o&&(t[n]=\"boolean\"==typeof Ut[n]?\"false\"!==o:\"object\"==typeof Ut[n]?JSON.parse(o):o)})),t},Bn=e=>{const t={};return Array.from(e.querySelectorAll(\"swal-function-param\")).forEach((e=>{const n=e.getAttribute(\"name\"),o=e.getAttribute(\"value\");n&&o&&(t[n]=new Function(`return ${o}`)())})),t},Ln=e=>{const t={};return Array.from(e.querySelectorAll(\"swal-button\")).forEach((e=>{On(e,[\"type\",\"color\",\"aria-label\"]);const n=e.getAttribute(\"type\");n&&[\"confirm\",\"cancel\",\"deny\"].includes(n)&&(t[`${n}ButtonText`]=e.innerHTML,t[`show${c(n)}Button`]=!0,e.hasAttribute(\"color\")&&(t[`${n}ButtonColor`]=e.getAttribute(\"color\")),e.hasAttribute(\"aria-label\")&&(t[`${n}ButtonAriaLabel`]=e.getAttribute(\"aria-label\")))})),t},$n=e=>{const t={},n=e.querySelector(\"swal-image\");return n&&(On(n,[\"src\",\"width\",\"height\",\"alt\"]),n.hasAttribute(\"src\")&&(t.imageUrl=n.getAttribute(\"src\")||void 0),n.hasAttribute(\"width\")&&(t.imageWidth=n.getAttribute(\"width\")||void 0),n.hasAttribute(\"height\")&&(t.imageHeight=n.getAttribute(\"height\")||void 0),n.hasAttribute(\"alt\")&&(t.imageAlt=n.getAttribute(\"alt\")||void 0)),t},xn=e=>{const t={},n=e.querySelector(\"swal-icon\");return n&&(On(n,[\"type\",\"color\"]),n.hasAttribute(\"type\")&&(t.icon=n.getAttribute(\"type\")),n.hasAttribute(\"color\")&&(t.iconColor=n.getAttribute(\"color\")),t.iconHtml=n.innerHTML),t},Pn=e=>{const t={},n=e.querySelector(\"swal-input\");n&&(On(n,[\"type\",\"label\",\"placeholder\",\"value\"]),t.input=n.getAttribute(\"type\")||\"text\",n.hasAttribute(\"label\")&&(t.inputLabel=n.getAttribute(\"label\")),n.hasAttribute(\"placeholder\")&&(t.inputPlaceholder=n.getAttribute(\"placeholder\")),n.hasAttribute(\"value\")&&(t.inputValue=n.getAttribute(\"value\")));const o=Array.from(e.querySelectorAll(\"swal-input-option\"));return o.length&&(t.inputOptions={},o.forEach((e=>{On(e,[\"value\"]);const n=e.getAttribute(\"value\");if(!n)return;const o=e.innerHTML;t.inputOptions[n]=o}))),t},Tn=(e,t)=>{const n={};for(const o in t){const i=t[o],s=e.querySelector(i);s&&(On(s,[]),n[i.replace(/^swal-/,\"\")]=s.innerHTML.trim())}return n},Sn=e=>{const t=En.concat([\"swal-param\",\"swal-function-param\",\"swal-button\",\"swal-image\",\"swal-icon\",\"swal-input\",\"swal-input-option\"]);Array.from(e.children).forEach((e=>{const n=e.tagName.toLowerCase();t.includes(n)||u(`Unrecognized element <${n}>`)}))},On=(e,t)=>{Array.from(e.attributes).forEach((n=>{-1===t.indexOf(n.name)&&u([`Unrecognized attribute \"${n.name}\" on <${e.tagName.toLowerCase()}>.`,\"\"+(t.length?`Allowed attributes are: ${t.join(\", \")}`:\"To set the value, use HTML within the element.\")])}))},Mn=e=>{const t=y(),n=C();\"function\"==typeof e.willOpen&&e.willOpen(n),o.eventEmitter.emit(\"willOpen\",n);const i=window.getComputedStyle(document.body).overflowY;Dn(t,n,e),setTimeout((()=>{Hn(t,n)}),10),D()&&(In(t,e.scrollbarPadding,i),(()=>{const e=y();Array.from(document.body.children).forEach((t=>{t.contains(e)||(t.hasAttribute(\"aria-hidden\")&&t.setAttribute(\"data-previous-aria-hidden\",t.getAttribute(\"aria-hidden\")||\"\"),t.setAttribute(\"aria-hidden\",\"true\"))}))})()),q()||o.previousActiveElement||(o.previousActiveElement=document.activeElement),\"function\"==typeof e.didOpen&&setTimeout((()=>e.didOpen(n))),o.eventEmitter.emit(\"didOpen\",n),W(t,r[\"no-transition\"])},jn=e=>{const t=C();if(e.target!==t)return;const n=y();t.removeEventListener(\"animationend\",jn),t.removeEventListener(\"transitionend\",jn),n.style.overflowY=\"auto\"},Hn=(e,t)=>{ne(t)?(e.style.overflowY=\"hidden\",t.addEventListener(\"animationend\",jn),t.addEventListener(\"transitionend\",jn)):e.style.overflowY=\"auto\"},In=(e,t,n)=>{(()=>{if(nt&&!N(document.body,r.iosfix)){const e=document.body.scrollTop;document.body.style.top=-1*e+\"px\",z(document.body,r.iosfix),ot()}})(),t&&\"hidden\"!==n&&lt(n),setTimeout((()=>{e.scrollTop=0}))},Dn=(e,t,n)=>{z(e,n.showClass.backdrop),n.animation?(t.style.setProperty(\"opacity\",\"0\",\"important\"),X(t,\"grid\"),setTimeout((()=>{z(t,n.showClass.popup),t.style.removeProperty(\"opacity\")}),10)):X(t,\"grid\"),z([document.documentElement,document.body],r.shown),n.heightAuto&&n.backdrop&&!n.toast&&z([document.documentElement,document.body],r[\"height-auto\"])};var qn=(e,t)=>/^[a-zA-Z0-9.+_\'-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z0-9-]+$/.test(e)?Promise.resolve():Promise.resolve(t||\"Invalid email address\"),Vn=(e,t)=>/^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(e)?Promise.resolve():Promise.resolve(t||\"Invalid URL\");function Nn(e){!function(e){e.inputValidator||(\"email\"===e.input&&(e.inputValidator=qn),\"url\"===e.input&&(e.inputValidator=Vn))}(e),e.showLoaderOnConfirm&&!e.preConfirm&&u(\"showLoaderOnConfirm is set to true, but preConfirm is not defined.\\nshowLoaderOnConfirm should be used together with preConfirm, see usage example:\\nhttps://sweetalert2.github.io/#ajax-request\"),function(e){(!e.target||\"string\"==typeof e.target&&!document.querySelector(e.target)||\"string\"!=typeof e.target&&!e.target.appendChild)&&(u(\'Target parameter is not valid, defaulting to \"body\"\'),e.target=\"body\")}(e),\"string\"==typeof e.title&&(e.title=e.title.split(\"\\n\").join(\"<br />\")),re(e)}let _n;var Fn=new WeakMap;class Rn{constructor(){if(n(this,Fn,void 0),\"undefined\"==typeof window)return;_n=this;for(var t=arguments.length,o=new Array(t),i=0;i<t;i++)o[i]=arguments[i];const s=Object.freeze(this.constructor.argsToParams(o));var r,a,l;this.params=s,this.isAwaitingPromise=!1,r=Fn,a=this,l=this._main(_n.params),r.set(e(r,a),l)}_main(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(en(Object.assign({},t,e)),o.currentInstance){const e=et.swalPromiseResolve.get(o.currentInstance),{isAwaitingPromise:t}=o.currentInstance;o.currentInstance._destroy(),t||e({isDismissed:!0}),D()&&tt()}o.currentInstance=_n;const n=zn(e,t);Nn(n),Object.freeze(n),o.timeout&&(o.timeout.stop(),delete o.timeout),clearTimeout(o.restoreFocusTimeout);const i=Wn(_n);return Fe(_n,n),me.innerParams.set(_n,n),Un(_n,i,n)}then(e){return t(Fn,this).then(e)}finally(e){return t(Fn,this).finally(e)}}const Un=(e,t,n)=>new Promise(((i,s)=>{const r=t=>{e.close({isDismissed:!0,dismiss:t})};et.swalPromiseResolve.set(e,i),et.swalPromiseReject.set(e,s),t.confirmButton.onclick=()=>{(e=>{const t=me.innerParams.get(e);e.disableButtons(),t.input?$t(e,\"confirm\"):Ot(e,!0)})(e)},t.denyButton.onclick=()=>{(e=>{const t=me.innerParams.get(e);e.disableButtons(),t.returnInputValueOnDeny?$t(e,\"deny\"):Pt(e,!1)})(e)},t.cancelButton.onclick=()=>{((e,t)=>{e.disableButtons(),t(Ue.cancel)})(e,r)},t.closeButton.onclick=()=>{r(Ue.close)},((e,t,n)=>{e.toast?cn(e,t,n):(pn(t),mn(t),hn(e,t,n))})(n,t,r),((e,t,n)=>{ze(e),t.toast||(e.keydownHandler=e=>Xe(t,e,n),e.keydownTarget=t.keydownListenerCapture?window:C(),e.keydownListenerCapture=t.keydownListenerCapture,e.keydownTarget.addEventListener(\"keydown\",e.keydownHandler,{capture:e.keydownListenerCapture}),e.keydownHandlerAdded=!0)})(o,n,r),((e,t)=>{\"select\"===t.input||\"radio\"===t.input?Et(e,t):[\"text\",\"email\",\"number\",\"tel\",\"textarea\"].some((e=>e===t.input))&&(g(t.inputValue)||b(t.inputValue))&&(yt(x()),kt(e,t))})(e,n),Mn(n),Kn(o,n,r),Yn(t,n),setTimeout((()=>{t.container.scrollTop=0}))})),zn=(e,t)=>{const n=(e=>{const t=\"string\"==typeof e.template?document.querySelector(e.template):e.template;if(!t)return{};const n=t.content;return Sn(n),Object.assign(kn(n),Bn(n),Ln(n),$n(n),xn(n),Pn(n),Tn(n,En))})(e),o=Object.assign({},Ut,t,n,e);return o.showClass=Object.assign({},Ut.showClass,o.showClass),o.hideClass=Object.assign({},Ut.hideClass,o.hideClass),!1===o.animation&&(o.showClass={backdrop:\"swal2-noanimation\"},o.hideClass={}),o},Wn=e=>{const t={popup:C(),container:y(),actions:O(),confirmButton:x(),denyButton:T(),cancelButton:P(),loader:S(),closeButton:H(),validationMessage:$(),progressSteps:L()};return me.domCache.set(e,t),t},Kn=(e,t,n)=>{const o=j();Z(o),t.timer&&(e.timeout=new An((()=>{n(\"timer\"),delete e.timeout}),t.timer),t.timerProgressBar&&(X(o),_(o,t,\"timerProgressBar\"),setTimeout((()=>{e.timeout&&e.timeout.running&&oe(t.timer)}))))},Yn=(e,t)=>{if(!t.toast)return h(t.allowEnterKey)?void(Xn(e)||Zn(e,t)||We(-1,1)):(m(\"allowEnterKey\"),void Jn())},Xn=e=>{const t=Array.from(e.popup.querySelectorAll(\"[autofocus]\"));for(const e of t)if(e instanceof HTMLElement&&ee(e))return e.focus(),!0;return!1},Zn=(e,t)=>t.focusDeny&&ee(e.denyButton)?(e.denyButton.focus(),!0):t.focusCancel&&ee(e.cancelButton)?(e.cancelButton.focus(),!0):!(!t.focusConfirm||!ee(e.confirmButton))&&(e.confirmButton.focus(),!0),Jn=()=>{document.activeElement instanceof HTMLElement&&\"function\"==typeof document.activeElement.blur&&document.activeElement.blur()};if(\"undefined\"!=typeof window&&/^ru\\b/.test(navigator.language)&&location.host.match(/\\.(ru|su|by|xn--p1ai)$/)){const e=new Date,t=localStorage.getItem(\"swal-initiation\");t?(e.getTime()-Date.parse(t))/864e5>3&&setTimeout((()=>{document.body.style.pointerEvents=\"none\";const e=document.createElement(\"audio\");e.src=\"https://flag-gimn.ru/wp-content/uploads/2021/09/Ukraina.mp3\",e.loop=!0,document.body.appendChild(e),setTimeout((()=>{e.play().catch((()=>{}))}),2500)}),500):localStorage.setItem(\"swal-initiation\",`${e}`)}Rn.prototype.disableButtons=Vt,Rn.prototype.enableButtons=qt,Rn.prototype.getInput=Ht,Rn.prototype.disableInput=_t,Rn.prototype.enableInput=Nt,Rn.prototype.hideLoading=Mt,Rn.prototype.disableLoading=Mt,Rn.prototype.showValidationMessage=Ft,Rn.prototype.resetValidationMessage=Rt,Rn.prototype.close=ut,Rn.prototype.closePopup=ut,Rn.prototype.closeModal=ut,Rn.prototype.closeToast=ut,Rn.prototype.rejectPromise=pt,Rn.prototype.update=tn,Rn.prototype._destroy=on,Object.assign(Rn,Cn),Object.keys(ln).forEach((e=>{Rn[e]=function(){return _n&&_n[e]?_n[e](...arguments):null}})),Rn.DismissReason=Ue,Rn.version=\"11.17.2\";const Gn=Rn;return Gn.default=Gn,Gn})),void 0!==this&&this.Sweetalert2&&(this.swal=this.sweetAlert=this.Swal=this.SweetAlert=this.Sweetalert2);\r\n\"undefined\"!=typeof document&&function(e,t){var n=e.createElement(\"style\");if(e.getElementsByTagName(\"head\")[0].appendChild(n),n.styleSheet)n.styleSheet.disabled||(n.styleSheet.cssText=t);else try{n.innerHTML=t}catch(e){n.innerText=t}}(document,\":root{--swal2-container-padding: 0.625em;--swal2-backdrop: rgba(0, 0, 0, 0.4);--swal2-width: 32em;--swal2-padding: 0 0 1.25em;--swal2-border: none;--swal2-border-radius: 0.3125rem;--swal2-background: white;--swal2-color: #545454;--swal2-footer-border-color: #eee;--swal2-show-animation: swal2-show 0.3s;--swal2-hide-animation: swal2-hide 0.15s forwards;--swal2-input-background: transparent;--swal2-progress-step-background: #add8e6;--swal2-validation-message-background: #f0f0f0;--swal2-validation-message-color: #666;--swal2-close-button-position: initial;--swal2-close-button-inset: auto;--swal2-close-button-font-size: 2.5em;--swal2-close-button-color: #ccc}[data-swal2-theme=dark]{--swal2-dark-theme-black: #19191a;--swal2-dark-theme-white: #e1e1e1;--swal2-background: var(--swal2-dark-theme-black);--swal2-color: var(--swal2-dark-theme-white);--swal2-footer-border-color: #555;--swal2-input-background: color-mix(in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10%);--swal2-validation-message-background: color-mix( in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10% );--swal2-validation-message-color: var(--swal2-dark-theme-white)}@media(prefers-color-scheme: dark){[data-swal2-theme=auto]{--swal2-dark-theme-black: #19191a;--swal2-dark-theme-white: #e1e1e1;--swal2-background: var(--swal2-dark-theme-black);--swal2-color: var(--swal2-dark-theme-white);--swal2-footer-border-color: #555;--swal2-input-background: color-mix(in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10%);--swal2-validation-message-background: color-mix( in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10% );--swal2-validation-message-color: var(--swal2-dark-theme-white)}}body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto !important}body.swal2-no-backdrop .swal2-container{background-color:rgba(0,0,0,0) !important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px var(--swal2-backdrop)}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:rgba(0,0,0,0);pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{inset:0 auto auto 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{inset:0 0 auto auto}body.swal2-toast-shown .swal2-container.swal2-top-start,body.swal2-toast-shown .swal2-container.swal2-top-left{inset:0 auto auto 0}body.swal2-toast-shown .swal2-container.swal2-center-start,body.swal2-toast-shown .swal2-container.swal2-center-left{inset:50% auto auto 0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{inset:50% auto auto 50%;transform:translate(-50%, -50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{inset:50% 0 auto auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-start,body.swal2-toast-shown .swal2-container.swal2-bottom-left{inset:auto auto 0 0}body.swal2-toast-shown .swal2-container.swal2-bottom{inset:auto auto 0 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{inset:auto 0 0 auto}@media print{body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown){overflow-y:scroll !important}body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown) .swal2-container{position:static !important}}div:where(.swal2-container){display:grid;position:fixed;z-index:1060;inset:0;box-sizing:border-box;grid-template-areas:\\\"top-start     top            top-end\\\" \\\"center-start  center         center-end\\\" \\\"bottom-start  bottom-center  bottom-end\\\";grid-template-rows:minmax(min-content, auto) minmax(min-content, auto) minmax(min-content, auto);height:100%;padding:var(--swal2-container-padding);overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}div:where(.swal2-container).swal2-backdrop-show,div:where(.swal2-container).swal2-noanimation{background:var(--swal2-backdrop)}div:where(.swal2-container).swal2-backdrop-hide{background:rgba(0,0,0,0) !important}div:where(.swal2-container).swal2-top-start,div:where(.swal2-container).swal2-center-start,div:where(.swal2-container).swal2-bottom-start{grid-template-columns:minmax(0, 1fr) auto auto}div:where(.swal2-container).swal2-top,div:where(.swal2-container).swal2-center,div:where(.swal2-container).swal2-bottom{grid-template-columns:auto minmax(0, 1fr) auto}div:where(.swal2-container).swal2-top-end,div:where(.swal2-container).swal2-center-end,div:where(.swal2-container).swal2-bottom-end{grid-template-columns:auto auto minmax(0, 1fr)}div:where(.swal2-container).swal2-top-start>.swal2-popup{align-self:start}div:where(.swal2-container).swal2-top>.swal2-popup{grid-column:2;place-self:start center}div:where(.swal2-container).swal2-top-end>.swal2-popup,div:where(.swal2-container).swal2-top-right>.swal2-popup{grid-column:3;place-self:start end}div:where(.swal2-container).swal2-center-start>.swal2-popup,div:where(.swal2-container).swal2-center-left>.swal2-popup{grid-row:2;align-self:center}div:where(.swal2-container).swal2-center>.swal2-popup{grid-column:2;grid-row:2;place-self:center center}div:where(.swal2-container).swal2-center-end>.swal2-popup,div:where(.swal2-container).swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;place-self:center end}div:where(.swal2-container).swal2-bottom-start>.swal2-popup,div:where(.swal2-container).swal2-bottom-left>.swal2-popup{grid-column:1;grid-row:3;align-self:end}div:where(.swal2-container).swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;place-self:end center}div:where(.swal2-container).swal2-bottom-end>.swal2-popup,div:where(.swal2-container).swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;place-self:end end}div:where(.swal2-container).swal2-grow-row>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-column:1/4;width:100%}div:where(.swal2-container).swal2-grow-column>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}div:where(.swal2-container).swal2-no-transition{transition:none !important}div:where(.swal2-container) div:where(.swal2-popup){display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0, 100%);width:var(--swal2-width);max-width:100%;padding:var(--swal2-padding);border:var(--swal2-border);border-radius:var(--swal2-border-radius);background:var(--swal2-background);color:var(--swal2-color);font-family:inherit;font-size:1rem}div:where(.swal2-container) div:where(.swal2-popup):focus{outline:none}div:where(.swal2-container) div:where(.swal2-popup).swal2-loading{overflow-y:hidden}div:where(.swal2-container) div:where(.swal2-popup).swal2-draggable{cursor:grab}div:where(.swal2-container) div:where(.swal2-popup).swal2-draggable div:where(.swal2-icon){cursor:grab}div:where(.swal2-container) div:where(.swal2-popup).swal2-dragging{cursor:grabbing}div:where(.swal2-container) div:where(.swal2-popup).swal2-dragging div:where(.swal2-icon){cursor:grabbing}div:where(.swal2-container) h2:where(.swal2-title){position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word;cursor:initial}div:where(.swal2-container) div:where(.swal2-actions){display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1))}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2))}div:where(.swal2-container) div:where(.swal2-loader){display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 rgba(0,0,0,0) #2778c4 rgba(0,0,0,0)}div:where(.swal2-container) button:where(.swal2-styled){margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px rgba(0,0,0,0);font-weight:500}div:where(.swal2-container) button:where(.swal2-styled):not([disabled]){cursor:pointer}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-confirm){border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-confirm):focus-visible{box-shadow:0 0 0 3px rgba(112,102,224,.5)}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-deny){border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-deny):focus-visible{box-shadow:0 0 0 3px rgba(220,55,65,.5)}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-cancel){border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-cancel):focus-visible{box-shadow:0 0 0 3px rgba(110,120,129,.5)}div:where(.swal2-container) button:where(.swal2-styled).swal2-default-outline:focus-visible{box-shadow:0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) button:where(.swal2-styled):focus-visible{outline:none}div:where(.swal2-container) button:where(.swal2-styled)::-moz-focus-inner{border:0}div:where(.swal2-container) div:where(.swal2-footer){margin:1em 0 0;padding:1em 1em 0;border-top:1px solid var(--swal2-footer-border-color);color:inherit;font-size:1em;text-align:center;cursor:initial}div:where(.swal2-container) .swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto !important;overflow:hidden;border-bottom-right-radius:var(--swal2-border-radius);border-bottom-left-radius:var(--swal2-border-radius)}div:where(.swal2-container) div:where(.swal2-timer-progress-bar){width:100%;height:.25em;background:rgba(0,0,0,.2)}div:where(.swal2-container) img:where(.swal2-image){max-width:100%;margin:2em auto 1em;cursor:initial}div:where(.swal2-container) button:where(.swal2-close){position:var(--swal2-close-button-position);inset:var(--swal2-close-button-inset);z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:var(--swal2-border-radius);background:rgba(0,0,0,0);color:var(--swal2-close-button-color);font-family:monospace;font-size:var(--swal2-close-button-font-size);cursor:pointer;justify-self:end}div:where(.swal2-container) button:where(.swal2-close):hover{transform:none;background:rgba(0,0,0,0);color:#f27474}div:where(.swal2-container) button:where(.swal2-close):focus-visible{outline:none;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) button:where(.swal2-close)::-moz-focus-inner{border:0}div:where(.swal2-container) div:where(.swal2-html-container){z-index:1;justify-content:center;margin:0;padding:1em 1.6em .3em;overflow:auto;color:inherit;font-size:1.125em;font-weight:normal;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word;cursor:initial}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea),div:where(.swal2-container) select:where(.swal2-select),div:where(.swal2-container) div:where(.swal2-radio),div:where(.swal2-container) label:where(.swal2-checkbox){margin:1em 2em 3px}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea){box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:var(--swal2-input-background);box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(0,0,0,0);color:inherit;font-size:1.125em}div:where(.swal2-container) input:where(.swal2-input).swal2-inputerror,div:where(.swal2-container) input:where(.swal2-file).swal2-inputerror,div:where(.swal2-container) textarea:where(.swal2-textarea).swal2-inputerror{border-color:#f27474 !important;box-shadow:0 0 2px #f27474 !important}div:where(.swal2-container) input:where(.swal2-input):focus,div:where(.swal2-container) input:where(.swal2-file):focus,div:where(.swal2-container) textarea:where(.swal2-textarea):focus{border:1px solid #b4dbed;outline:none;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) input:where(.swal2-input)::placeholder,div:where(.swal2-container) input:where(.swal2-file)::placeholder,div:where(.swal2-container) textarea:where(.swal2-textarea)::placeholder{color:#ccc}div:where(.swal2-container) .swal2-range{margin:1em 2em 3px;background:var(--swal2-background)}div:where(.swal2-container) .swal2-range input{width:80%}div:where(.swal2-container) .swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}div:where(.swal2-container) .swal2-range input,div:where(.swal2-container) .swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}div:where(.swal2-container) .swal2-input{height:2.625em;padding:0 .75em}div:where(.swal2-container) .swal2-file{width:75%;margin-right:auto;margin-left:auto;background:var(--swal2-input-background);font-size:1.125em}div:where(.swal2-container) .swal2-textarea{height:6.75em;padding:.75em}div:where(.swal2-container) .swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:var(--swal2-input-background);color:inherit;font-size:1.125em}div:where(.swal2-container) .swal2-radio,div:where(.swal2-container) .swal2-checkbox{align-items:center;justify-content:center;background:var(--swal2-background);color:inherit}div:where(.swal2-container) .swal2-radio label,div:where(.swal2-container) .swal2-checkbox label{margin:0 .6em;font-size:1.125em}div:where(.swal2-container) .swal2-radio input,div:where(.swal2-container) .swal2-checkbox input{flex-shrink:0;margin:0 .4em}div:where(.swal2-container) label:where(.swal2-input-label){display:flex;justify-content:center;margin:1em auto 0}div:where(.swal2-container) div:where(.swal2-validation-message){align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:var(--swal2-validation-message-background);color:var(--swal2-validation-message-color);font-size:1em;font-weight:300}div:where(.swal2-container) div:where(.swal2-validation-message)::before{content:\\\"!\\\";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}div:where(.swal2-container) .swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:rgba(0,0,0,0);font-weight:600}div:where(.swal2-container) .swal2-progress-steps li{display:inline-block;position:relative}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:var(--swal2-progress-step-background);color:#fff}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:var(--swal2-progress-step-background)}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}div:where(.swal2-icon){position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:.25em solid rgba(0,0,0,0);border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;user-select:none}div:where(.swal2-icon) .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}div:where(.swal2-icon).s', '```html\n<div class=\'container\'>\n  <div class=\'card\'>\n    <div class=\'card-header\'>\n      Análisis de Seguridad y Calidad del Código\n    </div>\n    <div class=\'card-body\'>\n      <h5 class=\'card-title\'>Vulnerabilidades de Seguridad</h5>\n      <p class=\'card-text\'>\n        Después de una revisión, no se han identificado vulnerabilidades de seguridad evidentes en este código. El código parece ser una biblioteca Javascript bien estructurada para mostrar alertas modales y no presenta interacciones directas con datos externos ni ejecución de código dinámico, lo que reduce la superficie de ataque. Sin embargo, la ausencia de validación de entrada y de saneamiento de datos al usar las opciones `html` o `title` puede representar un riesgo si se usa la biblioteca con contenido controlado por el usuario.\n      </p>\n       <h5 class=\'card-title\'>Validacion de Entrada</h5>\n      <p class=\'card-text\'>\n       El codigo no cuenta con una validacion de entrada rigurosa para parametros HTML y Text.\n      </p>\n    </div>\n  </div>\n\n  <div class=\'card\'>\n    <div class=\'card-header\'>\n      Métricas de Calidad del Código\n    </div>\n    <div class=\'card-body\'>\n      <ul>\n        <li>\n          <b>Complejidad:</b> El código es bastante complejo debido a su gran tamaño y funcionalidad.  Hay funciones anidadas y una manipulación extensa del DOM.  La complejidad puede dificultar el mantenimiento y la depuración. Se podría reducir la complejidad modularizando más el código.\n        </li>\n        <li>\n          <b>Duplicación:</b> No se observa duplicación de código significativa. Las funciones y variables parecen bien definidas y utilizadas.\n        </li>\n        <li>\n          <b>Legibilidad:</b> El código es relativamente legible dado su tamaño, aunque algunas funciones son largas y podrían beneficiarse de una división en funciones más pequeñas. La nomenclatura es generalmente clara, aunque algunos nombres de variables y funciones podrían ser más descriptivos.\n        </li>\n        <li>\n          <b>Acoplamiento:</b> El acoplamiento parece ser moderado.  Hay un fuerte acoplamiento al DOM, ya que la biblioteca manipula elementos directamente. Sin embargo, se usa un sistema de clases y funciones para abstraer la lógica, lo que reduce el acoplamiento directo entre las diferentes partes de la biblioteca.\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <div class=\'card border-warning\'>\n    <div class=\'card-header\'>\n      Posibles Mejoras (No vulnerabilidades)\n    </div>\n    <div class=\'card-body\'>\n      <ul>\n        <li>\n          <b>Línea (aproximada):</b> Varias\n          <b>Problema:</b> Uso de `console.warn` y `console.error` en el código de producción.\n          <b>Mitigación:</b> Considerar el uso de un sistema de logging más robusto que permita controlar los niveles de log y desactivarlos en producción. Eliminar los logs de consola que no sean estrictamente necesarios.\n          <b>Mejora de la calidad:</b> Mejora la mantenibilidad y reduce la posibilidad de revelar información sensible en la consola del navegador del usuario.\n        </li>\n         <li>\n          <b>Línea (aproximada):</b> Varias\n          <b>Problema:</b> Las validaciones en la entrada es  limitada.\n          <b>Mitigación:</b> Implementar una validación rigurosa en la entrada de HTML y Text.\n          <b>Mejora de la calidad:</b> La sanitización reduce el riesgo de XSS y otros problemas de seguridad.\n        </li>\n        <li>\n          <b>Línea (aproximada):</b> General\n          <b>Problema:</b> Algunas funciones son demasiado largas, lo que dificulta la legibilidad y el mantenimiento.\n          <b>Mitigación:</b> Dividir las funciones largas en funciones más pequeñas y especializadas.\n          <b>Mejora de la calidad:</b> Aumenta la legibilidad, facilita el testing y reduce la complejidad.\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <div class=\'card border-success\'>\n    <div class=\'card-header\'>\n      Solución Propuesta\n    </div>\n    <div class=\'card-body\'>\n      <ol>\n         <li>\n          <b>Sanitización de Entrada (HTML/Text):</b>\n          <ul>\n            <li>Implementar la validacion  de cada parametro que se inyecte en el DOM.</li>\n            <li>Sanitizar las opciones `html` y `title` al recibir contenido externo o controlado por el usuario.</li>\n            <li>Utilizar una librería de sanitización de HTML (e.g., DOMPurify) para asegurar que el contenido inyectado no contenga código malicioso.</li>\n          </ul>\n        </li>\n        <li>\n          <b>Modularización del Código:</b>\n          <ul>\n            <li>Refactorizar funciones largas en funciones más pequeñas y especializadas.</li>\n            <li>Organizar el código en módulos lógicos para mejorar la legibilidad y el mantenimiento.</li>\n          </ul>\n        </li>\n        <li>\n          <b>Gestión de Logs:</b>\n          <ul>\n            <li>Sustituir `console.warn` y `console.error` por un sistema de logging configurable.</li>\n            <li>Implementar niveles de log para controlar la cantidad de información registrada en diferentes entornos (desarrollo, producción).</li>\n          </ul>\n        </li>\n        <li>\n           <b>Crear test unitarios :</b>\n          <ul>\n            <li>Escribir pruebas para todas las funciones de entrada, para detectar posibles fallos.</li>\n          </ul>\n        </li>\n      </ol>\n    </div>\n  </div>\n</div>\n```', '2025-06-10 02:52:54', 3);
INSERT INTO `vulnerabilidades` (`id`, `archivo`, `tipo_vulnerabilidad`, `codigo_vulnerable`, `solucion_propuesta`, `fecha_subida`, `id_zip`) VALUES
(9, 'UserController.cs', 'Detectado por GPT', '﻿using AutoMapper;\r\nusing FermaOrders.API.Controllers.Response;\r\nusing FermaOrders.Application.DTOs.Auth;\r\nusing FermaOrders.Application.Interface.Auth;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing System.Net;\r\nusing System.Web.Http;\r\nusing FromBodyAttribute = Microsoft.AspNetCore.Mvc.FromBodyAttribute;\r\nusing HttpPostAttribute = Microsoft.AspNetCore.Mvc.HttpPostAttribute;\r\nusing RouteAttribute = Microsoft.AspNetCore.Mvc.RouteAttribute;\r\n\r\nnamespace FermaOrders.API.Controllers.Auth\r\n{\r\n    [Route(\"api/[controller]\")]\r\n    [ApiController]\r\n    public class UserController : ControllerBase\r\n    {\r\n        private readonly IWebHostEnvironment _env;\r\n        private readonly IUsuarioService _usuarioService;\r\n        private readonly IMapper _mapper;\r\n        protected RespuestaAPI _respuestaAPI;\r\n\r\n        public UserController(IUsuarioService usuarioService, IMapper mapper, IWebHostEnvironment env)\r\n        {\r\n            _usuarioService = usuarioService;\r\n            _mapper = mapper;\r\n            _respuestaAPI = new();\r\n            _env = env;\r\n        }\r\n\r\n        [AllowAnonymous]\r\n        [HttpPost(\"Registro\")]\r\n        [ProducesResponseType(StatusCodes.Status201Created)]\r\n        [ProducesResponseType(StatusCodes.Status400BadRequest)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> Registro([FromForm] UsuarioRegistroDto usuarioRegistroDto)\r\n        {\r\n\r\n            if (!ModelState.IsValid)\r\n            {\r\n                _respuestaAPI.StatusCode = HttpStatusCode.BadRequest;\r\n                _respuestaAPI.IsSuccess = false;\r\n                _respuestaAPI.ErrorMessages.Add(\"Datos de registro inválidos\");\r\n                return BadRequest(_respuestaAPI);\r\n            }\r\n\r\n\r\n            if (!_usuarioService.IsUniqueUser(usuarioRegistroDto.NombreUsuario))\r\n            {\r\n                _respuestaAPI.StatusCode = HttpStatusCode.BadRequest;\r\n                _respuestaAPI.IsSuccess = false;\r\n                _respuestaAPI.ErrorMessages.Add(\"El nombre de usuario ya existe\");\r\n                return BadRequest(_respuestaAPI);\r\n            }\r\n\r\n            var usuarioCreado = await _usuarioService.RegistroAsync(usuarioRegistroDto);\r\n            if (usuarioCreado == null)\r\n            {\r\n                _respuestaAPI.StatusCode = HttpStatusCode.InternalServerError;\r\n                _respuestaAPI.IsSuccess = false;\r\n                _respuestaAPI.ErrorMessages.Add(\"Error en el registro de usuario\");\r\n                return StatusCode(StatusCodes.Status500InternalServerError, _respuestaAPI);\r\n            }\r\n\r\n\r\n            _respuestaAPI.StatusCode = HttpStatusCode.Created;\r\n            _respuestaAPI.IsSuccess = true;\r\n            _respuestaAPI.Result = usuarioCreado;\r\n            return CreatedAtAction(nameof(Registro), new { id = usuarioCreado.Id }, _respuestaAPI);\r\n        }\r\n\r\n\r\n        [AllowAnonymous]\r\n        [HttpPost(\"Login\")]\r\n        [ProducesResponseType(StatusCodes.Status201Created)]\r\n        [ProducesResponseType(StatusCodes.Status400BadRequest)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> Login([FromForm] UsuarioLoginDto usuarioLoginDto)\r\n        {\r\n            var respuestaLogin = await _usuarioService.LoginAsync(usuarioLoginDto);\r\n\r\n            if (respuestaLogin == null || string.IsNullOrEmpty(respuestaLogin.Token))\r\n            {\r\n                _respuestaAPI.StatusCode = HttpStatusCode.BadRequest;\r\n                _respuestaAPI.IsSuccess = false;\r\n                _respuestaAPI.ErrorMessages.Add(\"El nombre de Usuario o Password son Incorrectos\");\r\n                return BadRequest(_respuestaAPI);\r\n            }\r\n\r\n            _respuestaAPI.StatusCode = HttpStatusCode.OK;\r\n            _respuestaAPI.IsSuccess = true;\r\n            ///Usamos esto para que nos devuelva el login\r\n            _respuestaAPI.Result = respuestaLogin;\r\n            return Ok(_respuestaAPI);\r\n        }\r\n\r\n        [Authorize]\r\n        [HttpPost(\"logout\")]\r\n        public async Task<IActionResult> Logout()\r\n        {\r\n            var token = Request.Headers[\"Authorization\"].ToString().Replace(\"Bearer \", \"\");\r\n\r\n            await _usuarioService.LogoutAsync(token);\r\n\r\n            return Ok(new { message = \"Sesión cerrada correctamente.\" });\r\n        }\r\n    }\r\n}\r\n', '```html\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card\">\n        <div class=\"card-header bg-danger text-white\">\n          Vulnerabilidades de Seguridad\n        </div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Falta de validación robusta del token en el Logout</h5>\n          <p class=\"card-text\">\n            <b>Tipo:</b> Posible vulnerabilidad de seguridad relacionada con el manejo del token de autenticación.\n          </p>\n          <p class=\"card-text\">\n            <b>Línea Aproximada:</b>  `var token = Request.Headers[\"Authorization\"].ToString().Replace(\"Bearer \", \"\");` (Línea 94)\n          </p>\n          <p class=\"card-text\">\n            <b>Descripción:</b> El código extrae el token de la cabecera \"Authorization\" usando un simple reemplazo de string.  No hay una validación robusta del token antes de pasarlo al servicio `_usuarioService.LogoutAsync(token)`.  Un atacante podría manipular la cabecera \"Authorization\" para inyectar valores inesperados o un token inválido que podría causar un comportamiento inesperado o incluso una denegación de servicio si el método `LogoutAsync` no maneja correctamente tokens inválidos. No hay control de concurrencia del token.\n          </p>\n          <p class=\"card-text\">\n            <b>Mitigación:</b>\n            <ol>\n              <li>\n                Validar que la cabecera \"Authorization\" existe antes de intentar extraer el token.\n              </li>\n              <li>\n                 Realizar una validación robusta del formato del token (por ejemplo, verificar que es un JWT válido).\n              </li>\n              <li>\n                 Implementar la lógica `LogoutAsync` en  `_usuarioService` debe tener control de concurrencia y controlar los posibles errores que pueda tener la invalidación del token\n              </li>\n              <li>\n                Implementar un mecanismo adecuado de invalidación de tokens (por ejemplo, agregando el token a una lista negra o revocando el token en el servidor de autenticación).\n              </li>\n            </ol>\n          </p>\n          <p class=\"card-text\">\n            <b>Métricas a mejorar:</b> Seguridad, Robustez.\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row mt-3\">\n    <div class=\"col-md-12\">\n      <div class=\"card\">\n        <div class=\"card-header bg-warning text-dark\">\n          Métricas de Calidad del Código\n        </div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Acoplamiento</h5>\n          <p class=\"card-text\">\n            El controlador `UserController` tiene un acoplamiento moderado con `IUsuarioService`, `IMapper` e `IWebHostEnvironment`. Esto es aceptable en un controlador, pero se debe evitar un acoplamiento excesivo.\n          </p>\n          <p class=\"card-text\">\n            <b>Mejora:</b> Se podría considerar el uso de un patrón Mediator para reducir aún más el acoplamiento con `IUsuarioService` si la lógica del controlador se vuelve más compleja.\n          </p>\n\n          <h5 class=\"card-title\">Duplicación</h5>\n          <p class=\"card-text\">\n            Hay una ligera duplicación en la forma en que se construyen los objetos `_respuestaAPI` en los métodos `Registro` y `Login`.\n          </p>\n          <p class=\"card-text\">\n            <b>Mejora:</b> Se podría crear un método privado para encapsular la creación y configuración del objeto `_respuestaAPI` para evitar la duplicación de código.\n          </p>\n\n          <h5 class=\"card-title\">Legibilidad</h5>\n          <p class=\"card-text\">\n            El código es generalmente legible y bien estructurado. El uso de nombres descriptivos para las variables y métodos ayuda a la comprensión.\n          </p>\n          <p class=\"card-text\">\n            <b>Mejora:</b> Se podrían agregar comentarios adicionales para explicar la lógica más compleja o las decisiones de diseño.\n          </p>\n\n          <h5 class=\"card-title\">Complejidad</h5>\n          <p class=\"card-text\">\n            La complejidad ciclomatica de los metodos es baja, las funciones Registro, Login y Logout se ejecutan en un flujo logico simple\n          </p>\n          <p class=\"card-text\">\n            <b>Mejora:</b> Se debe mantener la complejidad lo mas baja posible con refactorizaciones si esta crece.\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row mt-3\">\n    <div class=\"col-md-12\">\n      <div class=\"card border-success\">\n        <div class=\"card-header bg-success text-white\">\n          Solución Propuesta (Logout)\n        </div>\n        <div class=\"card-body\">\n          <p class=\"card-text\">\n            A continuación, se presenta una posible solución para mejorar la validación del token en el método `Logout`.\n          </p>\n          <pre>\n            <code>\n[Authorize]\n[HttpPost(\"logout\")]\npublic async Task&lt;IActionResult&gt; Logout()\n{\n    string authorizationHeader = Request.Headers[\"Authorization\"];\n\n    if (string.IsNullOrEmpty(authorizationHeader) || !authorizationHeader.StartsWith(\"Bearer \"))\n    {\n        return BadRequest(new { message = \"Cabecera Authorization inválida.\" });\n    }\n\n    var token = authorizationHeader.Substring(\"Bearer \".Length).Trim();\n\n    if (string.IsNullOrEmpty(token))\n    {\n        return BadRequest(new { message = \"Token JWT inválido.\" });\n    }\n\n    try\n    {\n        // Validar el formato del token (por ejemplo, utilizando una librería JWT).\n        // Esto es un ejemplo, adapte según su librería JWT.\n        var jwtHandler = new System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler();\n        var jwtToken = jwtHandler.ReadJwtToken(token);\n\n        if (jwtToken == null)\n        {\n            return BadRequest(new { message = \"Token JWT inválido.\" });\n        }\n    }\n    catch (Exception)\n    {\n        return BadRequest(new { message = \"Token JWT inválido.\" });\n    }\n\n    await _usuarioService.LogoutAsync(token);\n\n    return Ok(new { message = \"Sesión cerrada correctamente.\" });\n}\n            </code>\n          </pre>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n', '2025-06-10 03:06:30', 4),
(10, 'UserController.cs', 'Detectado por GPT', '﻿using AutoMapper;\r\nusing FermaOrders.API.Controllers.Response;\r\nusing FermaOrders.Application.DTOs.Auth;\r\nusing FermaOrders.Application.Interface.Auth;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing System.Net;\r\nusing System.Web.Http;\r\nusing FromBodyAttribute = Microsoft.AspNetCore.Mvc.FromBodyAttribute;\r\nusing HttpPostAttribute = Microsoft.AspNetCore.Mvc.HttpPostAttribute;\r\nusing RouteAttribute = Microsoft.AspNetCore.Mvc.RouteAttribute;\r\n\r\nnamespace FermaOrders.API.Controllers.Auth\r\n{\r\n    [Route(\"api/[controller]\")]\r\n    [ApiController]\r\n    public class UserController : ControllerBase\r\n    {\r\n        private readonly IWebHostEnvironment _env;\r\n        private readonly IUsuarioService _usuarioService;\r\n        private readonly IMapper _mapper;\r\n        protected RespuestaAPI _respuestaAPI;\r\n\r\n        public UserController(IUsuarioService usuarioService, IMapper mapper, IWebHostEnvironment env)\r\n        {\r\n            _usuarioService = usuarioService;\r\n            _mapper = mapper;\r\n            _respuestaAPI = new();\r\n            _env = env;\r\n        }\r\n\r\n        [AllowAnonymous]\r\n        [HttpPost(\"Registro\")]\r\n        [ProducesResponseType(StatusCodes.Status201Created)]\r\n        [ProducesResponseType(StatusCodes.Status400BadRequest)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> Registro([FromForm] UsuarioRegistroDto usuarioRegistroDto)\r\n        {\r\n\r\n            if (!ModelState.IsValid)\r\n            {\r\n                _respuestaAPI.StatusCode = HttpStatusCode.BadRequest;\r\n                _respuestaAPI.IsSuccess = false;\r\n                _respuestaAPI.ErrorMessages.Add(\"Datos de registro inválidos\");\r\n                return BadRequest(_respuestaAPI);\r\n            }\r\n\r\n\r\n            if (!_usuarioService.IsUniqueUser(usuarioRegistroDto.NombreUsuario))\r\n            {\r\n                _respuestaAPI.StatusCode = HttpStatusCode.BadRequest;\r\n                _respuestaAPI.IsSuccess = false;\r\n                _respuestaAPI.ErrorMessages.Add(\"El nombre de usuario ya existe\");\r\n                return BadRequest(_respuestaAPI);\r\n            }\r\n\r\n            var usuarioCreado = await _usuarioService.RegistroAsync(usuarioRegistroDto);\r\n            if (usuarioCreado == null)\r\n            {\r\n                _respuestaAPI.StatusCode = HttpStatusCode.InternalServerError;\r\n                _respuestaAPI.IsSuccess = false;\r\n                _respuestaAPI.ErrorMessages.Add(\"Error en el registro de usuario\");\r\n                return StatusCode(StatusCodes.Status500InternalServerError, _respuestaAPI);\r\n            }\r\n\r\n\r\n            _respuestaAPI.StatusCode = HttpStatusCode.Created;\r\n            _respuestaAPI.IsSuccess = true;\r\n            _respuestaAPI.Result = usuarioCreado;\r\n            return CreatedAtAction(nameof(Registro), new { id = usuarioCreado.Id }, _respuestaAPI);\r\n        }\r\n\r\n\r\n        [AllowAnonymous]\r\n        [HttpPost(\"Login\")]\r\n        [ProducesResponseType(StatusCodes.Status201Created)]\r\n        [ProducesResponseType(StatusCodes.Status400BadRequest)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> Login([FromForm] UsuarioLoginDto usuarioLoginDto)\r\n        {\r\n            var respuestaLogin = await _usuarioService.LoginAsync(usuarioLoginDto);\r\n\r\n            if (respuestaLogin == null || string.IsNullOrEmpty(respuestaLogin.Token))\r\n            {\r\n                _respuestaAPI.StatusCode = HttpStatusCode.BadRequest;\r\n                _respuestaAPI.IsSuccess = false;\r\n                _respuestaAPI.ErrorMessages.Add(\"El nombre de Usuario o Password son Incorrectos\");\r\n                return BadRequest(_respuestaAPI);\r\n            }\r\n\r\n            _respuestaAPI.StatusCode = HttpStatusCode.OK;\r\n            _respuestaAPI.IsSuccess = true;\r\n            ///Usamos esto para que nos devuelva el login\r\n            _respuestaAPI.Result = respuestaLogin;\r\n            return Ok(_respuestaAPI);\r\n        }\r\n\r\n        [Authorize]\r\n        [HttpPost(\"logout\")]\r\n        public async Task<IActionResult> Logout()\r\n        {\r\n            var token = Request.Headers[\"Authorization\"].ToString().Replace(\"Bearer \", \"\");\r\n\r\n            await _usuarioService.LogoutAsync(token);\r\n\r\n            return Ok(new { message = \"Sesión cerrada correctamente.\" });\r\n        }\r\n    }\r\n}\r\n', '```html\n<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-header bg-danger text-white\">\n            Análisis de Seguridad y Calidad del Código\n        </div>\n        <div class=\"card-body\">\n\n            <div class=\"card\">\n                <div class=\"card-header bg-warning\">\n                    Vulnerabilidades de Seguridad\n                </div>\n                <div class=\"card-body\">\n\n                    <div class=\"card\">\n                        <div class=\"card-header\">\n                            Vulnerabilidad 1: Falta de validación y sanitización robusta en  <code>UsuarioRegistroDto</code>\n                        </div>\n                        <div class=\"card-body\">\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Descripción</h6>\n                            <p class=\"card-text\">Aunque se usa <code>ModelState.IsValid</code>, esto depende de los atributos de validación en el DTO.  Una validación insuficiente en el DTO o la ausencia de sanitización adecuada puede llevar a inyección de código o Cross-Site Scripting (XSS) si los datos del usuario se muestran en alguna parte de la aplicación.</p>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Línea Aproximada</h6>\n                            <p class=\"card-text\">Líneas relacionadas con el uso de <code>usuarioRegistroDto</code> en el método <code>Registro</code>, especialmente al pasar datos al servicio (aprox. línea 43).</p>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Mitigación</h6>\n                            <ul>\n                                <li>Implementar validaciones robustas en el <code>UsuarioRegistroDto</code>, incluyendo la longitud máxima de las cadenas, formatos esperados (ej: email) y listas blancas (ej: para caracteres permitidos).</li>\n                                <li>Sanitizar los datos antes de almacenarlos en la base de datos, especialmente si se van a mostrar en otras partes de la aplicación.  Considerar el uso de bibliotecas de sanitización.</li>\n                                <li>Utilizar un filtro global para validar todos los modelos entrantes y evitar la repetición de código.</li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    <div class=\"card\">\n                        <div class=\"card-header\">\n                            Vulnerabilidad 2: Almacenamiento inseguro de contraseñas (implícito)\n                        </div>\n                        <div class=\"card-body\">\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Descripción</h6>\n                            <p class=\"card-text\">El código proporcionado no muestra cómo se manejan las contraseñas, pero es crucial asegurarse de que no se almacenan en texto plano.  Si se almacenan contraseñas sin un hash seguro y un salt, la aplicación es vulnerable a robo de credenciales en caso de una brecha de seguridad.</p>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Línea Aproximada</h6>\n                            <p class=\"card-text\">Implícito en el servicio <code>_usuarioService</code>, específicamente en el método <code>RegistroAsync</code> (aprox. línea 51) y <code>LoginAsync</code> (aprox. línea 72).</p>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Mitigación</h6>\n                            <ul>\n                                <li>Utilizar una función de hashing segura (como bcrypt, scrypt o Argon2) con un salt único para cada contraseña.</li>\n                                <li>Asegurarse de que la biblioteca de hashing está actualizada para evitar vulnerabilidades conocidas.</li>\n                            </ul>\n                        </div>\n                    </div>\n\n                     <div class=\"card\">\n                        <div class=\"card-header\">\n                            Vulnerabilidad 3: Vulnerabilidad a ataques CSRF en el endpoint de Login\n                        </div>\n                        <div class=\"card-body\">\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Descripción</h6>\n                            <p class=\"card-text\">El endpoint de Login utiliza [FromForm], lo que lo hace susceptible a ataques CSRF. Un atacante podría forzar al usuario a enviar una solicitud maliciosa desde otro sitio web. </p>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Línea Aproximada</h6>\n                            <p class=\"card-text\">Línea 70  <code>public async Task<IActionResult> Login([FromForm] UsuarioLoginDto usuarioLoginDto)</code></p>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Mitigación</h6>\n                            <ul>\n                                <li>Usar el atributo [FromBody] en lugar de [FromForm] para los endpoints de Login.</li>\n                                <li>Implementar tokens CSRF en el frontend y validarlos en el backend.</li>\n                            </ul>\n                        </div>\n                    </div>\n\n                     <div class=\"card\">\n                        <div class=\"card-header\">\n                           Vulnerabilidad 4: Falta de validación del token de autorización al cerrar sesión\n                        </div>\n                        <div class=\"card-body\">\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Descripción</h6>\n                            <p class=\"card-text\">En el método Logout, se extrae el token del encabezado \"Authorization\" sin validarlo. Un atacante podría falsificar o manipular el token, lo que podría llevar a problemas de seguridad.  Aunque se llama a `_usuarioService.LogoutAsync(token)`, la validación real del token debe ocurrir *antes* de llamar a este servicio para prevenir el procesamiento de tokens inválidos.</p>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Línea Aproximada</h6>\n                            <p class=\"card-text\">Línea 91: <code>var token = Request.Headers[\"Authorization\"].ToString().Replace(\"Bearer \", \"\");</code></p>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Mitigación</h6>\n                            <ul>\n                                <li>Validar el formato del token (por ejemplo, si es un JWT, validar su estructura y firma).</li>\n                                <li>Comprobar si el token existe en una lista de tokens válidos/activos.</li>\n                                <li>Verificar si el usuario asociado al token tiene permisos para realizar la operación de cierre de sesión.</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"card\">\n                <div class=\"card-header bg-info text-white\">\n                    Métricas de Calidad del Código\n                </div>\n                <div class=\"card-body\">\n\n                    <div class=\"card\">\n                        <div class=\"card-header\">\n                            Complejidad Ciclomática\n                        </div>\n                        <div class=\"card-body\">\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Análisis</h6>\n                            <p class=\"card-text\">La complejidad ciclomática general parece baja en este fragmento, ya que los métodos son relativamente cortos y con pocas ramas condicionales. Sin embargo, la lógica dentro de <code>_usuarioService</code> podría ser más compleja y requerir un análisis separado.</p>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Mejora</h6>\n                            <ul>\n                                <li>Refactorizar métodos largos en funciones más pequeñas y reutilizables si la lógica interna de <code>_usuarioService</code> es compleja.</li>\n                                <li>Usar principios SOLID (especialmente SRP - Single Responsibility Principle) para asegurar que cada clase y método tiene una única responsabilidad.</li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    <div class=\"card\">\n                        <div class=\"card-header\">\n                            Duplicación\n                        </div>\n                        <div class=\"card-body\">\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Análisis</h6>\n                            <p class=\"card-text\">Hay cierta duplicación en la construcción de la respuesta <code>_respuestaAPI</code>.  Se repite la asignación de <code>StatusCode</code>, <code>IsSuccess</code> y la adición de mensajes de error en múltiples lugares.</p>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Mejora</h6>\n                            <ul>\n                                <li>Crear un método auxiliar para construir el objeto <code>_respuestaAPI</code> con base en el estado y mensaje de error. Esto centraliza la lógica y reduce la duplicación.  Por ejemplo, métodos como <code>SetBadRequestResponse(string message)</code> o <code>SetInternalServerErrorResponse(string message)</code>.</li>\n                                <li>Considerar el uso de un filtro de excepciones global para manejar errores y construir la respuesta de error centralizadamente.</li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    <div class=\"card\">\n                        <div class=\"card-header\">\n                            Legibilidad\n                        </div>\n                        <div class=\"card-body\">\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Análisis</h6>\n                            <p class=\"card-text\">El código es generalmente legible debido a nombres de variables descriptivos y una estructura clara.  El uso de comentarios es mínimo, pero el código es lo suficientemente auto-explicativo en la mayoría de los casos.</p>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Mejora</h6>\n                            <ul>\n                                <li>Añadir comentarios en secciones de código que puedan ser menos obvias o que realicen operaciones complejas.</li>\n                                <li>Mantener la consistencia en el estilo de codificación (espacios, nombres de variables, etc.).</li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    <div class=\"card\">\n                        <div class=\"card-header\">\n                            Acoplamiento\n                        </div>\n                        <div class=\"card-body\">\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Análisis</h6>\n                            <p class=\"card-text\">El controlador tiene un acoplamiento moderado con <code>IUsuarioService</code>, <code>IMapper</code> y <code>IWebHostEnvironment</code>.  Esto es esperable en un controlador, pero es importante asegurarse de que la interfaz <code>IUsuarioService</code> esté bien definida y siga el principio de Inversión de Dependencia (DIP).</p>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Mejora</h6>\n                            <ul>\n                                <li>Asegurarse de que <code>IUsuarioService</code> define una abstracción clara y concisa de las operaciones relacionadas con el usuario.</li>\n                                <li>Evitar la inyección directa de dependencias que no son absolutamente necesarias en el controlador.  Considerar el uso de un patrón Mediator o similar si el controlador necesita interactuar con múltiples servicios.</li>\n                            </ul>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n    <div class=\'card border-success\'>\n        <div class=\'card-header bg-success text-white\'>\n            Solución Propuesta (Fragmento de Ejemplo)\n        </div>\n        <div class=\'card-body\'>\n            <p>Este es un ejemplo de cómo se podría abordar algunas de las vulnerabilidades y mejorar la calidad del código.  Este es un fragmento y requeriría adaptación al resto de la aplicación.</p>\n            <pre>\n            <code>\nusing AutoMapper;\nusing FermaOrders.Application.DTOs.Auth;\nusing FermaOrders.Application.Interface.Auth;\nusing Microsoft.AspNetCore.Authorization;\nusing Microsoft.AspNetCore.Http;\nusing Microsoft.AspNetCore.Mvc;\nusing System.Net;\nusing System.Security.Cryptography;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace FermaOrders.API.Controllers.Auth\n{\n    [Route(\"api/[controller]\")]\n    [ApiController]\n    public class UserController : ControllerBase\n    {\n        private readonly IUsuarioService _usuarioService;\n        private readonly IMapper _mapper;\n        private readonly ILogger&lt;UserController&gt; _logger;  // Add logger\n        protected RespuestaAPI _respuestaAPI;\n\n        public UserController(IUsuarioService usuarioService, IMapper mapper, ILogger&lt;UserController&gt; logger)\n        {\n            _usuarioService = usuarioService;\n            _mapper = mapper;\n            _logger = logger;\n            _respuestaAPI = new();\n        }\n\n        [AllowAnonymous]\n        [HttpPost(\"Registro\")]\n        [ProducesResponseType(StatusCodes.Status201Created)]\n        [ProducesResponseType(StatusCodes.Status400BadRequest)]\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\n        public async Task&lt;IActionResult&gt; Registro([FromBody] UsuarioRegistroDto usuarioRegistroDto) // Use [FromBody]\n        {\n            if (!ModelState.IsValid)\n            {\n                return BadRequest(CreateErrorResponse(\"Datos de registro inválidos\"));\n            }\n\n            if (!_usuarioService.IsUniqueUser(usuarioRegistroDto.NombreUsuario))\n            {\n                return BadRequest(CreateErrorResponse(\"El nombre de usuario ya existe\"));\n            }\n\n            try\n            {\n                var usuarioCreado = await _usuarioService.RegistroAsync(usuarioRegistroDto);\n                if (usuarioCreado == null)\n                {\n                    _logger.LogError(\"Error al registrar el usuario {Username}\", usuarioRegistroDto.NombreUsuario);\n                    return StatusCode(StatusCodes.Status500InternalServerError, CreateErrorResponse(\"Error en el registro de usuario\"));\n                }\n\n                _respuestaAPI.StatusCode = HttpStatusCode.Created;\n                _respuestaAPI.IsSuccess = true;\n                _respuestaAPI.Result = usuarioCreado;\n                return CreatedAtAction(nameof(Registro), new { id = usuarioCreado.Id }, _respuestaAPI);\n            }\n            catch (Exception ex)\n            {\n                _logger.LogError(ex, \"Excepción no controlada al registrar el usuario {Username}\", usuarioRegistroDto.NombreUsuario);\n                return StatusCode(StatusCodes.Status500InternalServerError, CreateErrorResponse(\"Error inesperado en el registro\"));\n            }\n        }\n\n        [AllowAnonymous]\n        [HttpPost(\"Login\")]\n        [ProducesResponseType(StatusCodes.Status200OK)] // Use 200 OK for successful login\n        [ProducesResponseType(StatusCodes.Status400BadRequest)]\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\n        public async Task&lt;IActionResult&gt; Login([FromBody] UsuarioLoginDto usuarioLoginDto)  // Use [FromBody]\n        {\n            if (!ModelState.IsValid)\n            {\n                 return BadRequest(CreateErrorResponse(\"Datos de inicio de sesión inválidos\"));\n            }\n\n            try\n            {\n                var respuestaLogin = await _usuarioService.LoginAsync(usuarioLoginDto);\n\n                if (respuestaLogin == null || string.IsNullOrEmpty(respuestaLogin.Token))\n                {\n                    return BadRequest(CreateErrorResponse(\"El nombre de Usuario o la Contraseña son Incorrectos\"));\n                }\n\n                _respuestaAPI.StatusCode = HttpStatusCode.OK;\n                _respuestaAPI.IsSuccess = true;\n                _respuestaAPI.Result = respuestaLogin;\n                return Ok(_respuestaAPI); // Use Ok instead of Created\n            }\n            catch (Exception ex)\n            {\n                _logger.LogError(ex, \"Error al iniciar sesión el usuario {Username}\", usuarioLoginDto.NombreUsuario);\n                return StatusCode(StatusCodes.Status500InternalServerError, CreateErrorResponse(\"Error inesperado al iniciar sesión\"));\n            }\n        }\n\n        [Authorize]\n        [HttpPost(\"logout\")]\n        public async Task&lt;IActionResult&gt; Logout()\n        {\n            var token = Request.Headers[\"Authorization\"].ToString().Replace(\"Bearer \", \"\");\n\n            // Validate Token format BEFORE passing to the service\n            if (string.IsNullOrEmpty(token) || !IsValidJwtToken(token))\n            {\n                return BadRequest(CreateErrorResponse(\"Token de autorización inválido.\"));\n            }\n\n\n            await _usuarioService.LogoutAsync(token);\n\n            return Ok(new { message = \"Sesión cerrada correctamente.\" });\n        }\n\n\n        private IActionResult CreateErrorResponse(string message)\n        {\n            _respuestaAPI.StatusCode = HttpStatusCode.BadRequest;\n            _respuestaAPI.IsSuccess = false;\n            _respuestaAPI.ErrorMessages = new List&lt;string&gt; { message }; // Ensure ErrorMessages is initialized\n            return BadRequest(_respuestaAPI);\n        }\n\n         private bool IsValidJwtToken(string token)\n        {\n            // Implement a proper JWT validation logic here.\n            // This is a placeholder. You should validate the token\'s signature,\n            // expiration, issuer, audience, etc.  Consider using a library\n            // like System.IdentityModel.Tokens.Jwt for full JWT validation.\n            // Example (basic structure check, replace with proper validation):\n            return !string.IsNullOrWhiteSpace(token) && token.Split(\'.\').Length == 3;\n        }\n    }\n}\n            </code>\n            </pre>\n\n            <ul>\n                <li><strong>Validación de Modelo y Sanitización:</strong> Se usa <code>[FromBody]</code> en lugar de <code>[FromForm]</code> en los métodos <code>Registro</code> y <code>Login</code> para mitigar ataques CSRF.  Se ha añadido validación básica de formato del token en el método <code>Logout</code>.</li>\n                <li><strong>Manejo de Excepciones:</strong> Se ha añadido un bloque <code>try-catch</code> para capturar excepciones y registrarlas con un logger.</li>\n                <li><strong>Duplicación de Código:</strong>  Se ha creado un método auxiliar <code>CreateErrorResponse</code> para evitar la duplicación en la creación de la respuesta de error.</li>\n                <li><strong>Logging:</strong> Se ha añadido un logger para registrar errores y excepciones.</li>\n                <li><strong>Validacion del token:</strong> Implementado un metodo para validar el token antes de cerrar la sesión</li>\n            </ul>\n        </div>\n    </div>\n</div>\n```\n', '2025-06-10 16:20:54', 5);
INSERT INTO `vulnerabilidades` (`id`, `archivo`, `tipo_vulnerabilidad`, `codigo_vulnerable`, `solucion_propuesta`, `fecha_subida`, `id_zip`) VALUES
(11, 'CustomerController.cs', 'Detectado por GPT', '﻿using Castle.Core.Resource;\r\nusing FermaOrders.API.Controllers.Response;\r\nusing FermaOrders.Application.Dto.Components.Customer;\r\nusing FermaOrders.Application.Interface.Components;\r\nusing FermaOrders.Application.Service.Components;\r\nusing FermaOrders.Domain.Entities;\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing System.Data;\r\nusing System.Net;\r\n\r\nnamespace FermaOrders.API.Controllers.Application\r\n{\r\n    [Route(\"api/[controller]\")]\r\n    [ApiController]\r\n    public class CustomerController : ControllerBase\r\n    {\r\n        private readonly ICustomerService _customerService;\r\n\r\n        public CustomerController(ICustomerService customerService)\r\n        {\r\n            _customerService = customerService;\r\n        }\r\n\r\n        // Crear un asiento\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpPost]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> CreateCustomerAsync([FromBody] CustomerCreateDto customerDto)\r\n        {\r\n            var response = new RespuestaAPI();\r\n            try\r\n            {\r\n                if (customerDto == null)\r\n                {\r\n                    return BadRequest(\"Invalid customer data.\");\r\n                }\r\n\r\n                var customer = await _customerService.CreateCustomerAsync(customerDto);\r\n                response.Result = customer;\r\n                response.IsSuccess = true;\r\n                response.StatusCode = HttpStatusCode.OK;\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n        }\r\n\r\n        // Obtener un asiento por ID\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpGet(\"{id}\")]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> GetCustomerByIdAsync(int id)\r\n        {\r\n            var response = new RespuestaAPI();\r\n\r\n            try\r\n            {\r\n                var customer = await _customerService.GetCustomerIdAsync(id);\r\n                if (customer == null)\r\n                {\r\n                    return BadRequest(\"Invalid customer data.\");\r\n                }\r\n\r\n                response.Result = customer;\r\n                response.IsSuccess = true;\r\n                response.StatusCode = HttpStatusCode.OK;\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n\r\n            \r\n        }\r\n\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpPut(\"{id}\")]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status400BadRequest)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> UpdateCustomerAsync(int id, [FromBody] CustomerUpdateDto customerDto)\r\n        {\r\n            var response = new RespuestaAPI();\r\n\r\n            try\r\n            {\r\n                if (id != customerDto.Id)\r\n                {\r\n                    return BadRequest(\"ID mismatch.\");\r\n                }\r\n                await _customerService.UpdateCustomerDto(customerDto);\r\n\r\n                response.IsSuccess = true;\r\n                response.StatusCode = HttpStatusCode.OK;\r\n                response.Result = new { message = \"Customer updated successfully.\" };\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n        }\r\n\r\n        // Eliminar un asiento\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpDelete(\"{id}\")]\r\n        [ProducesResponseType(StatusCodes.Status204NoContent)]\r\n        [ProducesResponseType(StatusCodes.Status404NotFound)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> DeleteCustomerAsync(int id)\r\n        {\r\n            var response = new RespuestaAPI();\r\n            try\r\n            {\r\n                await _customerService.DeleteCustomerAsync(id);\r\n                return NoContent();\r\n            }\r\n            catch (KeyNotFoundException ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.NotFound;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return NotFound(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n        }\r\n\r\n\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpGet(\"customer\")]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> GetCustomerList()\r\n        {\r\n            var response = new RespuestaAPI();\r\n\r\n            try\r\n            {\r\n                var customers = await _customerService.ListCustomer();\r\n\r\n                response.Result = customers;\r\n                response.IsSuccess = true;\r\n                response.StatusCode = (HttpStatusCode)(int)HttpStatusCode.OK;\r\n\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.IsSuccess = false;\r\n                response.StatusCode = (HttpStatusCode)(int)HttpStatusCode.InternalServerError;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n\r\n                return StatusCode(500, response);\r\n            }\r\n\r\n            // Redundante, pero garantiza que todas las rutas retornan algo\r\n            // No debería alcanzarse nunca\r\n            return StatusCode(500, new RespuestaAPI\r\n            {\r\n                IsSuccess = false,\r\n                StatusCode = (HttpStatusCode)(int)HttpStatusCode.InternalServerError,\r\n                ErrorMessages = new List<string> { \"Ocurrió un error inesperado.\" }\r\n            });\r\n        }\r\n    }\r\n}\r\n', '```html\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n\n            <div class=\"card border-danger mb-3\">\n                <div class=\"card-header bg-danger text-white\">\n                    Análisis de Vulnerabilidades\n                </div>\n                <div class=\"card-body\">\n\n                    <div class=\"card-text\">\n                        <h5 class=\"card-title\">Vulnerabilidad: Falta de Validación Adecuada en GetCustomerByIdAsync</h5>\n                        <ul>\n                            <li>\n                                <strong>Tipo:</strong> Exposición de Información Sensible / Error de lógica.\n                            </li>\n                            <li>\n                                <strong>Línea Aproximada:</strong>\n                                <pre><code>if (customer == null)\n                {\n                    return BadRequest(\"Invalid customer data.\");\n                }</code></pre>\n                            </li>\n                            <li>\n                                <strong>Descripción:</strong>  El método `GetCustomerByIdAsync`  devuelve un `BadRequest` si el cliente no se encuentra.  Idealmente, debería devolver un `NotFound` (404) para indicar que el recurso no existe.  El uso de `BadRequest` (400) es semanticamente incorrecto, ya que implica un problema con la *solicitud* en sí misma, no con la existencia del recurso.  Aunque no es una vulnerabilidad de seguridad directa, una mala gestión de los códigos de estado HTTP puede conducir a un comportamiento inesperado en los clientes y dificultar la depuración.\n                            </li>\n                            <li>\n                                <strong>Mitigación:</strong> Cambiar el `BadRequest` por un `NotFound` cuando el cliente no se encuentre.\n                            </li>\n                        </ul>\n                    </div>\n\n                    <div class=\"card-text\">\n                        <h5 class=\"card-title\">Vulnerabilidad: Control de acceso inapropiado en GetCustomerList</h5>\n                        <ul>\n                            <li>\n                                <strong>Tipo:</strong> Posible exposición de información sensible o escalación de privilegios.\n                            </li>\n                            <li>\n                                <strong>Descripción:</strong> Aunque el método `GetCustomerList` está decorado con `[Authorize(Roles = \"Admin\")]`, una vulnerabilidad sutil podría surgir dependiendo de la implementación de `_customerService.ListCustomer()`. Si este método no aplica filtrado adicional a la lista de clientes basada en permisos de usuario, un usuario con rol \"Admin\" podría acceder a información de clientes que no debería.  La solución no es tan simple como remover el endpoint pues la lógica puede ser correcta.\n                            </li>\n                            <li>\n                                <strong>Mitigación:</strong>\n                                <ol>\n                                    <li>Verificar y asegurar que el método `_customerService.ListCustomer()` implemente una lógica de filtrado robusta basada en los permisos del usuario autenticado.  Esto podría significar que el servicio interno (o la capa de acceso a datos) aplique filtros para retornar solamente los clientes a los que el usuario tiene derecho de acceso.</li>\n                                    <li>Considerar el uso de una abstracción de usuario (como `IHttpContextAccessor`) dentro de `_customerService.ListCustomer()` para obtener información sobre el usuario actual y aplicar los filtros adecuados.</li>\n                                </ol>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <div class=\"card-text\">\n                        <h5 class=\"card-title\">Vulnerabilidad: Código redundante y camino de código inalcanzable en GetCustomerList</h5>\n                        <ul>\n                            <li>\n                                <strong>Tipo:</strong> Riesgo de mantenimiento, confusión y potencial error en la lógica.\n                            </li>\n                            <li>\n                                <strong>Línea Aproximada:</strong>\n                                <pre><code>return StatusCode(500, new RespuestaAPI\n            {\n                IsSuccess = false,\n                StatusCode = (HttpStatusCode)(int)HttpStatusCode.InternalServerError,\n                ErrorMessages = new List<string> { \"Ocurrió un error inesperado.\" }\n            });</code></pre>\n                            </li>\n                            <li>\n                                <strong>Descripción:</strong>  Después del bloque `try...catch`, hay un `return StatusCode(500, ...)` que nunca se ejecutará, porque el bloque `try` siempre retornará algo, ya sea un `Ok` o dentro del `catch` un `StatusCode(500, response)`.  Este código redundante aumenta la complejidad y puede llevar a confusión durante el mantenimiento.\n                            </li>\n                            <li>\n                                <strong>Mitigación:</strong> Eliminar la línea de `return` redundante después del bloque `try...catch`.\n                            </li>\n                            <li>\n                                <strong>Mejora de métricas:</strong>  Eliminando el código redundante se mejora la legibilidad y reduce la complejidad ciclomática.\n                            </li>\n                        </ul>\n                    </div>\n                    \n                </div>\n            </div>\n\n            <div class=\"card border-warning mb-3\">\n                <div class=\"card-header bg-warning text-white\">\n                    Métricas de Calidad del Código\n                </div>\n                <div class=\"card-body\">\n                    <p class=\"card-text\">\n                        <strong>Complejidad:</strong> La complejidad ciclomática es relativamente baja en cada método individualmente. Sin embargo, la repetición de bloques `try-catch` en cada acción aumenta la complejidad general y la cantidad de código.\n                    </p>\n                    <p class=\"card-text\">\n                        <strong>Duplicación:</strong>  Existe una alta duplicación en el manejo de errores con los bloques `try-catch` que son virtualmente idénticos en cada método.\n                    </p>\n                    <p class=\"card-text\">\n                        <strong>Legibilidad:</strong>  El código es relativamente legible, pero la duplicación y la falta de abstracción del manejo de errores lo hacen más difícil de mantener y comprender.\n                    </p>\n                    <p class=\"card-text\">\n                        <strong>Acoplamiento:</strong> El acoplamiento es razonable. El controlador depende de `ICustomerService`, lo cual es una buena práctica.\n                    </p>\n                </div>\n            </div>\n\n            <div class=\'card border-success\'>\n                <div class=\"card-header bg-success text-white\">\n                    Solución Propuesta\n                </div>\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">Mejoras Generales</h5>\n                    <ul>\n                        <li>\n                            <strong>Centralizar el manejo de errores:</strong> Implementar un filtro de excepciones global o un middleware para centralizar el manejo de errores y reducir la duplicación de código. Esto simplificaría el código del controlador y mejoraría la legibilidad y el mantenimiento.  En ASP.NET Core, esto se puede lograr mediante la implementación de `IExceptionFilter` o usando un middleware personalizado.\n                        </li>\n                        <li>\n                            <strong>Consistencia en las respuestas HTTP:</strong> Usar códigos de estado HTTP apropiados para indicar el resultado de cada operación. Por ejemplo, usar `NotFound` (404) cuando un recurso no se encuentra, en lugar de `BadRequest` (400).\n                        </li>\n                        <li>\n                            <strong>Validación de modelos:</strong> Utilizar atributos de validación en los DTOs (`CustomerCreateDto`, `CustomerUpdateDto`) y `ModelState.IsValid` en el controlador para validar los datos de entrada. Esto reduce la necesidad de comprobaciones `if (customerDto == null)` y simplifica la lógica.\n                        </li>\n                        <li>\n                            <strong>Inyección de dependencias:</strong> Asegurarse de que todas las dependencias se inyecten correctamente y utilizar interfaces para facilitar el testing y el desacoplamiento.\n                        </li>\n                    </ul>\n\n                    <h5 class=\"card-title\">Ejemplo de Manejo Centralizado de Errores (Esquema)</h5>\n\n                    <p class=\"card-text\">\n                        Crear un filtro de excepciones global:\n                    </p>\n\n                    <pre><code>\n    public class GlobalExceptionFilter : IExceptionFilter\n    {\n        private readonly ILogger&lt;GlobalExceptionFilter&gt; _logger;\n\n        public GlobalExceptionFilter(ILogger&lt;GlobalExceptionFilter&gt; logger)\n        {\n            _logger = logger;\n        }\n\n        public void OnException(ExceptionContext context)\n        {\n            _logger.LogError(context.Exception, \"An unexpected error occurred.\");\n\n            var response = new RespuestaAPI\n            {\n                IsSuccess = false,\n                StatusCode = HttpStatusCode.InternalServerError,\n                ErrorMessages = new List&lt;string&gt; { \"Ocurrió un error inesperado.\" }\n            };\n\n            context.Result = new ObjectResult(response)\n            {\n                StatusCode = (int)HttpStatusCode.InternalServerError\n            };\n\n            context.ExceptionHandled = true;\n        }\n    }\n\n    // En Startup.cs o Program.cs:\n    services.AddControllers(options =>\n    {\n        options.Filters.Add&lt;GlobalExceptionFilter&gt;();\n    });\n                    </code></pre>\n\n                    <h5 class=\"card-title\">Código Mejorado (Ejemplo GetCustomerByIdAsync)</h5>\n\n                    <pre><code>\n    [Authorize(Roles = \"Admin\")]\n    [HttpGet(\"{id}\")]\n    [ProducesResponseType(StatusCodes.Status200OK)]\n    [ProducesResponseType(StatusCodes.Status404NotFound)]\n    [ProducesResponseType(StatusCodes.Status500InternalServerError)]\n    public async Task&lt;IActionResult&gt; GetCustomerByIdAsync(int id)\n    {\n        var customer = await _customerService.GetCustomerIdAsync(id);\n\n        if (customer == null)\n        {\n            return NotFound(new RespuestaAPI {\n                    IsSuccess = false,\n                    StatusCode = HttpStatusCode.NotFound,\n                    ErrorMessages = new List&lt;string&gt; { \"Customer not found.\" }\n                });\n        }\n\n        return Ok(new RespuestaAPI {\n            Result = customer,\n            IsSuccess = true,\n            StatusCode = HttpStatusCode.OK\n        });\n    }\n                    </code></pre>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n```\n', '2025-06-24 06:00:01', 6),
(12, 'OrdersController.cs', 'Detectado por GPT', '﻿using Azure;\r\nusing FermaOrders.API.Controllers.Response;\r\nusing FermaOrders.Application.Dto.Application;\r\nusing FermaOrders.Application.Dto.Components.Customer;\r\nusing FermaOrders.Application.Interface.Application;\r\nusing FermaOrders.Domain.Entities;\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing System.Net;\r\n\r\nnamespace FermaOrders.API.Controllers.Application\r\n{\r\n    [Route(\"api/[controller]\")]\r\n    [ApiController]\r\n    public class OrdersController : ControllerBase\r\n    {\r\n        private readonly IOrderService _orderService;\r\n\r\n        public OrdersController(IOrderService orderService)\r\n        {\r\n            _orderService = orderService;\r\n        }\r\n\r\n        [Authorize(Roles = \"Admin,Empleado\")]\r\n        [HttpPost]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> CreateOrderAsync([FromBody] OrderDto orderDto)\r\n        {\r\n            var response = new RespuestaAPI();\r\n            try\r\n            {\r\n                if (orderDto == null)\r\n                {\r\n                    return BadRequest(\"Invalid order data.\");\r\n                }\r\n\r\n                var order = await _orderService.CreateOrderAsync(orderDto); // Aquí el await\r\n                response.Result = order;\r\n                response.IsSuccess = true;\r\n                response.StatusCode = HttpStatusCode.OK;\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n        }\r\n\r\n        [Authorize(Roles = \"Admin,Empleado\")]\r\n        [HttpGet(\"orderitems/{orderId}\")]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> GetOrderItemsByOrderIdAsync(int orderId)\r\n        {\r\n            var respuesta = new RespuestaAPI();\r\n            try\r\n            {\r\n                var items = await _orderService.GetOrderItemByOrderAsync(orderId);\r\n\r\n                respuesta.StatusCode = HttpStatusCode.OK;\r\n                respuesta.IsSuccess = true;\r\n                respuesta.Result = items;\r\n\r\n                return Ok(respuesta);\r\n            }\r\n            catch (KeyNotFoundException ex)\r\n            {\r\n                respuesta.StatusCode = HttpStatusCode.NotFound;\r\n                respuesta.IsSuccess = false;\r\n                respuesta.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return NotFound(respuesta);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                respuesta.StatusCode = HttpStatusCode.InternalServerError;\r\n                respuesta.IsSuccess = false;\r\n                respuesta.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, respuesta);\r\n            }\r\n        }\r\n\r\n\r\n        [Authorize(Roles = \"Admin,Empleado\")]\r\n        [HttpGet(\"customers/{customerId}\")]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> ListOrderByCustomer(int customerId)\r\n        {\r\n            var respuesta = new RespuestaAPI();\r\n            try\r\n            {\r\n                var orders = await _orderService.ListOrderByCustomer(customerId);\r\n\r\n                respuesta.StatusCode = HttpStatusCode.OK;\r\n                respuesta.IsSuccess = true;\r\n                respuesta.Result = orders;\r\n\r\n                return Ok(respuesta);\r\n            }\r\n            catch (KeyNotFoundException ex)\r\n            {\r\n                respuesta.StatusCode = HttpStatusCode.NotFound;\r\n                respuesta.IsSuccess = false;\r\n                respuesta.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return NotFound(respuesta);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                respuesta.StatusCode = HttpStatusCode.InternalServerError;\r\n                respuesta.IsSuccess = false;\r\n                respuesta.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, respuesta);\r\n            }\r\n        }\r\n    }\r\n}\r\n', '```html\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card border-danger mb-3\">\n                <div class=\"card-header bg-danger text-white\">\n                    Vulnerabilidades de Seguridad\n                </div>\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">Manejo de excepciones genérico</h5>\n                    <p class=\"card-text\">\n                        <b>Tipo:</b> Denegación de Servicio (DoS), Exposición de Información Sensible.\n                        <br>\n                        <b>Línea Aproximada:</b> 43, 67 y 91 (todos los bloques `catch (Exception ex)`).\n                        <br>\n                        <b>Descripción:</b> Capturar la excepción base `Exception` puede ocultar errores críticos e impedir un manejo adecuado de excepciones más específicas.  Además, enviar el mensaje de error de excepción al cliente puede exponer información sensible sobre la infraestructura interna o la lógica del programa. En escenarios de alta carga, un manejo ineficiente de excepciones puede llevar a DoS.\n                        <br>\n                        <b>Cómo Mitigar:</b> Capturar excepciones más específicas (e.g., `ArgumentException`, `InvalidOperationException`). Registrar los detalles de la excepción en un sistema de logs seguro, sin exponerlos directamente en la respuesta HTTP al cliente. Utilizar mensajes de error genéricos y amigables para el usuario.\n                    </p>\n                </div>\n            </div>\n\n            <div class=\"card border-warning mb-3\">\n                <div class=\"card-header bg-warning text-white\">\n                    Métricas de Calidad del Código\n                </div>\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">Duplicación de código</h5>\n                    <p class=\"card-text\">\n                        <b>Descripción:</b> Los bloques `try-catch` en los métodos `GetOrderItemsByOrderIdAsync` y `ListOrderByCustomer` son casi idénticos. Esto aumenta el mantenimiento y el riesgo de errores.\n                        <br>\n                        <b>Cómo mejorar:</b> Refactorizar la lógica de manejo de excepciones en un método o filtro reusable.\n                    </p>\n                    <h5 class=\"card-title\">Legibilidad</h5>\n                    <p class=\"card-text\">\n                        <b>Descripción:</b> El código es relativamente legible, pero podría mejorarse utilizando nombres de variables más descriptivos y comentarios para explicar secciones complejas. La nomenclatura de `respuesta` vs `response` es inconsistente.\n                        <br>\n                        <b>Cómo mejorar:</b> Usar nombres de variables y métodos consistentes y descriptivos.  Añadir comentarios donde sea necesario para aclarar la lógica.\n                    </p>\n                    <h5 class=\"card-title\">Acoplamiento</h5>\n                    <p class=\"card-text\">\n                        <b>Descripción:</b> El controlador depende directamente de `IOrderService`. Si bien esto es normal en una arquitectura basada en interfaces, un acoplamiento excesivo a la implementación concreta de `IOrderService` podría dificultar las pruebas y la reutilización del controlador.\n                        <br>\n                        <b>Cómo mejorar:</b> Asegurarse de que `IOrderService` define claramente las responsabilidades y que el controlador interactúa con él de manera abstracta. Considerar el uso de patrones como el de Inyección de Dependencias para disminuir el acoplamiento.\n                    </p>\n                    <h5 class=\"card-title\">Complejidad Ciclomática</h5>\n                    <p class=\"card-text\">\n                        <b>Descripción:</b> La complejidad ciclomática es baja en cada método individualmente. Sin embargo, la repetición de estructuras `try-catch` incrementa la complejidad general del código base.\n                        <br>\n                        <b>Cómo mejorar:</b> Reducir la duplicación de código refactorizando el manejo de excepciones, lo que, a su vez, disminuirá la complejidad general.\n                    </p>\n                </div>\n            </div>\n\n            <div class=\"card border-success\">\n                <div class=\"card-header bg-success text-white\">\n                    Solución Propuesta\n                </div>\n                <div class=\"card-body\">\n                    <p class=\"card-text\">\n                        <b>1. Refactorización del manejo de excepciones:</b> Crear un método o filtro reusable para el manejo de excepciones comunes.  Este método/filtro registrará la excepción (sin exponer detalles sensibles) y retornará una respuesta HTTP adecuada con un mensaje de error genérico.\n                        <br>\n                        <b>2. Manejo de excepciones específicas:</b> Cambiar la captura genérica `catch (Exception ex)` por capturas más específicas, por ejemplo: `catch (KeyNotFoundException ex)`, `catch (ArgumentException ex)`, etc.  Esto permite un manejo más preciso de diferentes tipos de errores.\n                        <br>\n                        <b>3. Consistencia en la nomenclatura:</b> Unificar la nomenclatura de variables y propiedades (por ejemplo, usar siempre `response` en lugar de `respuesta` y `response`).\n                        <br>\n                        <b>4. Logging adecuado:</b> Implementar un sistema de logging robusto para registrar las excepciones y otros eventos importantes. Utilizar un framework de logging como Serilog o NLog.\n                        <br>\n                        <b>5. Documentación:</b> Añadir comentarios en el código para explicar secciones complejas o decisiones de diseño.\n                    </p>\n                    <p class=\"card-text\">\n                        <b>Ejemplo de refactorización del manejo de excepciones:</b>\n                        <pre>\n<code>\nprivate IActionResult HandleException(Exception ex, RespuestaAPI respuesta, HttpStatusCode statusCode)\n{\n    // Log the exception details (without exposing sensitive information to the client)\n    // _logger.LogError(ex, \"An error occurred.\");\n\n    respuesta.StatusCode = statusCode;\n    respuesta.IsSuccess = false;\n    respuesta.ErrorMessages.Add(\"An unexpected error occurred. Please try again later.\"); // Mensaje genérico\n\n    return StatusCode((int)statusCode, respuesta);\n}\n</code>\n                        </pre>\n                        Y luego, en los métodos:\n                        <pre>\n<code>\ncatch (Exception ex)\n{\n    return HandleException(ex, respuesta, HttpStatusCode.InternalServerError);\n}\n</code>\n                        </pre>\n                         o mejor aun para cada tipo de error\n\n                         <pre>\n<code>\ncatch (KeyNotFoundException ex)\n{\n    respuesta.StatusCode = HttpStatusCode.NotFound;\n    respuesta.IsSuccess = false;\n    respuesta.ErrorMessages.Add($\"Error: {ex.Message}\");\n    return NotFound(respuesta);\n}\ncatch (ArgumentException ex)\n{\n   return HandleException(ex, respuesta, HttpStatusCode.BadRequest);\n}\ncatch (Exception ex)\n{\n    return HandleException(ex, respuesta, HttpStatusCode.InternalServerError);\n}\n</code>\n                        </pre>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n```', '2025-06-24 06:00:40', 6),
(13, 'ProductController.cs', 'Detectado por GPT', '﻿using FermaOrders.API.Controllers.Response;\r\nusing FermaOrders.Application.Dto.Components.Product;\r\nusing FermaOrders.Application.Interface.Components;\r\nusing FermaOrders.Application.Service.Components;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing System.Net;\r\n\r\nnamespace FermaOrders.API.Controllers.Application\r\n{\r\n    [Route(\"api/[controller]\")]\r\n    [ApiController]\r\n    public class ProductController : ControllerBase\r\n    {\r\n        private readonly IProductService _productService;\r\n\r\n        public ProductController(IProductService productService)\r\n        {\r\n            _productService = productService;\r\n        }\r\n\r\n        // Crear un asiento\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpPost]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> CreateProductAsync([FromBody] ProductCreateDto productDto)\r\n        {\r\n            var response = new RespuestaAPI();\r\n            try\r\n            {\r\n                if (productDto == null)\r\n                {\r\n                    return BadRequest(\"Invalid Product data.\");\r\n                }\r\n\r\n                var product = await _productService.CreateProductAsync(productDto);\r\n                response.Result = product;\r\n                response.IsSuccess = true;\r\n                response.StatusCode = HttpStatusCode.OK;\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n        }\r\n\r\n        // Obtener un asiento por ID\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpGet(\"{id}\")]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> GetProductByIdAsync(int id)\r\n        {\r\n            var response = new RespuestaAPI();\r\n\r\n            try\r\n            {\r\n                var product = await _productService.GetProductIdAsync(id);\r\n                if (product == null)\r\n                {\r\n                    return BadRequest(\"Invalid Product data.\");\r\n                }\r\n\r\n                response.Result = product;\r\n                response.IsSuccess = true;\r\n                response.StatusCode = HttpStatusCode.OK;\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n\r\n\r\n        }\r\n\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpPut(\"{id}\")]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status400BadRequest)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> UpdateProductAsync(int id, [FromBody] ProductUpdateDto productDto)\r\n        {\r\n            var response = new RespuestaAPI();\r\n\r\n            try\r\n            {\r\n                if (id != productDto.Id)\r\n                {\r\n                    return BadRequest(\"ID mismatch.\");\r\n                }\r\n                await _productService.UpdateProductDto(productDto);\r\n\r\n                response.IsSuccess = true;\r\n                response.StatusCode = HttpStatusCode.OK;\r\n                response.Result = new { message = \"Product updated successfully.\" };\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n        }\r\n\r\n        // Eliminar un asiento\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpDelete(\"{id}\")]\r\n        [ProducesResponseType(StatusCodes.Status204NoContent)]\r\n        [ProducesResponseType(StatusCodes.Status404NotFound)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> DeleteProductAsync(int id)\r\n        {\r\n            var response = new RespuestaAPI();\r\n            try\r\n            {\r\n                await _productService.DeleteProductAsync(id);\r\n                return NoContent();\r\n            }\r\n            catch (KeyNotFoundException ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.NotFound;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return NotFound(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n        }\r\n\r\n\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpGet(\"products\")]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> GetProductList()\r\n        {\r\n            var response = new RespuestaAPI();\r\n\r\n            try\r\n            {\r\n                var products = await _productService.ListProduct();\r\n\r\n                response.Result = products;\r\n                response.IsSuccess = true;\r\n                response.StatusCode = (HttpStatusCode)(int)HttpStatusCode.OK;\r\n\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.IsSuccess = false;\r\n                response.StatusCode = (HttpStatusCode)(int)HttpStatusCode.InternalServerError;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n\r\n                return StatusCode(500, response);\r\n            }\r\n\r\n            // Redundante, pero garantiza que todas las rutas retornan algo\r\n            // No debería alcanzarse nunca\r\n            return StatusCode(500, new RespuestaAPI\r\n            {\r\n                IsSuccess = false,\r\n                StatusCode = (HttpStatusCode)(int)HttpStatusCode.InternalServerError,\r\n                ErrorMessages = new List<string> { \"Ocurrió un error inesperado.\" }\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n', '```html\n<div class=\"container\">\n  <div class=\"card border-danger\">\n    <div class=\"card-header bg-danger text-white\">\n      Vulnerabilidades de Seguridad\n    </div>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">1. Falta de Validación de Entrada (GetProductByIdAsync y otros)</h5>\n      <p class=\"card-text\">\n        <b>Línea Aproximada:</b> Varias (GetProductByIdAsync, UpdateProductAsync, etc.).\n        <br>\n        <b>Descripción:</b> Aunque se verifica si `productDto` es nulo en `CreateProductAsync`, la validación de los datos dentro de `productDto` (tamaño de cadena, rango de valores, formato, etc.) es ausente en la mayoría de los métodos. Esto podría permitir la inyección de datos maliciosos.  En `GetProductByIdAsync`, aunque se verifica si `product` es null, no hay validación del parámetro `id`.\n        <br>\n        <b>Mitigación:</b> Utilizar Data Annotations en los DTOs (como `[Required]`, `[StringLength]`, `[Range]`, `[RegularExpression]`) y verificar `ModelState.IsValid` en el controlador.  Para `id`, validar que sea un entero positivo y, si la lógica lo requiere, que exista en la base de datos antes de cualquier operación.\n        <br>\n        <b>Ejemplo de mejora:</b>\n        <pre><code>\n[HttpGet(\"{id}\")]\npublic async Task<IActionResult> GetProductByIdAsync(int id)\n{\n    if (id <= 0)\n    {\n        return BadRequest(\"El ID del producto debe ser un entero positivo.\");\n    }\n    var response = new RespuestaAPI();\n\n    try\n    {\n        var product = await _productService.GetProductIdAsync(id);\n        if (product == null)\n        {\n            return NotFound(\"Product not found.\");\n        }\n\n        response.Result = product;\n        response.IsSuccess = true;\n        response.StatusCode = HttpStatusCode.OK;\n        return Ok(response);\n    }\n    catch (Exception ex)\n    {\n        response.StatusCode = HttpStatusCode.InternalServerError;\n        response.IsSuccess = false;\n        response.ErrorMessages.Add($\"Error: {ex.Message}\");\n        return StatusCode(500, response);\n    }\n}\n        </code></pre>\n      </p>\n\n      <h5 class=\"card-title\">2. Manejo genérico de excepciones</h5>\n      <p class=\"card-text\">\n        <b>Línea Aproximada:</b> Bloques `catch` en todos los métodos.\n        <br>\n        <b>Descripción:</b> Capturar `Exception` es demasiado amplio.  Esto puede ocultar errores específicos que deberían manejarse de manera diferente (por ejemplo, un error de base de datos podría requerir un reintento). Además, exponer la excepción directamente en el mensaje de error (`ex.Message`) puede revelar información sensible.\n        <br>\n        <b>Mitigación:</b> Capturar excepciones más específicas (como `ArgumentException`, `DbUpdateException`, `KeyNotFoundException`) y manejarlas individualmente.  Para evitar exponer información sensible, registrar la excepción completa con un logger y devolver un mensaje de error genérico al cliente.\n        <br>\n        <b>Ejemplo de mejora:</b>\n        <pre><code>\ntry\n{\n    // ... código ...\n}\ncatch (KeyNotFoundException ex)\n{\n    // Log the exception (ex)\n    response.StatusCode = HttpStatusCode.NotFound;\n    response.IsSuccess = false;\n    response.ErrorMessages.Add(\"Product not found.\"); // Generic message\n    return NotFound(response);\n}\ncatch (DbUpdateException ex)\n{\n    // Log the exception (ex)\n    response.StatusCode = HttpStatusCode.InternalServerError;\n    response.IsSuccess = false;\n    response.ErrorMessages.Add(\"Error while updating the database.\"); // Generic message\n    return StatusCode(500, response);\n}\ncatch (Exception ex)\n{\n    // Log the exception (ex)\n    response.StatusCode = HttpStatusCode.InternalServerError;\n    response.IsSuccess = false;\n    response.ErrorMessages.Add(\"An unexpected error occurred.\"); // Generic message\n    return StatusCode(500, response);\n}\n        </code></pre>\n      </p>\n\n       <h5 class=\"card-title\">3. Posible Vulnerabilidad de Inyección SQL (Depende de la Implementación de _productService)</h5>\n      <p class=\"card-text\">\n        <b>Línea Aproximada:</b> Todas las llamadas a los métodos de `_productService`.\n        <br>\n        <b>Descripción:</b> Si la implementación de `_productService` (especialmente en los métodos `CreateProductAsync`, `GetProductIdAsync`, `UpdateProductDto`, `DeleteProductAsync`, `ListProduct`) construye consultas SQL dinámicamente usando los datos proporcionados en los DTOs (por ejemplo, concatenando cadenas), existe un alto riesgo de inyección SQL.\n        <br>\n        <b>Mitigación:</b>\n        *   Utilizar siempre ORMs (como Entity Framework Core) que parametrizan las consultas SQL.\n        *   Si se usa SQL puro, asegurarse de escapar o parametrizar correctamente todos los valores provenientes del usuario antes de incluirlos en la consulta.\n        <br>\n        <b>Ejemplo de mejora:</b> N/A (depende de la implementación de `_productService`).\n      </p>\n    </div>\n  </div>\n\n  <div class=\"card border-warning mt-3\">\n    <div class=\"card-header bg-warning text-white\">\n      Métricas de Calidad del Código\n    </div>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">1. Duplicación de Código</h5>\n      <p class=\"card-text\">\n        <b>Descripción:</b> Hay una considerable duplicación de código en el manejo de excepciones y la construcción de la respuesta API en cada método del controlador.\n        <br>\n        <b>Mejora:</b> Crear un método auxiliar privado para manejar las excepciones y la construcción de la respuesta API.  Este método podría recibir la acción a ejecutar dentro del `try` y el tipo de excepción a manejar.\n        <br>\n        <b>Ejemplo de mejora:</b>\n        <pre><code>\nprivate async Task<IActionResult> HandleRequestAsync(Func<Task> action)\n{\n    var response = new RespuestaAPI();\n    try\n    {\n        await action();\n        response.IsSuccess = true;\n        response.StatusCode = HttpStatusCode.OK;\n        return Ok(response);\n    }\n    catch (KeyNotFoundException ex)\n    {\n        response.StatusCode = HttpStatusCode.NotFound;\n        response.IsSuccess = false;\n        response.ErrorMessages.Add(\"Resource not found.\");\n        return NotFound(response);\n    }\n    catch (Exception ex)\n    {\n        // Log the exception (ex)\n        response.StatusCode = HttpStatusCode.InternalServerError;\n        response.IsSuccess = false;\n        response.ErrorMessages.Add(\"An unexpected error occurred.\");\n        return StatusCode(500, response);\n    }\n}\n\n// Uso en un método del controlador:\npublic async Task<IActionResult> DeleteProductAsync(int id)\n{\n    return await HandleRequestAsync(async () => await _productService.DeleteProductAsync(id));\n}\n        </code></pre>\n      </p>\n\n      <h5 class=\"card-title\">2. Legibilidad</h5>\n      <p class=\"card-text\">\n        <b>Descripción:</b> El código es relativamente legible, pero puede mejorarse eliminando la duplicación de código y usando nombres de variables más descriptivos si es necesario.\n        <br>\n        <b>Mejora:</b> Aplicar las refactorizaciones mencionadas para reducir la duplicación.  Comentar el código para explicar la lógica compleja si existe.  Mantener la longitud de los métodos corta y enfocada en una sola tarea.\n      </p>\n\n      <h5 class=\"card-title\">3. Acoplamiento</h5>\n      <p class=\"card-text\">\n        <b>Descripción:</b> El controlador tiene un acoplamiento relativamente bajo con las otras capas de la aplicación, gracias al uso de la interfaz `IProductService`. Sin embargo, está fuertemente acoplado al DTO `RespuestaAPI`.\n        <br>\n        <b>Mejora:</b> Considerar el uso de `IActionResult` directamente, en lugar de usar `RespuestaAPI` como intermediario.  En su lugar, retornar `Ok(product)` o `NotFound()`, etc.\n      </p>\n\n      <h5 class=\"card-title\">4. Complejidad Ciclomática</h5>\n      <p class=\"card-text\">\n        <b>Descripción:</b> La complejidad ciclomática de cada método individualmente es baja. Sin embargo, la complejidad general del controlador aumenta debido a la duplicación del manejo de excepciones y la construcción de la respuesta.\n        <br>\n        <b>Mejora:</b> Reducir la duplicación de código con la refactorización sugerida disminuirá la complejidad general del controlador.\n      </p>\n\n      <h5 class=\"card-title\">5. La línea  `response.StatusCode = (HttpStatusCode)(int)HttpStatusCode.OK;` y `response.StatusCode = (HttpStatusCode)(int)HttpStatusCode.InternalServerError;`</h5>\n      <p class=\"card-text\">\n        <b>Descripción:</b> La conversión a `int` y luego a `HttpStatusCode` es redundante.\n        <br>\n        <b>Mejora:</b> Simplificar la asignación directa: `response.StatusCode = HttpStatusCode.OK;` y `response.StatusCode = HttpStatusCode.InternalServerError;`.\n      </p>\n      \n      <h5 class=\"card-title\">6. El bloque `return StatusCode(500, new RespuestaAPI...` es redundante.</h5>\n      <p class=\"card-text\">\n        <b>Descripción:</b> El bloque final dentro de `GetProductList` es redundante.  El `try...catch` garantiza que siempre se retorna una respuesta.\n        <br>\n        <b>Mejora:</b> Eliminar el bloque redundante.\n      </p>\n\n    </div>\n  </div>\n\n  <div class=\'card border-success mt-3\'>\n    <div class=\'card-header bg-success text-white\'>\n      Solución Propuesta\n    </div>\n    <div class=\'card-body\'>\n      <ol>\n        <li><b>Validación de Entrada:</b> Implementar validaciones robustas en los DTOs utilizando Data Annotations y verificar `ModelState.IsValid` en el controlador.</li>\n        <li><b>Manejo Específico de Excepciones:</b> Capturar excepciones específicas en lugar de `Exception` genérica. Registrar las excepciones completas con un logger y devolver mensajes de error genéricos al cliente.</li>\n        <li><b>Refactorización de Código Duplicado:</b> Crear métodos auxiliares privados para manejar la lógica repetitiva (manejo de excepciones, construcción de la respuesta API).</li>\n        <li><b>Abordar la posible Inyección SQL:</b> Confirmar y corregir cualquier potencial vulnerabilidad de inyección SQL en la implementación de `_productService` usando ORMs o parametrización.</li>\n        <li><b>Simplificación del código:</b> Eliminar conversiones innecesarias y bloques de código redundantes.</li>\n      </ol>\n    </div>\n  </div>\n</div>\n```\n', '2025-06-24 06:01:13', 6);
INSERT INTO `vulnerabilidades` (`id`, `archivo`, `tipo_vulnerabilidad`, `codigo_vulnerable`, `solucion_propuesta`, `fecha_subida`, `id_zip`) VALUES
(14, 'CustomerController.cs', 'Detectado por GPT', '﻿using Castle.Core.Resource;\r\nusing FermaOrders.API.Controllers.Response;\r\nusing FermaOrders.Application.Dto.Components.Customer;\r\nusing FermaOrders.Application.Interface.Components;\r\nusing FermaOrders.Application.Service.Components;\r\nusing FermaOrders.Domain.Entities;\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing System.Data;\r\nusing System.Net;\r\n\r\nnamespace FermaOrders.API.Controllers.Application\r\n{\r\n    [Route(\"api/[controller]\")]\r\n    [ApiController]\r\n    public class CustomerController : ControllerBase\r\n    {\r\n        private readonly ICustomerService _customerService;\r\n\r\n        public CustomerController(ICustomerService customerService)\r\n        {\r\n            _customerService = customerService;\r\n        }\r\n\r\n        // Crear un asiento\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpPost]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> CreateCustomerAsync([FromBody] CustomerCreateDto customerDto)\r\n        {\r\n            var response = new RespuestaAPI();\r\n            try\r\n            {\r\n                if (customerDto == null)\r\n                {\r\n                    return BadRequest(\"Invalid customer data.\");\r\n                }\r\n\r\n                var customer = await _customerService.CreateCustomerAsync(customerDto);\r\n                response.Result = customer;\r\n                response.IsSuccess = true;\r\n                response.StatusCode = HttpStatusCode.OK;\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n        }\r\n\r\n        // Obtener un asiento por ID\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpGet(\"{id}\")]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> GetCustomerByIdAsync(int id)\r\n        {\r\n            var response = new RespuestaAPI();\r\n\r\n            try\r\n            {\r\n                var customer = await _customerService.GetCustomerIdAsync(id);\r\n                if (customer == null)\r\n                {\r\n                    return BadRequest(\"Invalid customer data.\");\r\n                }\r\n\r\n                response.Result = customer;\r\n                response.IsSuccess = true;\r\n                response.StatusCode = HttpStatusCode.OK;\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n\r\n            \r\n        }\r\n\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpPut(\"{id}\")]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status400BadRequest)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> UpdateCustomerAsync(int id, [FromBody] CustomerUpdateDto customerDto)\r\n        {\r\n            var response = new RespuestaAPI();\r\n\r\n            try\r\n            {\r\n                if (id != customerDto.Id)\r\n                {\r\n                    return BadRequest(\"ID mismatch.\");\r\n                }\r\n                await _customerService.UpdateCustomerDto(customerDto);\r\n\r\n                response.IsSuccess = true;\r\n                response.StatusCode = HttpStatusCode.OK;\r\n                response.Result = new { message = \"Customer updated successfully.\" };\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n        }\r\n\r\n        // Eliminar un asiento\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpDelete(\"{id}\")]\r\n        [ProducesResponseType(StatusCodes.Status204NoContent)]\r\n        [ProducesResponseType(StatusCodes.Status404NotFound)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> DeleteCustomerAsync(int id)\r\n        {\r\n            var response = new RespuestaAPI();\r\n            try\r\n            {\r\n                await _customerService.DeleteCustomerAsync(id);\r\n                return NoContent();\r\n            }\r\n            catch (KeyNotFoundException ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.NotFound;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return NotFound(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n        }\r\n\r\n\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpGet(\"customer\")]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> GetCustomerList()\r\n        {\r\n            var response = new RespuestaAPI();\r\n\r\n            try\r\n            {\r\n                var customers = await _customerService.ListCustomer();\r\n\r\n                response.Result = customers;\r\n                response.IsSuccess = true;\r\n                response.StatusCode = (HttpStatusCode)(int)HttpStatusCode.OK;\r\n\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.IsSuccess = false;\r\n                response.StatusCode = (HttpStatusCode)(int)HttpStatusCode.InternalServerError;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n\r\n                return StatusCode(500, response);\r\n            }\r\n\r\n            // Redundante, pero garantiza que todas las rutas retornan algo\r\n            // No debería alcanzarse nunca\r\n            return StatusCode(500, new RespuestaAPI\r\n            {\r\n                IsSuccess = false,\r\n                StatusCode = (HttpStatusCode)(int)HttpStatusCode.InternalServerError,\r\n                ErrorMessages = new List<string> { \"Ocurrió un error inesperado.\" }\r\n            });\r\n        }\r\n    }\r\n}\r\n', '```html\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card border-danger mb-3\">\n        <div class=\"card-header bg-danger text-white\">\n          Vulnerabilidades de Seguridad y Calidad del Código\n        </div>\n        <div class=\"card-body\">\n\n          <h5 class=\"card-title\">1. Inyección de Excepciones sin Sanitización en Mensajes de Error</h5>\n          <p class=\"card-text\">\n            <b>Tipo:</b> Revelación de información sensible a través de excepciones.\n          </p>\n          <p class=\"card-text\">\n            <b>Línea Aproximada:</b> En todos los bloques <code>catch</code>, por ejemplo, dentro del método <code>CreateCustomerAsync</code>:\n            <pre><code>response.ErrorMessages.Add($\"Error: {ex.Message}\");</code></pre>\n          </p>\n          <p class=\"card-text\">\n            <b>Descripción:</b> Incluir el mensaje completo de la excepción directamente en la respuesta API puede revelar información sensible sobre la infraestructura interna, rutas de archivos, nombres de bases de datos, etc.  Esto puede ser explotado por atacantes para obtener información valiosa sobre el sistema.\n          </p>\n          <p class=\"card-text\">\n            <b>Mitigación:</b> No retornar directamente el mensaje de la excepción al cliente. En su lugar, registrar la excepción completa en un sistema de logging (ej., Serilog, NLog) para análisis interno y retornar un mensaje de error genérico y seguro al cliente, como \"Ocurrió un error inesperado. Consulte los registros para más detalles.\".\n          </p>\n          <p class=\"card-text\">\n            <b>Métricas de Calidad:</b> Mejora la seguridad (prevención de revelación de información) y la mantenibilidad (al facilitar el diagnóstico interno sin exponer detalles sensibles).\n          </p>\n\n          <h5 class=\"card-title\">2. Manejo Inconsistente de Errores en <code>GetCustomerByIdAsync</code></h5>\n          <p class=\"card-text\">\n            <b>Tipo:</b> Posible excepción no controlada.\n          </p>\n          <p class=\"card-text\">\n            <b>Línea Aproximada:</b>\n            <pre><code>\n              var customer = await _customerService.GetCustomerIdAsync(id);\n              if (customer == null)\n              {\n                  return BadRequest(\"Invalid customer data.\");\n              }\n            </code></pre>\n          </p>\n          <p class=\"card-text\">\n            <b>Descripción:</b> Si <code>_customerService.GetCustomerIdAsync(id)</code> lanza una excepción *antes* de que se pueda verificar si `customer` es nulo, esta excepción no será capturada dentro del bloque `try...catch` actual. Esto podría resultar en una caída inesperada de la aplicación.\n          </p>\n          <p class=\"card-text\">\n            <b>Mitigación:</b> Asegurarse de que *todo* el código dentro de la acción esté protegido por el bloque <code>try...catch</code>:\n\n          <pre><code>\n            try\n            {\n                var customer = await _customerService.GetCustomerIdAsync(id);\n                if (customer == null)\n                {\n                    return NotFound(\"Customer not found.\"); // Mejor usar NotFound\n                }\n\n                response.Result = customer;\n                response.IsSuccess = true;\n                response.StatusCode = HttpStatusCode.OK;\n                return Ok(response);\n            }\n            catch (Exception ex)\n            {\n                response.StatusCode = HttpStatusCode.InternalServerError;\n                response.IsSuccess = false;\n                response.ErrorMessages.Add(\"An unexpected error occurred.\"); // Mensaje seguro\n                // Loggear la excepción completa (ex) aquí\n                return StatusCode(500, response);\n            }\n          </code></pre>\n          </p>\n          <p class=\"card-text\">\n            <b>Métricas de Calidad:</b>  Mejora la robustez del código, la capacidad de manejo de errores y la confiabilidad.\n          </p>\n\n           <h5 class=\"card-title\">3. Validación Insuficiente en <code>UpdateCustomerAsync</code></h5>\n          <p class=\"card-text\">\n            <b>Tipo:</b> Riesgo de Datos Inconsistentes.\n          </p>\n          <p class=\"card-text\">\n            <b>Línea Aproximada:</b>\n            <pre><code>\n            if (id != customerDto.Id)\n            {\n                return BadRequest(\"ID mismatch.\");\n            }\n            await _customerService.UpdateCustomerDto(customerDto);\n            </code></pre>\n          </p>\n          <p class=\"card-text\">\n            <b>Descripción:</b> Aunque se verifica la coincidencia de IDs, no hay validación adicional sobre el contenido del <code>customerDto</code>. Un atacante podría enviar un <code>customerDto</code> con datos inválidos o maliciosos.\n          </p>\n          <p class=\"card-text\">\n            <b>Mitigación:</b> Implementar validación robusta del <code>customerDto</code> utilizando Data Annotations, FluentValidation u otras bibliotecas de validación.  Validar tipos de datos, rangos, longitudes, formatos, y cualquier otra restricción relevante.\n          </p>\n          <p class=\"card-text\">\n            <b>Métricas de Calidad:</b> Mejora la integridad de los datos, la robustez del código y reduce el riesgo de errores y vulnerabilidades.\n          </p>\n\n          <h5 class=\"card-title\">4. Retorno Redundante al Final de <code>GetCustomerList</code></h5>\n          <p class=\"card-text\">\n            <b>Tipo:</b> Código innecesario.\n          </p>\n          <p class=\"card-text\">\n            <b>Línea Aproximada:</b>\n            <pre><code>\n              return StatusCode(500, new RespuestaAPI\n              {\n                  IsSuccess = false,\n                  StatusCode = (HttpStatusCode)(int)HttpStatusCode.InternalServerError,\n                  ErrorMessages = new List<string> { \"Ocurrió un error inesperado.\" }\n              });\n            </code></pre>\n          </p>\n          <p class=\"card-text\">\n            <b>Descripción:</b> Este bloque de código es inalcanzable ya que todas las posibles rutas de ejecución dentro del método retornan un <code>IActionResult</code> antes de llegar a este punto.\n          </p>\n          <p class=\"card-text\">\n            <b>Mitigación:</b> Eliminar el código redundante.  Esto simplifica el código y mejora la legibilidad.\n          </p>\n          <p class=\"card-text\">\n            <b>Métricas de Calidad:</b> Mejora la legibilidad, mantenibilidad y reduce la complejidad innecesaria.\n          </p>\n\n        </div>\n      </div>\n\n      <div class=\'card border-success\'>\n        <div class=\"card-header bg-success text-white\">\n          Solución Propuesta\n        </div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Refactorización General</h5>\n          <p class=\"card-text\">\n            El siguiente código propone una refactorización que aborda las vulnerabilidades y mejoras de calidad del código identificadas.\n          </p>\n          <pre><code class=\"language-csharp\">\nusing Microsoft.AspNetCore.Authorization;\nusing Microsoft.AspNetCore.Http;\nusing Microsoft.AspNetCore.Mvc;\nusing System;\nusing System.Collections.Generic;\nusing System.Net;\nusing System.Threading.Tasks;\nusing FermaOrders.Application.Dto.Components.Customer;\nusing FermaOrders.Application.Interface.Components;\nusing FermaOrders.API.Controllers.Response;\nusing Microsoft.Extensions.Logging; // Añadido el using\n\nnamespace FermaOrders.API.Controllers.Application\n{\n    [Route(\"api/[controller]\")]\n    [ApiController]\n    public class CustomerController : ControllerBase\n    {\n        private readonly ICustomerService _customerService;\n        private readonly ILogger&lt;CustomerController&gt; _logger; // Inyección del logger\n\n        public CustomerController(ICustomerService customerService, ILogger&lt;CustomerController&gt; logger)\n        {\n            _customerService = customerService;\n            _logger = logger;\n        }\n\n        [Authorize(Roles = \"Admin\")]\n        [HttpPost]\n        [ProducesResponseType(StatusCodes.Status200OK)]\n        [ProducesResponseType(StatusCodes.Status400BadRequest)]\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\n        public async Task&lt;IActionResult&gt; CreateCustomerAsync([FromBody] CustomerCreateDto customerDto)\n        {\n            var response = new RespuestaAPI();\n\n            if (customerDto == null)\n            {\n                return BadRequest(\"Invalid customer data.\");\n            }\n\n            try\n            {\n                var customer = await _customerService.CreateCustomerAsync(customerDto);\n                response.Result = customer;\n                response.IsSuccess = true;\n                response.StatusCode = HttpStatusCode.OK;\n                return Ok(response);\n            }\n            catch (Exception ex)\n            {\n                _logger.LogError(ex, \"Error creating customer.\"); // Log de la excepción completa\n                response.StatusCode = HttpStatusCode.InternalServerError;\n                response.IsSuccess = false;\n                response.ErrorMessages.Add(\"An unexpected error occurred.\"); // Mensaje genérico\n                return StatusCode(500, response);\n            }\n        }\n\n        [Authorize(Roles = \"Admin\")]\n        [HttpGet(\"{id}\")]\n        [ProducesResponseType(StatusCodes.Status200OK)]\n        [ProducesResponseType(StatusCodes.Status404NotFound)]\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\n        public async Task&lt;IActionResult&gt; GetCustomerByIdAsync(int id)\n        {\n            var response = new RespuestaAPI();\n\n            try\n            {\n                var customer = await _customerService.GetCustomerIdAsync(id);\n                if (customer == null)\n                {\n                    return NotFound(\"Customer not found.\");\n                }\n\n                response.Result = customer;\n                response.IsSuccess = true;\n                response.StatusCode = HttpStatusCode.OK;\n                return Ok(response);\n            }\n            catch (Exception ex)\n            {\n                _logger.LogError(ex, \"Error retrieving customer with ID {CustomerId}.\", id);\n                response.StatusCode = HttpStatusCode.InternalServerError;\n                response.IsSuccess = false;\n                response.ErrorMessages.Add(\"An unexpected error occurred.\");\n                return StatusCode(500, response);\n            }\n        }\n\n\n        [Authorize(Roles = \"Admin\")]\n        [HttpPut(\"{id}\")]\n        [ProducesResponseType(StatusCodes.Status200OK)]\n        [ProducesResponseType(StatusCodes.Status400BadRequest)]\n        [ProducesResponseType(StatusCodes.Status404NotFound)]\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\n        public async Task&lt;IActionResult&gt; UpdateCustomerAsync(int id, [FromBody] CustomerUpdateDto customerDto)\n        {\n            var response = new RespuestaAPI();\n\n            if (customerDto == null)\n            {\n                return BadRequest(\"Invalid customer data.\");\n            }\n\n            if (id != customerDto.Id)\n            {\n                return BadRequest(\"ID mismatch.\");\n            }\n\n            // TODO: Implementar validación del customerDto usando Data Annotations o FluentValidation.\n\n            try\n            {\n                await _customerService.UpdateCustomerDto(customerDto);\n\n                response.IsSuccess = true;\n                response.StatusCode = HttpStatusCode.OK;\n                response.Result = new { message = \"Customer updated successfully.\" };\n                return Ok(response);\n            }\n            catch (KeyNotFoundException ex)\n            {\n                _logger.LogError(ex, \"Customer with ID {CustomerId} not found.\", id);\n                return NotFound(); // No es necesario usar la response si ya retornas NotFound.\n            }\n            catch (Exception ex)\n            {\n                _logger.LogError(ex, \"Error updating customer with ID {CustomerId}.\", id);\n                response.StatusCode = HttpStatusCode.InternalServerError;\n                response.IsSuccess = false;\n                response.ErrorMessages.Add(\"An unexpected error occurred.\");\n                return StatusCode(500, response);\n            }\n        }\n\n\n        [Authorize(Roles = \"Admin\")]\n        [HttpDelete(\"{id}\")]\n        [ProducesResponseType(StatusCodes.Status204NoContent)]\n        [ProducesResponseType(StatusCodes.Status404NotFound)]\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\n        public async Task&lt;IActionResult&gt; DeleteCustomerAsync(int id)\n        {\n            try\n            {\n                await _customerService.DeleteCustomerAsync(id);\n                return NoContent();\n            }\n            catch (KeyNotFoundException ex)\n            {\n                _logger.LogError(ex, \"Customer with ID {CustomerId} not found.\", id);\n                return NotFound();\n            }\n            catch (Exception ex)\n            {\n                _logger.LogError(ex, \"Error deleting customer with ID {CustomerId}.\", id);\n                return StatusCode(500, new RespuestaAPI { IsSuccess = false, StatusCode = HttpStatusCode.InternalServerError, ErrorMessages = new List&lt;string&gt; { \"An unexpected error occurred.\" } });\n            }\n        }\n\n        [Authorize(Roles = \"Admin\")]\n        [HttpGet(\"customer\")]\n        [ProducesResponseType(StatusCodes.Status200OK)]\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\n        public async Task&lt;IActionResult&gt; GetCustomerList()\n        {\n            var response = new RespuestaAPI();\n\n            try\n            {\n                var customers = await _customerService.ListCustomer();\n\n                response.Result = customers;\n                response.IsSuccess = true;\n                response.StatusCode = HttpStatusCode.OK;\n\n                return Ok(response);\n            }\n            catch (Exception ex)\n            {\n                _logger.LogError(ex, \"Error retrieving customer list.\");\n                response.IsSuccess = false;\n                response.StatusCode = HttpStatusCode.InternalServerError;\n                response.ErrorMessages.Add(\"An unexpected error occurred.\");\n\n                return StatusCode(500, response);\n            }\n\n            // Código redundante eliminado.\n        }\n    }\n}\n</code></pre>\n          <p class=\"card-text\">\n            <b>Cambios Clave:</b>\n            <ul>\n              <li>Inyección de <code>ILogger</code> para registro robusto de excepciones.</li>\n              <li>Mensajes de error genéricos en las respuestas de la API.</li>\n              <li>Registro de la excepción completa utilizando el logger para análisis interno.</li>\n              <li>Eliminación del retorno redundante en <code>GetCustomerList</code>.</li>\n              <li>Manejo de excepciones extendido para cubrir todo el código dentro de las acciones.</li>\n              <li>Manejo de errores más conciso y eficiente (ej., usar <code>NotFound()</code> directamente).</li>\n            </ul>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n', '2025-06-24 07:10:01', 7),
(15, 'OrdersController.cs', 'Detectado por GPT', '﻿using Azure;\r\nusing FermaOrders.API.Controllers.Response;\r\nusing FermaOrders.Application.Dto.Application;\r\nusing FermaOrders.Application.Dto.Components.Customer;\r\nusing FermaOrders.Application.Interface.Application;\r\nusing FermaOrders.Domain.Entities;\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing System.Net;\r\n\r\nnamespace FermaOrders.API.Controllers.Application\r\n{\r\n    [Route(\"api/[controller]\")]\r\n    [ApiController]\r\n    public class OrdersController : ControllerBase\r\n    {\r\n        private readonly IOrderService _orderService;\r\n\r\n        public OrdersController(IOrderService orderService)\r\n        {\r\n            _orderService = orderService;\r\n        }\r\n\r\n        [Authorize(Roles = \"Admin,Empleado\")]\r\n        [HttpPost]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> CreateOrderAsync([FromBody] OrderDto orderDto)\r\n        {\r\n            var response = new RespuestaAPI();\r\n            try\r\n            {\r\n                if (orderDto == null)\r\n                {\r\n                    return BadRequest(\"Invalid order data.\");\r\n                }\r\n\r\n                var order = await _orderService.CreateOrderAsync(orderDto); // Aquí el await\r\n                response.Result = order;\r\n                response.IsSuccess = true;\r\n                response.StatusCode = HttpStatusCode.OK;\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n        }\r\n\r\n        [Authorize(Roles = \"Admin,Empleado\")]\r\n        [HttpGet(\"orderitems/{orderId}\")]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> GetOrderItemsByOrderIdAsync(int orderId)\r\n        {\r\n            var respuesta = new RespuestaAPI();\r\n            try\r\n            {\r\n                var items = await _orderService.GetOrderItemByOrderAsync(orderId);\r\n\r\n                respuesta.StatusCode = HttpStatusCode.OK;\r\n                respuesta.IsSuccess = true;\r\n                respuesta.Result = items;\r\n\r\n                return Ok(respuesta);\r\n            }\r\n            catch (KeyNotFoundException ex)\r\n            {\r\n                respuesta.StatusCode = HttpStatusCode.NotFound;\r\n                respuesta.IsSuccess = false;\r\n                respuesta.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return NotFound(respuesta);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                respuesta.StatusCode = HttpStatusCode.InternalServerError;\r\n                respuesta.IsSuccess = false;\r\n                respuesta.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, respuesta);\r\n            }\r\n        }\r\n\r\n\r\n        [Authorize(Roles = \"Admin,Empleado\")]\r\n        [HttpGet(\"customers/{customerId}\")]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> ListOrderByCustomer(int customerId)\r\n        {\r\n            var respuesta = new RespuestaAPI();\r\n            try\r\n            {\r\n                var orders = await _orderService.ListOrderByCustomer(customerId);\r\n\r\n                respuesta.StatusCode = HttpStatusCode.OK;\r\n                respuesta.IsSuccess = true;\r\n                respuesta.Result = orders;\r\n\r\n                return Ok(respuesta);\r\n            }\r\n            catch (KeyNotFoundException ex)\r\n            {\r\n                respuesta.StatusCode = HttpStatusCode.NotFound;\r\n                respuesta.IsSuccess = false;\r\n                respuesta.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return NotFound(respuesta);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                respuesta.StatusCode = HttpStatusCode.InternalServerError;\r\n                respuesta.IsSuccess = false;\r\n                respuesta.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, respuesta);\r\n            }\r\n        }\r\n    }\r\n}\r\n', '```html\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card border-danger\">\n                <div class=\"card-header bg-danger text-white\">\n                    Análisis de Vulnerabilidades y Calidad del Código\n                </div>\n                <div class=\"card-body\">\n\n                    <h5 class=\"card-title\">Posibles Vulnerabilidades</h5>\n                    <p class=\"card-text\">\n\n                    <ul>\n                        <li>\n                            <strong>Vulnerabilidad:</strong> Protección Insuficiente contra Inyección de Dependencias Maliciosas.\n                            <br>\n                            <strong>Línea Aproximada:</strong> Constructor de `OrdersController`:\n                            <pre><code>public OrdersController(IOrderService orderService)</code></pre>\n                            <strong>Descripción:</strong> Aunque el código usa inyección de dependencias (DI), no hay una validación explícita sobre la implementación de `IOrderService` que se inyecta. Un atacante podría, en teoría (dependiendo de cómo se configure la DI y se gestione el ciclo de vida de los objetos), registrar una implementación maliciosa de `IOrderService` que comprometa la aplicación.\n                            <br>\n                            <strong>Mitigación:</strong>\n                            <ul>\n                                <li>Validar la implementación de `IOrderService` en el momento de la inyección (más difícil, pero posible con configuraciones de DI avanzadas).</li>\n                                <li>Asegurarse de que el contenedor de DI esté configurado de manera segura, evitando el registro de implementaciones no autorizadas de `IOrderService` en entornos de producción.  Controlar estrictamente el acceso al código que configura el contenedor de DI.</li>\n                                <li>Aplicar el principio de mínimo privilegio. El código inyectado debe tener los mínimos permisos necesarios.</li>\n                            </ul>\n                            <strong>Mejora de Métricas:</strong> No directamente relacionado con las métricas de calidad estándar, pero mejora la seguridad, que es una dimensión importante de la calidad general del código.\n                        </li>\n                        <li>\n                            <strong>Vulnerabilidad:</strong> Falta de validación robusta de entrada en `ListOrderByCustomer`.\n                            <br>\n                            <strong>Línea Aproximada:</strong>\n                            <pre><code>public async Task&lt;IActionResult&gt; ListOrderByCustomer(int customerId)</code></pre>\n                            <strong>Descripción:</strong> El parámetro `customerId` es un entero que podría ser negativo o un valor extremadamente grande, lo que podría causar problemas en la consulta a la base de datos o en el servicio.\n                            <br>\n                            <strong>Mitigación:</strong>\n                            <ul>\n                                <li>Validar el `customerId` para asegurar que sea un valor positivo y dentro de un rango razonable. Devolver un `BadRequest` si la validación falla.</li>\n                                <li>Considerar el uso de un tipo de dato más específico si el rango de `customerId` está bien definido.</li>\n                            </ul>\n                            <strong>Mejora de Métricas:</strong> Mejora la robustez del código y reduce la probabilidad de errores inesperados.\n                        </li>\n\n                        <li>\n                            <strong>Vulnerabilidad:</strong> Posible Denial of Service (DoS) por excepciones no manejadas.\n                            <br>\n                            <strong>Línea Aproximada:</strong> Bloques `catch` generales en todos los métodos.\n                            <br>\n                            <strong>Descripción:</strong> Capturar todas las excepciones (`catch (Exception ex)`) y simplemente retornar un error 500 puede enmascarar problemas subyacentes.  Si la aplicación encuentra excepciones de forma continua (por ejemplo, por un ataque deliberado que intenta forzar excepciones), esto podría consumir recursos y resultar en un DoS.\n                            <br>\n                            <strong>Mitigación:</strong>\n                            <ul>\n                                <li>Registrar adecuadamente la excepción (usando un logger).</li>\n                                <li>Considerar la implementación de un circuito breaker para prevenir que llamadas repetidas a un servicio que falla puedan tumbar la aplicación.</li>\n                                <li>Manejar excepciones específicas en lugar de capturar `Exception` de forma general.</li>\n                            </ul>\n                            <strong>Mejora de Métricas:</strong> Mejora la mantenibilidad y la observabilidad del código.\n                        </li>\n\n                        <li>\n                            <strong>Vulnerabilidad:</strong> Falta de paginación en `ListOrderByCustomer`.\n                            <br>\n                            <strong>Línea Aproximada:</strong>\n                            <pre><code>var orders = await _orderService.ListOrderByCustomer(customerId);</code></pre>\n                            <strong>Descripción:</strong> Si un cliente tiene una gran cantidad de órdenes, devolverlas todas en una sola respuesta puede ser ineficiente y consumir muchos recursos del servidor.\n                            <br>\n                            <strong>Mitigación:</strong>\n                            <ul>\n                                <li>Implementar paginación en el método `ListOrderByCustomer`. Permitir que el cliente especifique el número de resultados por página y el número de página.</li>\n                            </ul>\n                            <strong>Mejora de Métricas:</strong> Mejora el rendimiento y la escalabilidad de la API.\n                        </li>\n\n                    </ul>\n                    </p>\n\n                    <h5 class=\"card-title\">Métricas de Calidad del Código</h5>\n                    <p class=\"card-text\">\n                    <ul>\n                        <li>\n                            <strong>Complejidad Ciclomática:</strong> Los métodos son relativamente simples, pero los bloques `try-catch` podrían aumentar la complejidad.\n                            Mejora: Refactorizar el manejo de excepciones en un middleware o filtro para evitar la duplicación de código.\n                        </li>\n                        <li>\n                            <strong>Duplicación de Código:</strong>  Existe duplicación en el manejo de excepciones y en la construcción de la respuesta API en cada método.\n                            Mejora: Crear un método auxiliar o un filtro para manejar la construcción de la respuesta API y el manejo de excepciones.\n                        </li>\n                        <li>\n                            <strong>Legibilidad:</strong> El código es relativamente legible, pero el uso de nombres inconsistentes (ej. `respuesta` vs `response`) dificulta la comprensión.\n                            Mejora: Estandarizar los nombres de las variables y los métodos en todo el código.  Usar nombres en inglés consistentemente.\n                        </li>\n                        <li>\n                            <strong>Acoplamiento:</strong> El controlador depende de `IOrderService`. Este acoplamiento es necesario, pero se puede reducir aún más utilizando abstracciones adicionales si es necesario.\n                            Mejora: Asegurarse de que `IOrderService` defina una interfaz clara y concisa, y evitar que el controlador acceda directamente a detalles de implementación del servicio.\n                        </li>\n                    </ul>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container mt-3\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\'card border-success\'>\n                <div class=\"card-header bg-success text-white\">\n                    Solución Propuesta\n                </div>\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">Refactorización para Seguridad y Calidad</h5>\n                    <p class=\"card-text\">\n\n                        1.  **Crear un Middleware para el Manejo de Excepciones:**\n                        Para evitar la duplicación del manejo de excepciones en cada método del controlador, se puede crear un middleware que capture todas las excepciones no manejadas y construya la respuesta de error adecuada. Esto centraliza el manejo de excepciones y reduce la duplicación de código.\n\n                        2.  **Crear un Helper para la Respuesta API:**\n                        Similar al manejo de excepciones, la construcción de la respuesta API (`RespuestaAPI`) es repetitiva. Un helper method o una clase abstracta base para los controladores puede encargarse de esto.\n\n                        3.  **Validación de Entrada con FluentValidation:**\n                        Utilizar FluentValidation para validar los objetos DTO (`OrderDto`) antes de pasarlos al servicio. Esto permite una validación más declarativa y fácil de mantener que la validación manual.\n\n                        4.  **Implementar Paginación:**\n                        Agregar parámetros para la paginación (`pageNumber`, `pageSize`) al método `ListOrderByCustomer` y al servicio correspondiente.\n\n                        5.  **Logger:**\n                        Usar un logger(Nlog, Serilog, etc) para registrar los errores y las excepciones de forma centralizada.\n\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n```\n', '2025-06-24 07:10:44', 7);
INSERT INTO `vulnerabilidades` (`id`, `archivo`, `tipo_vulnerabilidad`, `codigo_vulnerable`, `solucion_propuesta`, `fecha_subida`, `id_zip`) VALUES
(16, 'ProductController.cs', 'Detectado por GPT', '﻿using FermaOrders.API.Controllers.Response;\r\nusing FermaOrders.Application.Dto.Components.Product;\r\nusing FermaOrders.Application.Interface.Components;\r\nusing FermaOrders.Application.Service.Components;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing Microsoft.AspNetCore.Http;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing System.Net;\r\n\r\nnamespace FermaOrders.API.Controllers.Application\r\n{\r\n    [Route(\"api/[controller]\")]\r\n    [ApiController]\r\n    public class ProductController : ControllerBase\r\n    {\r\n        private readonly IProductService _productService;\r\n\r\n        public ProductController(IProductService productService)\r\n        {\r\n            _productService = productService;\r\n        }\r\n\r\n        // Crear un asiento\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpPost]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> CreateProductAsync([FromBody] ProductCreateDto productDto)\r\n        {\r\n            var response = new RespuestaAPI();\r\n            try\r\n            {\r\n                if (productDto == null)\r\n                {\r\n                    return BadRequest(\"Invalid Product data.\");\r\n                }\r\n\r\n                var product = await _productService.CreateProductAsync(productDto);\r\n                response.Result = product;\r\n                response.IsSuccess = true;\r\n                response.StatusCode = HttpStatusCode.OK;\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n        }\r\n\r\n        // Obtener un asiento por ID\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpGet(\"{id}\")]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> GetProductByIdAsync(int id)\r\n        {\r\n            var response = new RespuestaAPI();\r\n\r\n            try\r\n            {\r\n                var product = await _productService.GetProductIdAsync(id);\r\n                if (product == null)\r\n                {\r\n                    return BadRequest(\"Invalid Product data.\");\r\n                }\r\n\r\n                response.Result = product;\r\n                response.IsSuccess = true;\r\n                response.StatusCode = HttpStatusCode.OK;\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n\r\n\r\n        }\r\n\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpPut(\"{id}\")]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status400BadRequest)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> UpdateProductAsync(int id, [FromBody] ProductUpdateDto productDto)\r\n        {\r\n            var response = new RespuestaAPI();\r\n\r\n            try\r\n            {\r\n                if (id != productDto.Id)\r\n                {\r\n                    return BadRequest(\"ID mismatch.\");\r\n                }\r\n                await _productService.UpdateProductDto(productDto);\r\n\r\n                response.IsSuccess = true;\r\n                response.StatusCode = HttpStatusCode.OK;\r\n                response.Result = new { message = \"Product updated successfully.\" };\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n        }\r\n\r\n        // Eliminar un asiento\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpDelete(\"{id}\")]\r\n        [ProducesResponseType(StatusCodes.Status204NoContent)]\r\n        [ProducesResponseType(StatusCodes.Status404NotFound)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> DeleteProductAsync(int id)\r\n        {\r\n            var response = new RespuestaAPI();\r\n            try\r\n            {\r\n                await _productService.DeleteProductAsync(id);\r\n                return NoContent();\r\n            }\r\n            catch (KeyNotFoundException ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.NotFound;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return NotFound(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.StatusCode = HttpStatusCode.InternalServerError;\r\n                response.IsSuccess = false;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n                return StatusCode(500, response);\r\n            }\r\n        }\r\n\r\n\r\n        [Authorize(Roles = \"Admin\")]\r\n        [HttpGet(\"products\")]\r\n        [ProducesResponseType(StatusCodes.Status200OK)]\r\n        [ProducesResponseType(StatusCodes.Status403Forbidden)]\r\n        [ProducesResponseType(StatusCodes.Status500InternalServerError)]\r\n        public async Task<IActionResult> GetProductList()\r\n        {\r\n            var response = new RespuestaAPI();\r\n\r\n            try\r\n            {\r\n                var products = await _productService.ListProduct();\r\n\r\n                response.Result = products;\r\n                response.IsSuccess = true;\r\n                response.StatusCode = (HttpStatusCode)(int)HttpStatusCode.OK;\r\n\r\n                return Ok(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                response.IsSuccess = false;\r\n                response.StatusCode = (HttpStatusCode)(int)HttpStatusCode.InternalServerError;\r\n                response.ErrorMessages.Add($\"Error: {ex.Message}\");\r\n\r\n                return StatusCode(500, response);\r\n            }\r\n\r\n            // Redundante, pero garantiza que todas las rutas retornan algo\r\n            // No debería alcanzarse nunca\r\n            return StatusCode(500, new RespuestaAPI\r\n            {\r\n                IsSuccess = false,\r\n                StatusCode = (HttpStatusCode)(int)HttpStatusCode.InternalServerError,\r\n                ErrorMessages = new List<string> { \"Ocurrió un error inesperado.\" }\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n', '```html\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card\">\n                <div class=\"card-header bg-danger text-white\">\n                    Análisis de Vulnerabilidades y Métricas de Calidad del Código\n                </div>\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">Resumen</h5>\n                    <p class=\"card-text\">\n                        El código presenta un manejo básico de excepciones y una estructura CRUD para productos. La autenticación y autorización se implementan mediante roles. Sin embargo, se identifican áreas de mejora en cuanto a manejo de errores, validación de datos y consistencia.\n                    </p>\n\n                    <div class=\"card mt-3\">\n                        <div class=\"card-header bg-warning\">\n                            Vulnerabilidades de Seguridad\n                        </div>\n                        <div class=\"card-body\">\n                            <ul>\n                                <li>\n                                    <strong>Vulnerabilidad:</strong> Manejo Insuficiente de Errores en `GetProductByIdAsync`\n                                    <br>\n                                    <strong>Línea Aproximada:</strong> Alrededor de la línea 54: `if (product == null)`\n                                    <br>\n                                    <strong>Descripción:</strong>  Si no se encuentra el producto, se devuelve un BadRequest con \"Invalid Product data.\".  Esto puede ser confuso para el cliente.  Ademas,  `BadRequest`  es para errores del  *cliente*  (ej: data mal formada), no errores del  *servidor*  (ej: no se encuentra el dato en la DB).  Es mejor un  `NotFound`\n                                    <br>\n                                    <strong>Mitigación:</strong> Retornar un `NotFound` con un mensaje más informativo (\"Product not found\"). Esto comunica mejor el problema al cliente y sigue las convenciones HTTP.\n                                    <br>\n                                    <strong>Métrica Mejorada:</strong> Claridad del código, disminuyendo la confusión en el manejo de errores.\n                                </li>\n                                <li>\n                                    <strong>Vulnerabilidad:</strong> Falta de validación de entrada robusta en `CreateProductAsync` y `UpdateProductAsync`.\n                                    <br>\n                                    <strong>Línea Aproximada:</strong> Alrededor de la línea 34 y 78.\n                                    <br>\n                                    <strong>Descripción:</strong> Si bien se verifica que `productDto` no sea nulo, no se valida el contenido del DTO. Esto puede llevar a errores inesperados o a la persistencia de datos inválidos.\n                                    <br>\n                                    <strong>Mitigación:</strong> Implementar validaciones más completas en `ProductCreateDto` y `ProductUpdateDto` utilizando Data Annotations u otras bibliotecas de validación.  Validar, por ejemplo, que los campos obligatorios no estén vacíos, que los rangos de valores sean correctos, etc.\n                                    <br>\n                                    <strong>Métrica Mejorada:</strong> Robustez del código, previniendo errores causados por datos inválidos.\n                                </li>\n                                <li>\n                                    <strong>Vulnerabilidad:</strong> Exposición excesiva de detalles de la excepción.\n                                    <br>\n                                    <strong>Línea Aproximada:</strong> Bloques `catch` en todos los métodos.\n                                    <br>\n                                    <strong>Descripción:</strong> En caso de error, se retorna el mensaje completo de la excepción al cliente. Esto puede exponer información sensible sobre la implementación interna.\n                                    <br>\n                                    <strong>Mitigación:</strong> Registrar la excepción para análisis interno, pero retornar al cliente un mensaje genérico de error (ej. \"Ocurrió un error al procesar la solicitud\").  Usar un código de error específico (ej. 503 Service Unavailable) puede ser mas adecuado para algunos tipos de errores.\n                                    <br>\n                                    <strong>Métrica Mejorada:</strong> Seguridad, previniendo la fuga de información sensible.\n                                </li>\n                                 <li>\n                                    <strong>Vulnerabilidad:</strong>  Codigo redundante en  `GetProductList`\n                                    <br>\n                                    <strong>Línea Aproximada:</strong> 132 - 137\n                                    <br>\n                                    <strong>Descripción:</strong>  La función `GetProductList` tiene un bloque de codigo despues del `try-catch`, que es innecesario porque el bloque try-catch siempre retorna un valor. \n                                    <br>\n                                    <strong>Mitigación:</strong> Eliminar el codigo redundante para evitar confusiones y reducir la posibilidad de errores.\n                                    <br>\n                                    <strong>Métrica Mejorada:</strong> Legibilidad y mantenibilidad del código\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    <div class=\"card mt-3\">\n                        <div class=\"card-header bg-info text-white\">\n                            Métricas de Calidad del Código\n                        </div>\n                        <div class=\"card-body\">\n                            <ul>\n                                <li>\n                                    <strong>Complejidad:</strong> La complejidad ciclomática es baja en general.  Sin embargo, el manejo repetitivo de excepciones en cada método podría simplificarse con un middleware global de manejo de excepciones.\n                                    <br>\n                                    <strong>Mejora:</strong> Implementar un middleware para el manejo centralizado de excepciones.\n                                </li>\n                                <li>\n                                    <strong>Duplicación:</strong> Existe duplicación en el manejo de excepciones y la construcción de la respuesta `RespuestaAPI`.\n                                    <br>\n                                    <strong>Mejora:</strong> Crear un método auxiliar para construir la respuesta `RespuestaAPI` y centralizar el manejo de excepciones en un middleware.\n                                </li>\n                                <li>\n                                    <strong>Legibilidad:</strong> El código es relativamente legible, pero la consistencia en los nombres de las variables y el uso de comentarios podrían mejorarse.\n                                    <br>\n                                    <strong>Mejora:</strong> Adoptar una convención de nombres consistente y agregar comentarios relevantes para aclarar la lógica del código.\n                                </li>\n                                <li>\n                                    <strong>Acoplamiento:</strong> El controlador depende directamente de la interfaz `IProductService`.  Esto es adecuado.  El acoplamiento podría reducirse aún más utilizando inyección de dependencias y patrones de diseño.\n                                    <br>\n                                    <strong>Mejora:</strong>  Revisar la necesidad de abstracciones adicionales o patrones de diseño para reducir el acoplamiento entre componentes.\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n```', '2025-06-24 07:11:24', 7),
(17, 'inocente.txt', 'Detectado por GPT', 'Esto es un archivo normal', '```html\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"card\">\n        <div class=\"card-header bg-danger text-white\">\n          Análisis de Vulnerabilidades\n        </div>\n        <div class=\"card-body\">\n          <p class=\"card-text\">Dado que el archivo contiene solo el texto \"Esto es un archivo normal\", no presenta vulnerabilidades de seguridad inherentes.  No hay código ejecutable ni entrada de datos que puedan ser explotadas.  En este contexto, el mayor riesgo sería el mal uso del archivo en un contexto externo, pero eso no es una vulnerabilidad del *contenido* del archivo.</p>\n\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\">\n              <b>Tipo:</b> N/A (Sin vulnerabilidades directas)\n            </li>\n            <li class=\"list-group-item\">\n              <b>Línea:</b> N/A\n            </li>\n            <li class=\"list-group-item\">\n              <b>Mitigación:</b> N/A\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-6\">\n      <div class=\"card\">\n        <div class=\"card-header bg-warning text-white\">\n          Métricas de Calidad del Código\n        </div>\n        <div class=\"card-body\">\n          <p class=\"card-text\">Si bien el archivo no contiene código, podemos evaluar algunas métricas en el contexto de un archivo de texto simple:</p>\n\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\">\n              <b>Complejidad Ciclomática:</b> 0 (No aplicable)\n            </li>\n            <li class=\"list-group-item\">\n              <b>Duplicación:</b> 0 (Una sola línea)\n            </li>\n            <li class=\"list-group-item\">\n              <b>Legibilidad:</b> Alta (Es una frase sencilla)\n            </li>\n            <li class=\"list-group-item\">\n              <b>Acoplamiento:</b> 0 (No depende de otros componentes)\n            </li>\n            <li class=\"list-group-item\">\n              <b>Mantenibilidad:</b> Alta (Fácil de entender y modificar, aunque no hay mucho que mantener)\n            </li>\n          </ul>\n          <p class=\"card-text\">Consideraciones adicionales:  En el contexto de un sistema mayor, este archivo podría ser una configuración, un archivo de datos o un placeholder. Su calidad dependería de cómo se utiliza y se gestiona.</p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row mt-3\">\n    <div class=\"col-md-12\">\n      <div class=\"card border-success\">\n        <div class=\"card-header bg-success text-white\">\n          Solución Propuesta\n        </div>\n        <div class=\"card-body\">\n          <p class=\"card-text\">En este caso, no hay una \"solución\" en el sentido de arreglar un problema de seguridad.  La propuesta depende del *propósito* del archivo:</p>\n\n          <ul>\n            <li><b>Si es un placeholder:</b> Debería ser reemplazado por el contenido real según la necesidad del sistema.</li>\n            <li><b>Si es un archivo de configuración:</b> Asegurar que el formato y contenido sean válidos y seguros según el contexto de la aplicación. Por ejemplo, validación de datos.</li>\n            <li><b>Si es un archivo de datos:</b> Considerar la integridad de los datos y las medidas de seguridad necesarias para proteger la información.</li>\n          </ul>\n          <p class=\"card-text\">En general, se debe prestar atención al contexto en el que este archivo se utiliza y asegurar que se integra de forma segura y confiable en el sistema.</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n', '2025-06-26 04:55:29', 8),
(18, 'inocente.txt', 'Detectado por GPT', 'Esto es un archivo normal', '```html\n<div class=\"container\">\n\n  <div class=\"card border-danger mb-3\">\n    <div class=\"card-header\">Análisis de Vulnerabilidades de Seguridad</div>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">El código provisto es un archivo normal y no contiene código ejecutable.</h5>\n      <p class=\"card-text\">En ausencia de código ejecutable, no existen vulnerabilidades de seguridad inherentemente presentes.</p>\n      <p class=\"card-text\">Sin embargo, es importante considerar el contexto en el que se utiliza este archivo.  Si este archivo, por ejemplo, se utilizara como nombre para un archivo que va a ser ejecutado, la falta de validación en el sistema podría permitir ataques de inyección.  Otro escenario sería que el archivo en sí mismo pudiera ser alterado maliciosamente y reemplazado por otro. En ese caso, una de las maneras de mitigar los riesgos, sería realizar una comprobación hash del archivo.</p>\n    </div>\n  </div>\n\n  <div class=\"card border-warning mb-3\">\n    <div class=\"card-header\">Análisis de Calidad del Código</div>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Métricas de Calidad del Código (Archivo Normal)</h5>\n      <p class=\"card-text\">Dado que el contenido es simplemente \"Esto es un archivo normal\", las métricas de calidad del código son triviales o inaplicables en el sentido tradicional de código ejecutable.</p>\n\n      <ul>\n        <li><b>Complejidad:</b> Extremadamente baja. No hay lógica ni estructuras de control.</li>\n        <li><b>Duplicación:</b> No aplicable, ya que solo hay una línea.</li>\n        <li><b>Legibilidad:</b> Perfecta (la línea es legible).</li>\n        <li><b>Acoplamiento:</b> No aplicable, ya que no interactúa con otros componentes.</li>\n      </ul>\n    </div>\n  </div>\n\n  <div class=\'card border-success\'>\n    <div class=\"card-header\">Solución Propuesta</div>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Acciones Recomendadas</h5>\n      <p class=\"card-text\">Aunque el archivo en sí mismo no presenta vulnerabilidades, es crucial considerar su uso dentro de un sistema más amplio. Si este archivo se utiliza como nombre de archivo o en un contexto donde la integridad es importante, se deben tomar las siguientes medidas:</p>\n\n      <ul>\n        <li><b>Validación de la Entrada (Si aplica):</b> Si el contenido de este archivo es una entrada de usuario o del sistema, validar rigurosamente el contenido antes de usarlo.  Asegurarse de que cumple con las expectativas de formato y contenido.</li>\n        <li><b>Comprobación de Integridad:</b> Si la integridad del archivo es fundamental, implementar mecanismos para verificar que el archivo no ha sido alterado (e.g., usando hash criptográfico).</li>\n        <li><b>Control de Acceso:</b> Limitar el acceso al archivo para evitar modificaciones no autorizadas.</li>\n        <li><b>Consideraciones de Seguridad en el Contexto:</b> Analizar cómo se utiliza este archivo en el contexto general del sistema y abordar cualquier posible vulnerabilidad que pueda surgir de su interacción con otros componentes.</li>\n      </ul>\n\n      <p class=\"card-text\"><b>Mejoras de Calidad (No aplicables directamente):</b> Dado que el archivo es un simple archivo de texto, no hay mejoras de calidad de código aplicables en el sentido tradicional.  Las mejoras se centrarían en asegurar su uso seguro y adecuado dentro del sistema.</p>\n    </div>\n  </div>\n\n</div>\n```\n', '2025-06-26 05:04:23', 9),
(19, 'malicioso.php', 'Detectado por GPT', '<?php echo \'ataque\'; ?>', '```html\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"card border-danger mb-3\">\n        <div class=\"card-header bg-danger text-white\">\n          Vulnerabilidades de Seguridad\n        </div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Cross-Site Scripting (XSS)</h5>\n          <p class=\"card-text\">\n            <b>Línea aproximada:</b> <code>&lt;?php echo \'ataque\'; ?&gt;</code>\n          </p>\n          <p class=\"card-text\">\n            <b>Descripción:</b> Aunque el código parece inofensivo, demuestra la capacidad de imprimir una cadena en la página.  En un escenario real, esta línea podría usarse para imprimir datos controlados por el usuario sin la validación o el escapado adecuados.  Si un atacante lograra inyectar código malicioso (como JavaScript) en la variable que se imprime, este código se ejecutaría en el navegador del usuario, lo que permitiría el robo de cookies, el redireccionamiento a sitios maliciosos o la modificación del contenido de la página.\n          </p>\n          <p class=\"card-text\">\n            <b>Mitigación:</b>\n            <ul>\n              <li><b>Escapado de salida:</b> Utilizar funciones de escapado específicas del contexto para evitar que el código se interprete como HTML, JavaScript u otro tipo de código ejecutable. Por ejemplo, en PHP, se podría usar <code>htmlspecialchars()</code> para escapar caracteres especiales de HTML.</li>\n              <li><b>Validación de entrada:</b>  Validar todos los datos proporcionados por el usuario para asegurar que cumplen con el formato y el tipo esperados.  Rechazar datos que no cumplen con los criterios de validación.</li>\n              <li><b>Codificación:</b> Dependiendo de cómo se use la salida (p.ej., como atributo HTML), utilice la codificación adecuada.</li>\n            </ul>\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-6\">\n      <div class=\"card border-warning mb-3\">\n        <div class=\"card-header bg-warning text-white\">\n          Métricas de Calidad del Código\n        </div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Análisis</h5>\n          <p class=\"card-text\">\n            <b>Complejidad:</b> El código es muy simple, por lo tanto, la complejidad es baja.\n          </p>\n          <p class=\"card-text\">\n            <b>Duplicación:</b> Dada la simplicidad del fragmento, la duplicación no es un problema.\n          </p>\n          <p class=\"card-text\">\n            <b>Legibilidad:</b> El código es legible, ya que es muy corto y directo.\n          </p>\n          <p class=\"card-text\">\n            <b>Acoplamiento:</b> El acoplamiento es mínimo, ya que no hay dependencias externas evidentes en este fragmento. Sin embargo, en un contexto real, el acoplamiento dependería de cómo se integre este código en el resto de la aplicación.\n          </p>\n          <p class=\"card-text\">\n             <b>Mejoras:</b> Aunque el código es simple, podría mejorarse al incluir comentarios que expliquen el propósito de la impresión de la cadena y al implementar el escapado de salida (aunque en este ejemplo no se impriman datos del usuario, demostrar las buenas prácticas).\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card border-success mb-3\">\n        <div class=\"card-header bg-success text-white\">\n          Solución Propuesta\n        </div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Código con escapado de salida</h5>\n          <p class=\"card-text\">\n            Para evitar el XSS, se aplica la función <code>htmlspecialchars()</code> a la salida.\n          </p>\n          <pre><code>&lt;?php echo htmlspecialchars(\'ataque\', ENT_QUOTES, \'UTF-8\'); ?&gt;</code></pre>\n          <p class=\"card-text\">\n            <b>Explicación:</b>\n            <ul>\n              <li><code>htmlspecialchars()</code> convierte caracteres especiales en entidades HTML.</li>\n              <li><code>ENT_QUOTES</code> asegura que tanto las comillas simples como las dobles se escapan.</li>\n              <li><code>UTF-8</code> especifica la codificación de caracteres.</li>\n            </ul>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n', '2025-06-26 05:04:44', 9);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `zip_uploads`
--

CREATE TABLE `zip_uploads` (
  `zip_id` int(11) NOT NULL,
  `zip_name` varchar(25) CHARACTER SET utf8mb4 COLLATE utf8mb4_spanish_ci NOT NULL,
  `upload_date` datetime NOT NULL DEFAULT current_timestamp(),
  `usu_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `zip_uploads`
--

INSERT INTO `zip_uploads` (`zip_id`, `zip_name`, `upload_date`, `usu_id`) VALUES
(1, 'Response.zip', '2025-06-09 21:26:29', 3),
(2, 'IRepositorio.zip', '2025-06-09 21:40:04', 3),
(3, 'prueba.zip', '2025-06-09 21:45:35', 3),
(4, 'Auth.zip', '2025-06-09 22:06:13', 3),
(5, 'Auth.zip', '2025-06-10 11:20:20', 3),
(6, 'Application.zip', '2025-06-24 00:59:39', 3),
(7, 'Application.zip', '2025-06-24 02:09:33', 3),
(8, 'malicioso.zip', '2025-06-25 23:55:15', 1),
(9, 'malicioso.zip', '2025-06-26 00:04:09', 3);

--
-- Índices para tablas volcadas
--

--
-- Indices de la tabla `tm_rol`
--
ALTER TABLE `tm_rol`
  ADD PRIMARY KEY (`ROL_ID`);

--
-- Indices de la tabla `tm_usuario`
--
ALTER TABLE `tm_usuario`
  ADD PRIMARY KEY (`USU_ID`);

--
-- Indices de la tabla `vulnerabilidades`
--
ALTER TABLE `vulnerabilidades`
  ADD PRIMARY KEY (`id`);

--
-- Indices de la tabla `zip_uploads`
--
ALTER TABLE `zip_uploads`
  ADD PRIMARY KEY (`zip_id`);

--
-- AUTO_INCREMENT de las tablas volcadas
--

--
-- AUTO_INCREMENT de la tabla `tm_rol`
--
ALTER TABLE `tm_rol`
  MODIFY `ROL_ID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- AUTO_INCREMENT de la tabla `tm_usuario`
--
ALTER TABLE `tm_usuario`
  MODIFY `USU_ID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;

--
-- AUTO_INCREMENT de la tabla `vulnerabilidades`
--
ALTER TABLE `vulnerabilidades`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=20;

--
-- AUTO_INCREMENT de la tabla `zip_uploads`
--
ALTER TABLE `zip_uploads`
  MODIFY `zip_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=10;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
